
snakefinalproject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000092  00800100  00002454  00002508  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002454  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000009e  00800192  00800192  0000259a  2**0
                  ALLOC
  3 .eeprom       00000001  00810000  00810000  0000259a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  0000259b  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000025f8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000138  00000000  00000000  00002638  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000014ad  00000000  00000000  00002770  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000009f2  00000000  00000000  00003c1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011e5  00000000  00000000  0000460f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003f0  00000000  00000000  000057f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000081b  00000000  00000000  00005be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000878  00000000  00000000  000063ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000e8  00000000  00000000  00006c77  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	62 c0       	rjmp	.+196    	; 0xca <__bad_interrupt>
       6:	00 00       	nop
       8:	60 c0       	rjmp	.+192    	; 0xca <__bad_interrupt>
       a:	00 00       	nop
       c:	5e c0       	rjmp	.+188    	; 0xca <__bad_interrupt>
       e:	00 00       	nop
      10:	5c c0       	rjmp	.+184    	; 0xca <__bad_interrupt>
      12:	00 00       	nop
      14:	5a c0       	rjmp	.+180    	; 0xca <__bad_interrupt>
      16:	00 00       	nop
      18:	58 c0       	rjmp	.+176    	; 0xca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	56 c0       	rjmp	.+172    	; 0xca <__bad_interrupt>
      1e:	00 00       	nop
      20:	54 c0       	rjmp	.+168    	; 0xca <__bad_interrupt>
      22:	00 00       	nop
      24:	52 c0       	rjmp	.+164    	; 0xca <__bad_interrupt>
      26:	00 00       	nop
      28:	50 c0       	rjmp	.+160    	; 0xca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4e c0       	rjmp	.+156    	; 0xca <__bad_interrupt>
      2e:	00 00       	nop
      30:	4c c0       	rjmp	.+152    	; 0xca <__bad_interrupt>
      32:	00 00       	nop
      34:	cb c4       	rjmp	.+2454   	; 0x9cc <__vector_13>
      36:	00 00       	nop
      38:	48 c0       	rjmp	.+144    	; 0xca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	46 c0       	rjmp	.+140    	; 0xca <__bad_interrupt>
      3e:	00 00       	nop
      40:	44 c0       	rjmp	.+136    	; 0xca <__bad_interrupt>
      42:	00 00       	nop
      44:	42 c0       	rjmp	.+132    	; 0xca <__bad_interrupt>
      46:	00 00       	nop
      48:	40 c0       	rjmp	.+128    	; 0xca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3e c0       	rjmp	.+124    	; 0xca <__bad_interrupt>
      4e:	00 00       	nop
      50:	3c c0       	rjmp	.+120    	; 0xca <__bad_interrupt>
      52:	00 00       	nop
      54:	3a c0       	rjmp	.+116    	; 0xca <__bad_interrupt>
      56:	00 00       	nop
      58:	38 c0       	rjmp	.+112    	; 0xca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	36 c0       	rjmp	.+108    	; 0xca <__bad_interrupt>
      5e:	00 00       	nop
      60:	34 c0       	rjmp	.+104    	; 0xca <__bad_interrupt>
      62:	00 00       	nop
      64:	32 c0       	rjmp	.+100    	; 0xca <__bad_interrupt>
      66:	00 00       	nop
      68:	30 c0       	rjmp	.+96     	; 0xca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2e c0       	rjmp	.+92     	; 0xca <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c0       	rjmp	.+88     	; 0xca <__bad_interrupt>
      72:	00 00       	nop
      74:	2a c0       	rjmp	.+84     	; 0xca <__bad_interrupt>
      76:	00 00       	nop
      78:	28 c0       	rjmp	.+80     	; 0xca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	26 c0       	rjmp	.+76     	; 0xca <__bad_interrupt>
      7e:	00 00       	nop
      80:	24 c0       	rjmp	.+72     	; 0xca <__bad_interrupt>
      82:	00 00       	nop
      84:	22 c0       	rjmp	.+68     	; 0xca <__bad_interrupt>
      86:	00 00       	nop
      88:	20 c0       	rjmp	.+64     	; 0xca <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e4 e5       	ldi	r30, 0x54	; 84
      a0:	f4 e2       	ldi	r31, 0x24	; 36
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a2 39       	cpi	r26, 0x92	; 146
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	22 e0       	ldi	r18, 0x02	; 2
      b4:	a2 e9       	ldi	r26, 0x92	; 146
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a0 33       	cpi	r26, 0x30	; 48
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 15 0c 	call	0x182a	; 0x182a <main>
      c6:	0c 94 28 12 	jmp	0x2450	; 0x2450 <_exit>

000000ca <__bad_interrupt>:
      ca:	9a cf       	rjmp	.-204    	; 0x0 <__vectors>

000000cc <time>:
      cc:	fc 01       	movw	r30, r24
      ce:	0f b6       	in	r0, 0x3f	; 63
      d0:	f8 94       	cli
      d2:	60 91 2c 02 	lds	r22, 0x022C	; 0x80022c <__system_time>
      d6:	70 91 2d 02 	lds	r23, 0x022D	; 0x80022d <__system_time+0x1>
      da:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <__system_time+0x2>
      de:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <__system_time+0x3>
      e2:	0f be       	out	0x3f, r0	; 63
      e4:	30 97       	sbiw	r30, 0x00	; 0
      e6:	21 f0       	breq	.+8      	; 0xf0 <time+0x24>
      e8:	60 83       	st	Z, r22
      ea:	71 83       	std	Z+1, r23	; 0x01
      ec:	82 83       	std	Z+2, r24	; 0x02
      ee:	93 83       	std	Z+3, r25	; 0x03
      f0:	08 95       	ret

000000f2 <LCD_ClearScreen>:
	}
	if(coordinates[head->y][head->x] > 1)
	{
		crashed = 1;
	}
}
      f2:	cf 93       	push	r28
      f4:	df 93       	push	r29
      f6:	cd b7       	in	r28, 0x3d	; 61
      f8:	de b7       	in	r29, 0x3e	; 62
      fa:	81 e0       	ldi	r24, 0x01	; 1
      fc:	1a d0       	rcall	.+52     	; 0x132 <LCD_WriteCommand>
      fe:	00 00       	nop
     100:	df 91       	pop	r29
     102:	cf 91       	pop	r28
     104:	08 95       	ret

00000106 <LCD_init>:
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
     10a:	cd b7       	in	r28, 0x3d	; 61
     10c:	de b7       	in	r29, 0x3e	; 62
     10e:	84 e6       	ldi	r24, 0x64	; 100
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	d5 d0       	rcall	.+426    	; 0x2be <delay_ms>
     114:	88 e3       	ldi	r24, 0x38	; 56
     116:	0d d0       	rcall	.+26     	; 0x132 <LCD_WriteCommand>
     118:	86 e0       	ldi	r24, 0x06	; 6
     11a:	0b d0       	rcall	.+22     	; 0x132 <LCD_WriteCommand>
     11c:	8f e0       	ldi	r24, 0x0F	; 15
     11e:	09 d0       	rcall	.+18     	; 0x132 <LCD_WriteCommand>
     120:	81 e0       	ldi	r24, 0x01	; 1
     122:	07 d0       	rcall	.+14     	; 0x132 <LCD_WriteCommand>
     124:	8a e0       	ldi	r24, 0x0A	; 10
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	ca d0       	rcall	.+404    	; 0x2be <delay_ms>
     12a:	00 00       	nop
     12c:	df 91       	pop	r29
     12e:	cf 91       	pop	r28
     130:	08 95       	ret

00000132 <LCD_WriteCommand>:
     132:	cf 93       	push	r28
     134:	df 93       	push	r29
     136:	1f 92       	push	r1
     138:	cd b7       	in	r28, 0x3d	; 61
     13a:	de b7       	in	r29, 0x3e	; 62
     13c:	89 83       	std	Y+1, r24	; 0x01
     13e:	82 e2       	ldi	r24, 0x22	; 34
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	22 e2       	ldi	r18, 0x22	; 34
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	f9 01       	movw	r30, r18
     148:	20 81       	ld	r18, Z
     14a:	2e 7f       	andi	r18, 0xFE	; 254
     14c:	fc 01       	movw	r30, r24
     14e:	20 83       	st	Z, r18
     150:	8b e2       	ldi	r24, 0x2B	; 43
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	29 81       	ldd	r18, Y+1	; 0x01
     156:	fc 01       	movw	r30, r24
     158:	20 83       	st	Z, r18
     15a:	82 e2       	ldi	r24, 0x22	; 34
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	22 e2       	ldi	r18, 0x22	; 34
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	f9 01       	movw	r30, r18
     164:	20 81       	ld	r18, Z
     166:	22 60       	ori	r18, 0x02	; 2
     168:	fc 01       	movw	r30, r24
     16a:	20 83       	st	Z, r18
     16c:	00 00       	nop
     16e:	82 e2       	ldi	r24, 0x22	; 34
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	22 e2       	ldi	r18, 0x22	; 34
     174:	30 e0       	ldi	r19, 0x00	; 0
     176:	f9 01       	movw	r30, r18
     178:	20 81       	ld	r18, Z
     17a:	2d 7f       	andi	r18, 0xFD	; 253
     17c:	fc 01       	movw	r30, r24
     17e:	20 83       	st	Z, r18
     180:	82 e0       	ldi	r24, 0x02	; 2
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	9c d0       	rcall	.+312    	; 0x2be <delay_ms>
     186:	00 00       	nop
     188:	0f 90       	pop	r0
     18a:	df 91       	pop	r29
     18c:	cf 91       	pop	r28
     18e:	08 95       	ret

00000190 <LCD_WriteData>:
     190:	cf 93       	push	r28
     192:	df 93       	push	r29
     194:	1f 92       	push	r1
     196:	cd b7       	in	r28, 0x3d	; 61
     198:	de b7       	in	r29, 0x3e	; 62
     19a:	89 83       	std	Y+1, r24	; 0x01
     19c:	82 e2       	ldi	r24, 0x22	; 34
     19e:	90 e0       	ldi	r25, 0x00	; 0
     1a0:	22 e2       	ldi	r18, 0x22	; 34
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	f9 01       	movw	r30, r18
     1a6:	20 81       	ld	r18, Z
     1a8:	21 60       	ori	r18, 0x01	; 1
     1aa:	fc 01       	movw	r30, r24
     1ac:	20 83       	st	Z, r18
     1ae:	8b e2       	ldi	r24, 0x2B	; 43
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	29 81       	ldd	r18, Y+1	; 0x01
     1b4:	fc 01       	movw	r30, r24
     1b6:	20 83       	st	Z, r18
     1b8:	82 e2       	ldi	r24, 0x22	; 34
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	22 e2       	ldi	r18, 0x22	; 34
     1be:	30 e0       	ldi	r19, 0x00	; 0
     1c0:	f9 01       	movw	r30, r18
     1c2:	20 81       	ld	r18, Z
     1c4:	22 60       	ori	r18, 0x02	; 2
     1c6:	fc 01       	movw	r30, r24
     1c8:	20 83       	st	Z, r18
     1ca:	00 00       	nop
     1cc:	82 e2       	ldi	r24, 0x22	; 34
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	22 e2       	ldi	r18, 0x22	; 34
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	f9 01       	movw	r30, r18
     1d6:	20 81       	ld	r18, Z
     1d8:	2d 7f       	andi	r18, 0xFD	; 253
     1da:	fc 01       	movw	r30, r24
     1dc:	20 83       	st	Z, r18
     1de:	81 e0       	ldi	r24, 0x01	; 1
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	6d d0       	rcall	.+218    	; 0x2be <delay_ms>
     1e4:	00 00       	nop
     1e6:	0f 90       	pop	r0
     1e8:	df 91       	pop	r29
     1ea:	cf 91       	pop	r28
     1ec:	08 95       	ret

000001ee <LCD_DisplayString>:
     1ee:	cf 93       	push	r28
     1f0:	df 93       	push	r29
     1f2:	00 d0       	rcall	.+0      	; 0x1f4 <LCD_DisplayString+0x6>
     1f4:	00 d0       	rcall	.+0      	; 0x1f6 <LCD_DisplayString+0x8>
     1f6:	cd b7       	in	r28, 0x3d	; 61
     1f8:	de b7       	in	r29, 0x3e	; 62
     1fa:	8a 83       	std	Y+2, r24	; 0x02
     1fc:	7c 83       	std	Y+4, r23	; 0x04
     1fe:	6b 83       	std	Y+3, r22	; 0x03
     200:	78 df       	rcall	.-272    	; 0xf2 <LCD_ClearScreen>
     202:	8a 81       	ldd	r24, Y+2	; 0x02
     204:	89 83       	std	Y+1, r24	; 0x01
     206:	0f c0       	rjmp	.+30     	; 0x226 <LCD_DisplayString+0x38>
     208:	89 81       	ldd	r24, Y+1	; 0x01
     20a:	91 e0       	ldi	r25, 0x01	; 1
     20c:	98 0f       	add	r25, r24
     20e:	99 83       	std	Y+1, r25	; 0x01
     210:	41 d0       	rcall	.+130    	; 0x294 <LCD_Cursor>
     212:	8b 81       	ldd	r24, Y+3	; 0x03
     214:	9c 81       	ldd	r25, Y+4	; 0x04
     216:	9c 01       	movw	r18, r24
     218:	2f 5f       	subi	r18, 0xFF	; 255
     21a:	3f 4f       	sbci	r19, 0xFF	; 255
     21c:	3c 83       	std	Y+4, r19	; 0x04
     21e:	2b 83       	std	Y+3, r18	; 0x03
     220:	fc 01       	movw	r30, r24
     222:	80 81       	ld	r24, Z
     224:	b5 df       	rcall	.-150    	; 0x190 <LCD_WriteData>
     226:	8b 81       	ldd	r24, Y+3	; 0x03
     228:	9c 81       	ldd	r25, Y+4	; 0x04
     22a:	fc 01       	movw	r30, r24
     22c:	80 81       	ld	r24, Z
     22e:	88 23       	and	r24, r24
     230:	59 f7       	brne	.-42     	; 0x208 <LCD_DisplayString+0x1a>
     232:	00 00       	nop
     234:	0f 90       	pop	r0
     236:	0f 90       	pop	r0
     238:	0f 90       	pop	r0
     23a:	0f 90       	pop	r0
     23c:	df 91       	pop	r29
     23e:	cf 91       	pop	r28
     240:	08 95       	ret

00000242 <LCD_DisplayStringNoClear>:
     242:	cf 93       	push	r28
     244:	df 93       	push	r29
     246:	00 d0       	rcall	.+0      	; 0x248 <LCD_DisplayStringNoClear+0x6>
     248:	00 d0       	rcall	.+0      	; 0x24a <LCD_DisplayStringNoClear+0x8>
     24a:	cd b7       	in	r28, 0x3d	; 61
     24c:	de b7       	in	r29, 0x3e	; 62
     24e:	8a 83       	std	Y+2, r24	; 0x02
     250:	7c 83       	std	Y+4, r23	; 0x04
     252:	6b 83       	std	Y+3, r22	; 0x03
     254:	8a 81       	ldd	r24, Y+2	; 0x02
     256:	89 83       	std	Y+1, r24	; 0x01
     258:	0f c0       	rjmp	.+30     	; 0x278 <LCD_DisplayStringNoClear+0x36>
     25a:	89 81       	ldd	r24, Y+1	; 0x01
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	98 0f       	add	r25, r24
     260:	99 83       	std	Y+1, r25	; 0x01
     262:	18 d0       	rcall	.+48     	; 0x294 <LCD_Cursor>
     264:	8b 81       	ldd	r24, Y+3	; 0x03
     266:	9c 81       	ldd	r25, Y+4	; 0x04
     268:	9c 01       	movw	r18, r24
     26a:	2f 5f       	subi	r18, 0xFF	; 255
     26c:	3f 4f       	sbci	r19, 0xFF	; 255
     26e:	3c 83       	std	Y+4, r19	; 0x04
     270:	2b 83       	std	Y+3, r18	; 0x03
     272:	fc 01       	movw	r30, r24
     274:	80 81       	ld	r24, Z
     276:	8c df       	rcall	.-232    	; 0x190 <LCD_WriteData>
     278:	8b 81       	ldd	r24, Y+3	; 0x03
     27a:	9c 81       	ldd	r25, Y+4	; 0x04
     27c:	fc 01       	movw	r30, r24
     27e:	80 81       	ld	r24, Z
     280:	88 23       	and	r24, r24
     282:	59 f7       	brne	.-42     	; 0x25a <LCD_DisplayStringNoClear+0x18>
     284:	00 00       	nop
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0
     28e:	df 91       	pop	r29
     290:	cf 91       	pop	r28
     292:	08 95       	ret

00000294 <LCD_Cursor>:
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	1f 92       	push	r1
     29a:	cd b7       	in	r28, 0x3d	; 61
     29c:	de b7       	in	r29, 0x3e	; 62
     29e:	89 83       	std	Y+1, r24	; 0x01
     2a0:	89 81       	ldd	r24, Y+1	; 0x01
     2a2:	81 31       	cpi	r24, 0x11	; 17
     2a4:	20 f4       	brcc	.+8      	; 0x2ae <LCD_Cursor+0x1a>
     2a6:	89 81       	ldd	r24, Y+1	; 0x01
     2a8:	81 58       	subi	r24, 0x81	; 129
     2aa:	43 df       	rcall	.-378    	; 0x132 <LCD_WriteCommand>
     2ac:	03 c0       	rjmp	.+6      	; 0x2b4 <LCD_Cursor+0x20>
     2ae:	89 81       	ldd	r24, Y+1	; 0x01
     2b0:	81 55       	subi	r24, 0x51	; 81
     2b2:	3f df       	rcall	.-386    	; 0x132 <LCD_WriteCommand>
     2b4:	00 00       	nop
     2b6:	0f 90       	pop	r0
     2b8:	df 91       	pop	r29
     2ba:	cf 91       	pop	r28
     2bc:	08 95       	ret

000002be <delay_ms>:
     2be:	cf 93       	push	r28
     2c0:	df 93       	push	r29
     2c2:	00 d0       	rcall	.+0      	; 0x2c4 <delay_ms+0x6>
     2c4:	00 d0       	rcall	.+0      	; 0x2c6 <delay_ms+0x8>
     2c6:	00 d0       	rcall	.+0      	; 0x2c8 <delay_ms+0xa>
     2c8:	cd b7       	in	r28, 0x3d	; 61
     2ca:	de b7       	in	r29, 0x3e	; 62
     2cc:	9e 83       	std	Y+6, r25	; 0x06
     2ce:	8d 83       	std	Y+5, r24	; 0x05
     2d0:	1a 82       	std	Y+2, r1	; 0x02
     2d2:	19 82       	std	Y+1, r1	; 0x01
     2d4:	13 c0       	rjmp	.+38     	; 0x2fc <delay_ms+0x3e>
     2d6:	1c 82       	std	Y+4, r1	; 0x04
     2d8:	1b 82       	std	Y+3, r1	; 0x03
     2da:	06 c0       	rjmp	.+12     	; 0x2e8 <delay_ms+0x2a>
     2dc:	00 00       	nop
     2de:	8b 81       	ldd	r24, Y+3	; 0x03
     2e0:	9c 81       	ldd	r25, Y+4	; 0x04
     2e2:	01 96       	adiw	r24, 0x01	; 1
     2e4:	9c 83       	std	Y+4, r25	; 0x04
     2e6:	8b 83       	std	Y+3, r24	; 0x03
     2e8:	8b 81       	ldd	r24, Y+3	; 0x03
     2ea:	9c 81       	ldd	r25, Y+4	; 0x04
     2ec:	87 30       	cpi	r24, 0x07	; 7
     2ee:	93 40       	sbci	r25, 0x03	; 3
     2f0:	ac f3       	brlt	.-22     	; 0x2dc <delay_ms+0x1e>
     2f2:	89 81       	ldd	r24, Y+1	; 0x01
     2f4:	9a 81       	ldd	r25, Y+2	; 0x02
     2f6:	01 96       	adiw	r24, 0x01	; 1
     2f8:	9a 83       	std	Y+2, r25	; 0x02
     2fa:	89 83       	std	Y+1, r24	; 0x01
     2fc:	29 81       	ldd	r18, Y+1	; 0x01
     2fe:	3a 81       	ldd	r19, Y+2	; 0x02
     300:	8d 81       	ldd	r24, Y+5	; 0x05
     302:	9e 81       	ldd	r25, Y+6	; 0x06
     304:	28 17       	cp	r18, r24
     306:	39 07       	cpc	r19, r25
     308:	34 f3       	brlt	.-52     	; 0x2d6 <delay_ms+0x18>
     30a:	00 00       	nop
     30c:	26 96       	adiw	r28, 0x06	; 6
     30e:	0f b6       	in	r0, 0x3f	; 63
     310:	f8 94       	cli
     312:	de bf       	out	0x3e, r29	; 62
     314:	0f be       	out	0x3f, r0	; 63
     316:	cd bf       	out	0x3d, r28	; 61
     318:	df 91       	pop	r29
     31a:	cf 91       	pop	r28
     31c:	08 95       	ret

0000031e <LCD_CreateCustomChar>:
     31e:	cf 93       	push	r28
     320:	df 93       	push	r29
     322:	00 d0       	rcall	.+0      	; 0x324 <LCD_CreateCustomChar+0x6>
     324:	00 d0       	rcall	.+0      	; 0x326 <LCD_CreateCustomChar+0x8>
     326:	cd b7       	in	r28, 0x3d	; 61
     328:	de b7       	in	r29, 0x3e	; 62
     32a:	8a 83       	std	Y+2, r24	; 0x02
     32c:	7c 83       	std	Y+4, r23	; 0x04
     32e:	6b 83       	std	Y+3, r22	; 0x03
     330:	8a 81       	ldd	r24, Y+2	; 0x02
     332:	88 30       	cpi	r24, 0x08	; 8
     334:	d0 f4       	brcc	.+52     	; 0x36a <LCD_CreateCustomChar+0x4c>
     336:	8a 81       	ldd	r24, Y+2	; 0x02
     338:	88 2f       	mov	r24, r24
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	08 96       	adiw	r24, 0x08	; 8
     33e:	88 0f       	add	r24, r24
     340:	88 0f       	add	r24, r24
     342:	88 0f       	add	r24, r24
     344:	f6 de       	rcall	.-532    	; 0x132 <LCD_WriteCommand>
     346:	19 82       	std	Y+1, r1	; 0x01
     348:	0d c0       	rjmp	.+26     	; 0x364 <LCD_CreateCustomChar+0x46>
     34a:	89 81       	ldd	r24, Y+1	; 0x01
     34c:	88 2f       	mov	r24, r24
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	2b 81       	ldd	r18, Y+3	; 0x03
     352:	3c 81       	ldd	r19, Y+4	; 0x04
     354:	82 0f       	add	r24, r18
     356:	93 1f       	adc	r25, r19
     358:	fc 01       	movw	r30, r24
     35a:	80 81       	ld	r24, Z
     35c:	19 df       	rcall	.-462    	; 0x190 <LCD_WriteData>
     35e:	89 81       	ldd	r24, Y+1	; 0x01
     360:	8f 5f       	subi	r24, 0xFF	; 255
     362:	89 83       	std	Y+1, r24	; 0x01
     364:	89 81       	ldd	r24, Y+1	; 0x01
     366:	88 30       	cpi	r24, 0x08	; 8
     368:	80 f3       	brcs	.-32     	; 0x34a <LCD_CreateCustomChar+0x2c>
     36a:	80 e8       	ldi	r24, 0x80	; 128
     36c:	e2 de       	rcall	.-572    	; 0x132 <LCD_WriteCommand>
     36e:	00 00       	nop
     370:	0f 90       	pop	r0
     372:	0f 90       	pop	r0
     374:	0f 90       	pop	r0
     376:	0f 90       	pop	r0
     378:	df 91       	pop	r29
     37a:	cf 91       	pop	r28
     37c:	08 95       	ret

0000037e <SetBit>:
     37e:	cf 93       	push	r28
     380:	df 93       	push	r29
     382:	00 d0       	rcall	.+0      	; 0x384 <SetBit+0x6>
     384:	1f 92       	push	r1
     386:	cd b7       	in	r28, 0x3d	; 61
     388:	de b7       	in	r29, 0x3e	; 62
     38a:	89 83       	std	Y+1, r24	; 0x01
     38c:	6a 83       	std	Y+2, r22	; 0x02
     38e:	4b 83       	std	Y+3, r20	; 0x03
     390:	8b 81       	ldd	r24, Y+3	; 0x03
     392:	88 23       	and	r24, r24
     394:	71 f0       	breq	.+28     	; 0x3b2 <SetBit+0x34>
     396:	8a 81       	ldd	r24, Y+2	; 0x02
     398:	28 2f       	mov	r18, r24
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	81 e0       	ldi	r24, 0x01	; 1
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <SetBit+0x28>
     3a2:	88 0f       	add	r24, r24
     3a4:	99 1f       	adc	r25, r25
     3a6:	2a 95       	dec	r18
     3a8:	e2 f7       	brpl	.-8      	; 0x3a2 <SetBit+0x24>
     3aa:	98 2f       	mov	r25, r24
     3ac:	89 81       	ldd	r24, Y+1	; 0x01
     3ae:	89 2b       	or	r24, r25
     3b0:	0e c0       	rjmp	.+28     	; 0x3ce <SetBit+0x50>
     3b2:	8a 81       	ldd	r24, Y+2	; 0x02
     3b4:	28 2f       	mov	r18, r24
     3b6:	30 e0       	ldi	r19, 0x00	; 0
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <SetBit+0x44>
     3be:	88 0f       	add	r24, r24
     3c0:	99 1f       	adc	r25, r25
     3c2:	2a 95       	dec	r18
     3c4:	e2 f7       	brpl	.-8      	; 0x3be <SetBit+0x40>
     3c6:	98 2f       	mov	r25, r24
     3c8:	90 95       	com	r25
     3ca:	89 81       	ldd	r24, Y+1	; 0x01
     3cc:	89 23       	and	r24, r25
     3ce:	0f 90       	pop	r0
     3d0:	0f 90       	pop	r0
     3d2:	0f 90       	pop	r0
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	08 95       	ret

000003da <adc_init>:
     3da:	cf 93       	push	r28
     3dc:	df 93       	push	r29
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62
     3e2:	8a e7       	ldi	r24, 0x7A	; 122
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	2a e7       	ldi	r18, 0x7A	; 122
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	f9 01       	movw	r30, r18
     3ec:	20 81       	ld	r18, Z
     3ee:	20 6e       	ori	r18, 0xE0	; 224
     3f0:	fc 01       	movw	r30, r24
     3f2:	20 83       	st	Z, r18
     3f4:	00 00       	nop
     3f6:	df 91       	pop	r29
     3f8:	cf 91       	pop	r28
     3fa:	08 95       	ret

000003fc <set_adc_pin>:
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	1f 92       	push	r1
     402:	cd b7       	in	r28, 0x3d	; 61
     404:	de b7       	in	r29, 0x3e	; 62
     406:	89 83       	std	Y+1, r24	; 0x01
     408:	8c e7       	ldi	r24, 0x7C	; 124
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	29 81       	ldd	r18, Y+1	; 0x01
     40e:	28 30       	cpi	r18, 0x08	; 8
     410:	28 f0       	brcs	.+10     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     412:	2c e7       	ldi	r18, 0x7C	; 124
     414:	30 e0       	ldi	r19, 0x00	; 0
     416:	f9 01       	movw	r30, r18
     418:	20 81       	ld	r18, Z
     41a:	01 c0       	rjmp	.+2      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     41c:	29 81       	ldd	r18, Y+1	; 0x01
     41e:	fc 01       	movw	r30, r24
     420:	20 83       	st	Z, r18
     422:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <i.2253>
     426:	06 c0       	rjmp	.+12     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     428:	00 00       	nop
     42a:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <i.2253>
     42e:	8f 5f       	subi	r24, 0xFF	; 255
     430:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <i.2253>
     434:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <i.2253>
     438:	8f 30       	cpi	r24, 0x0F	; 15
     43a:	b0 f3       	brcs	.-20     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     43c:	00 00       	nop
     43e:	0f 90       	pop	r0
     440:	df 91       	pop	r29
     442:	cf 91       	pop	r28
     444:	08 95       	ret

00000446 <TimerOn>:
     446:	cf 93       	push	r28
     448:	df 93       	push	r29
     44a:	cd b7       	in	r28, 0x3d	; 61
     44c:	de b7       	in	r29, 0x3e	; 62
     44e:	81 e8       	ldi	r24, 0x81	; 129
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	2b e0       	ldi	r18, 0x0B	; 11
     454:	fc 01       	movw	r30, r24
     456:	20 83       	st	Z, r18
     458:	88 e8       	ldi	r24, 0x88	; 136
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	2d e7       	ldi	r18, 0x7D	; 125
     45e:	30 e0       	ldi	r19, 0x00	; 0
     460:	fc 01       	movw	r30, r24
     462:	31 83       	std	Z+1, r19	; 0x01
     464:	20 83       	st	Z, r18
     466:	8f e6       	ldi	r24, 0x6F	; 111
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	22 e0       	ldi	r18, 0x02	; 2
     46c:	fc 01       	movw	r30, r24
     46e:	20 83       	st	Z, r18
     470:	84 e8       	ldi	r24, 0x84	; 132
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	fc 01       	movw	r30, r24
     476:	11 82       	std	Z+1, r1	; 0x01
     478:	10 82       	st	Z, r1
     47a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_avr_timer_M>
     47e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_avr_timer_M+0x1>
     482:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <_avr_timer_M+0x2>
     486:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <_avr_timer_M+0x3>
     48a:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <__data_end>
     48e:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <__data_end+0x1>
     492:	a0 93 94 01 	sts	0x0194, r26	; 0x800194 <__data_end+0x2>
     496:	b0 93 95 01 	sts	0x0195, r27	; 0x800195 <__data_end+0x3>
     49a:	8f e5       	ldi	r24, 0x5F	; 95
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	2f e5       	ldi	r18, 0x5F	; 95
     4a0:	30 e0       	ldi	r19, 0x00	; 0
     4a2:	f9 01       	movw	r30, r18
     4a4:	20 81       	ld	r18, Z
     4a6:	20 68       	ori	r18, 0x80	; 128
     4a8:	fc 01       	movw	r30, r24
     4aa:	20 83       	st	Z, r18
     4ac:	00 00       	nop
     4ae:	df 91       	pop	r29
     4b0:	cf 91       	pop	r28
     4b2:	08 95       	ret

000004b4 <TimerSet>:
     4b4:	cf 93       	push	r28
     4b6:	df 93       	push	r29
     4b8:	00 d0       	rcall	.+0      	; 0x4ba <TimerSet+0x6>
     4ba:	00 d0       	rcall	.+0      	; 0x4bc <TimerSet+0x8>
     4bc:	cd b7       	in	r28, 0x3d	; 61
     4be:	de b7       	in	r29, 0x3e	; 62
     4c0:	69 83       	std	Y+1, r22	; 0x01
     4c2:	7a 83       	std	Y+2, r23	; 0x02
     4c4:	8b 83       	std	Y+3, r24	; 0x03
     4c6:	9c 83       	std	Y+4, r25	; 0x04
     4c8:	89 81       	ldd	r24, Y+1	; 0x01
     4ca:	9a 81       	ldd	r25, Y+2	; 0x02
     4cc:	ab 81       	ldd	r26, Y+3	; 0x03
     4ce:	bc 81       	ldd	r27, Y+4	; 0x04
     4d0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_avr_timer_M>
     4d4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <_avr_timer_M+0x1>
     4d8:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <_avr_timer_M+0x2>
     4dc:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <_avr_timer_M+0x3>
     4e0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_avr_timer_M>
     4e4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_avr_timer_M+0x1>
     4e8:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <_avr_timer_M+0x2>
     4ec:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <_avr_timer_M+0x3>
     4f0:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <__data_end>
     4f4:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <__data_end+0x1>
     4f8:	a0 93 94 01 	sts	0x0194, r26	; 0x800194 <__data_end+0x2>
     4fc:	b0 93 95 01 	sts	0x0195, r27	; 0x800195 <__data_end+0x3>
     500:	00 00       	nop
     502:	0f 90       	pop	r0
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	0f 90       	pop	r0
     50a:	df 91       	pop	r29
     50c:	cf 91       	pop	r28
     50e:	08 95       	ret

00000510 <TimerISR>:
     510:	0f 93       	push	r16
     512:	1f 93       	push	r17
     514:	cf 93       	push	r28
     516:	df 93       	push	r29
     518:	00 d0       	rcall	.+0      	; 0x51a <TimerISR+0xa>
     51a:	1f 92       	push	r1
     51c:	cd b7       	in	r28, 0x3d	; 61
     51e:	de b7       	in	r29, 0x3e	; 62
     520:	19 82       	std	Y+1, r1	; 0x01
     522:	a4 c0       	rjmp	.+328    	; 0x66c <TimerISR+0x15c>
     524:	89 81       	ldd	r24, Y+1	; 0x01
     526:	28 2f       	mov	r18, r24
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	c9 01       	movw	r24, r18
     52c:	88 0f       	add	r24, r24
     52e:	99 1f       	adc	r25, r25
     530:	82 0f       	add	r24, r18
     532:	93 1f       	adc	r25, r19
     534:	88 0f       	add	r24, r24
     536:	99 1f       	adc	r25, r25
     538:	88 0f       	add	r24, r24
     53a:	99 1f       	adc	r25, r25
     53c:	82 54       	subi	r24, 0x42	; 66
     53e:	9e 4f       	sbci	r25, 0xFE	; 254
     540:	fc 01       	movw	r30, r24
     542:	20 81       	ld	r18, Z
     544:	31 81       	ldd	r19, Z+1	; 0x01
     546:	42 81       	ldd	r20, Z+2	; 0x02
     548:	53 81       	ldd	r21, Z+3	; 0x03
     54a:	89 81       	ldd	r24, Y+1	; 0x01
     54c:	68 2f       	mov	r22, r24
     54e:	70 e0       	ldi	r23, 0x00	; 0
     550:	cb 01       	movw	r24, r22
     552:	88 0f       	add	r24, r24
     554:	99 1f       	adc	r25, r25
     556:	86 0f       	add	r24, r22
     558:	97 1f       	adc	r25, r23
     55a:	88 0f       	add	r24, r24
     55c:	99 1f       	adc	r25, r25
     55e:	88 0f       	add	r24, r24
     560:	99 1f       	adc	r25, r25
     562:	86 54       	subi	r24, 0x46	; 70
     564:	9e 4f       	sbci	r25, 0xFE	; 254
     566:	fc 01       	movw	r30, r24
     568:	80 81       	ld	r24, Z
     56a:	91 81       	ldd	r25, Z+1	; 0x01
     56c:	a2 81       	ldd	r26, Z+2	; 0x02
     56e:	b3 81       	ldd	r27, Z+3	; 0x03
     570:	28 17       	cp	r18, r24
     572:	39 07       	cpc	r19, r25
     574:	4a 07       	cpc	r20, r26
     576:	5b 07       	cpc	r21, r27
     578:	08 f4       	brcc	.+2      	; 0x57c <TimerISR+0x6c>
     57a:	49 c0       	rjmp	.+146    	; 0x60e <TimerISR+0xfe>
     57c:	89 81       	ldd	r24, Y+1	; 0x01
     57e:	08 2f       	mov	r16, r24
     580:	10 e0       	ldi	r17, 0x00	; 0
     582:	89 81       	ldd	r24, Y+1	; 0x01
     584:	28 2f       	mov	r18, r24
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	c9 01       	movw	r24, r18
     58a:	88 0f       	add	r24, r24
     58c:	99 1f       	adc	r25, r25
     58e:	82 0f       	add	r24, r18
     590:	93 1f       	adc	r25, r19
     592:	88 0f       	add	r24, r24
     594:	99 1f       	adc	r25, r25
     596:	88 0f       	add	r24, r24
     598:	99 1f       	adc	r25, r25
     59a:	8e 53       	subi	r24, 0x3E	; 62
     59c:	9e 4f       	sbci	r25, 0xFE	; 254
     59e:	fc 01       	movw	r30, r24
     5a0:	40 81       	ld	r20, Z
     5a2:	51 81       	ldd	r21, Z+1	; 0x01
     5a4:	89 81       	ldd	r24, Y+1	; 0x01
     5a6:	28 2f       	mov	r18, r24
     5a8:	30 e0       	ldi	r19, 0x00	; 0
     5aa:	c9 01       	movw	r24, r18
     5ac:	88 0f       	add	r24, r24
     5ae:	99 1f       	adc	r25, r25
     5b0:	82 0f       	add	r24, r18
     5b2:	93 1f       	adc	r25, r19
     5b4:	88 0f       	add	r24, r24
     5b6:	99 1f       	adc	r25, r25
     5b8:	88 0f       	add	r24, r24
     5ba:	99 1f       	adc	r25, r25
     5bc:	88 54       	subi	r24, 0x48	; 72
     5be:	9e 4f       	sbci	r25, 0xFE	; 254
     5c0:	fc 01       	movw	r30, r24
     5c2:	80 81       	ld	r24, Z
     5c4:	91 81       	ldd	r25, Z+1	; 0x01
     5c6:	fa 01       	movw	r30, r20
     5c8:	09 95       	icall
     5ca:	9c 01       	movw	r18, r24
     5cc:	c8 01       	movw	r24, r16
     5ce:	88 0f       	add	r24, r24
     5d0:	99 1f       	adc	r25, r25
     5d2:	80 0f       	add	r24, r16
     5d4:	91 1f       	adc	r25, r17
     5d6:	88 0f       	add	r24, r24
     5d8:	99 1f       	adc	r25, r25
     5da:	88 0f       	add	r24, r24
     5dc:	99 1f       	adc	r25, r25
     5de:	88 54       	subi	r24, 0x48	; 72
     5e0:	9e 4f       	sbci	r25, 0xFE	; 254
     5e2:	fc 01       	movw	r30, r24
     5e4:	31 83       	std	Z+1, r19	; 0x01
     5e6:	20 83       	st	Z, r18
     5e8:	89 81       	ldd	r24, Y+1	; 0x01
     5ea:	28 2f       	mov	r18, r24
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	c9 01       	movw	r24, r18
     5f0:	88 0f       	add	r24, r24
     5f2:	99 1f       	adc	r25, r25
     5f4:	82 0f       	add	r24, r18
     5f6:	93 1f       	adc	r25, r19
     5f8:	88 0f       	add	r24, r24
     5fa:	99 1f       	adc	r25, r25
     5fc:	88 0f       	add	r24, r24
     5fe:	99 1f       	adc	r25, r25
     600:	82 54       	subi	r24, 0x42	; 66
     602:	9e 4f       	sbci	r25, 0xFE	; 254
     604:	fc 01       	movw	r30, r24
     606:	10 82       	st	Z, r1
     608:	11 82       	std	Z+1, r1	; 0x01
     60a:	12 82       	std	Z+2, r1	; 0x02
     60c:	13 82       	std	Z+3, r1	; 0x03
     60e:	89 81       	ldd	r24, Y+1	; 0x01
     610:	68 2f       	mov	r22, r24
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	89 81       	ldd	r24, Y+1	; 0x01
     616:	28 2f       	mov	r18, r24
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	c9 01       	movw	r24, r18
     61c:	88 0f       	add	r24, r24
     61e:	99 1f       	adc	r25, r25
     620:	82 0f       	add	r24, r18
     622:	93 1f       	adc	r25, r19
     624:	88 0f       	add	r24, r24
     626:	99 1f       	adc	r25, r25
     628:	88 0f       	add	r24, r24
     62a:	99 1f       	adc	r25, r25
     62c:	82 54       	subi	r24, 0x42	; 66
     62e:	9e 4f       	sbci	r25, 0xFE	; 254
     630:	fc 01       	movw	r30, r24
     632:	80 81       	ld	r24, Z
     634:	91 81       	ldd	r25, Z+1	; 0x01
     636:	a2 81       	ldd	r26, Z+2	; 0x02
     638:	b3 81       	ldd	r27, Z+3	; 0x03
     63a:	9c 01       	movw	r18, r24
     63c:	ad 01       	movw	r20, r26
     63e:	2f 5f       	subi	r18, 0xFF	; 255
     640:	3f 4f       	sbci	r19, 0xFF	; 255
     642:	4f 4f       	sbci	r20, 0xFF	; 255
     644:	5f 4f       	sbci	r21, 0xFF	; 255
     646:	cb 01       	movw	r24, r22
     648:	88 0f       	add	r24, r24
     64a:	99 1f       	adc	r25, r25
     64c:	86 0f       	add	r24, r22
     64e:	97 1f       	adc	r25, r23
     650:	88 0f       	add	r24, r24
     652:	99 1f       	adc	r25, r25
     654:	88 0f       	add	r24, r24
     656:	99 1f       	adc	r25, r25
     658:	82 54       	subi	r24, 0x42	; 66
     65a:	9e 4f       	sbci	r25, 0xFE	; 254
     65c:	fc 01       	movw	r30, r24
     65e:	20 83       	st	Z, r18
     660:	31 83       	std	Z+1, r19	; 0x01
     662:	42 83       	std	Z+2, r20	; 0x02
     664:	53 83       	std	Z+3, r21	; 0x03
     666:	89 81       	ldd	r24, Y+1	; 0x01
     668:	8f 5f       	subi	r24, 0xFF	; 255
     66a:	89 83       	std	Y+1, r24	; 0x01
     66c:	84 e0       	ldi	r24, 0x04	; 4
     66e:	99 81       	ldd	r25, Y+1	; 0x01
     670:	98 17       	cp	r25, r24
     672:	08 f4       	brcc	.+2      	; 0x676 <TimerISR+0x166>
     674:	57 cf       	rjmp	.-338    	; 0x524 <TimerISR+0x14>
     676:	1b 82       	std	Y+3, r1	; 0x03
     678:	1a 82       	std	Y+2, r1	; 0x02
     67a:	86 e0       	ldi	r24, 0x06	; 6
     67c:	bf de       	rcall	.-642    	; 0x3fc <set_adc_pin>
     67e:	88 e7       	ldi	r24, 0x78	; 120
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	fc 01       	movw	r30, r24
     684:	80 81       	ld	r24, Z
     686:	91 81       	ldd	r25, Z+1	; 0x01
     688:	9b 83       	std	Y+3, r25	; 0x03
     68a:	8a 83       	std	Y+2, r24	; 0x02
     68c:	8a 81       	ldd	r24, Y+2	; 0x02
     68e:	9b 81       	ldd	r25, Y+3	; 0x03
     690:	88 3c       	cpi	r24, 0xC8	; 200
     692:	91 05       	cpc	r25, r1
     694:	28 f1       	brcs	.+74     	; 0x6e0 <TimerISR+0x1d0>
     696:	8a 81       	ldd	r24, Y+2	; 0x02
     698:	9b 81       	ldd	r25, Y+3	; 0x03
     69a:	8c 32       	cpi	r24, 0x2C	; 44
     69c:	91 40       	sbci	r25, 0x01	; 1
     69e:	00 f5       	brcc	.+64     	; 0x6e0 <TimerISR+0x1d0>
     6a0:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <tasks+0x1a>
     6a4:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <tasks+0x1b>
     6a8:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <tasks+0x1c>
     6ac:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <tasks+0x1d>
     6b0:	8c 32       	cpi	r24, 0x2C	; 44
     6b2:	91 40       	sbci	r25, 0x01	; 1
     6b4:	a1 05       	cpc	r26, r1
     6b6:	b1 05       	cpc	r27, r1
     6b8:	99 f0       	breq	.+38     	; 0x6e0 <TimerISR+0x1d0>
     6ba:	8c e2       	ldi	r24, 0x2C	; 44
     6bc:	91 e0       	ldi	r25, 0x01	; 1
     6be:	a0 e0       	ldi	r26, 0x00	; 0
     6c0:	b0 e0       	ldi	r27, 0x00	; 0
     6c2:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <tasks+0x1a>
     6c6:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <tasks+0x1b>
     6ca:	a0 93 d4 01 	sts	0x01D4, r26	; 0x8001d4 <tasks+0x1c>
     6ce:	b0 93 d5 01 	sts	0x01D5, r27	; 0x8001d5 <tasks+0x1d>
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <changed.2272+0x1>
     6da:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <changed.2272>
     6de:	45 c1       	rjmp	.+650    	; 0x96a <TimerISR+0x45a>
     6e0:	8a 81       	ldd	r24, Y+2	; 0x02
     6e2:	9b 81       	ldd	r25, Y+3	; 0x03
     6e4:	84 36       	cpi	r24, 0x64	; 100
     6e6:	91 05       	cpc	r25, r1
     6e8:	00 f5       	brcc	.+64     	; 0x72a <TimerISR+0x21a>
     6ea:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <tasks+0x1a>
     6ee:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <tasks+0x1b>
     6f2:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <tasks+0x1c>
     6f6:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <tasks+0x1d>
     6fa:	84 36       	cpi	r24, 0x64	; 100
     6fc:	91 05       	cpc	r25, r1
     6fe:	a1 05       	cpc	r26, r1
     700:	b1 05       	cpc	r27, r1
     702:	99 f0       	breq	.+38     	; 0x72a <TimerISR+0x21a>
     704:	84 e6       	ldi	r24, 0x64	; 100
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	a0 e0       	ldi	r26, 0x00	; 0
     70a:	b0 e0       	ldi	r27, 0x00	; 0
     70c:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <tasks+0x1a>
     710:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <tasks+0x1b>
     714:	a0 93 d4 01 	sts	0x01D4, r26	; 0x8001d4 <tasks+0x1c>
     718:	b0 93 d5 01 	sts	0x01D5, r27	; 0x8001d5 <tasks+0x1d>
     71c:	81 e0       	ldi	r24, 0x01	; 1
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <changed.2272+0x1>
     724:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <changed.2272>
     728:	20 c1       	rjmp	.+576    	; 0x96a <TimerISR+0x45a>
     72a:	8a 81       	ldd	r24, Y+2	; 0x02
     72c:	9b 81       	ldd	r25, Y+3	; 0x03
     72e:	84 36       	cpi	r24, 0x64	; 100
     730:	91 05       	cpc	r25, r1
     732:	28 f1       	brcs	.+74     	; 0x77e <TimerISR+0x26e>
     734:	8a 81       	ldd	r24, Y+2	; 0x02
     736:	9b 81       	ldd	r25, Y+3	; 0x03
     738:	88 3c       	cpi	r24, 0xC8	; 200
     73a:	91 05       	cpc	r25, r1
     73c:	00 f5       	brcc	.+64     	; 0x77e <TimerISR+0x26e>
     73e:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <tasks+0x1a>
     742:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <tasks+0x1b>
     746:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <tasks+0x1c>
     74a:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <tasks+0x1d>
     74e:	88 3c       	cpi	r24, 0xC8	; 200
     750:	91 05       	cpc	r25, r1
     752:	a1 05       	cpc	r26, r1
     754:	b1 05       	cpc	r27, r1
     756:	99 f0       	breq	.+38     	; 0x77e <TimerISR+0x26e>
     758:	88 ec       	ldi	r24, 0xC8	; 200
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	a0 e0       	ldi	r26, 0x00	; 0
     75e:	b0 e0       	ldi	r27, 0x00	; 0
     760:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <tasks+0x1a>
     764:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <tasks+0x1b>
     768:	a0 93 d4 01 	sts	0x01D4, r26	; 0x8001d4 <tasks+0x1c>
     76c:	b0 93 d5 01 	sts	0x01D5, r27	; 0x8001d5 <tasks+0x1d>
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <changed.2272+0x1>
     778:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <changed.2272>
     77c:	f6 c0       	rjmp	.+492    	; 0x96a <TimerISR+0x45a>
     77e:	8a 81       	ldd	r24, Y+2	; 0x02
     780:	9b 81       	ldd	r25, Y+3	; 0x03
     782:	8c 32       	cpi	r24, 0x2C	; 44
     784:	91 40       	sbci	r25, 0x01	; 1
     786:	28 f1       	brcs	.+74     	; 0x7d2 <TimerISR+0x2c2>
     788:	8a 81       	ldd	r24, Y+2	; 0x02
     78a:	9b 81       	ldd	r25, Y+3	; 0x03
     78c:	80 39       	cpi	r24, 0x90	; 144
     78e:	91 40       	sbci	r25, 0x01	; 1
     790:	00 f5       	brcc	.+64     	; 0x7d2 <TimerISR+0x2c2>
     792:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <tasks+0x1a>
     796:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <tasks+0x1b>
     79a:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <tasks+0x1c>
     79e:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <tasks+0x1d>
     7a2:	80 39       	cpi	r24, 0x90	; 144
     7a4:	91 40       	sbci	r25, 0x01	; 1
     7a6:	a1 05       	cpc	r26, r1
     7a8:	b1 05       	cpc	r27, r1
     7aa:	99 f0       	breq	.+38     	; 0x7d2 <TimerISR+0x2c2>
     7ac:	80 e9       	ldi	r24, 0x90	; 144
     7ae:	91 e0       	ldi	r25, 0x01	; 1
     7b0:	a0 e0       	ldi	r26, 0x00	; 0
     7b2:	b0 e0       	ldi	r27, 0x00	; 0
     7b4:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <tasks+0x1a>
     7b8:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <tasks+0x1b>
     7bc:	a0 93 d4 01 	sts	0x01D4, r26	; 0x8001d4 <tasks+0x1c>
     7c0:	b0 93 d5 01 	sts	0x01D5, r27	; 0x8001d5 <tasks+0x1d>
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <changed.2272+0x1>
     7cc:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <changed.2272>
     7d0:	cc c0       	rjmp	.+408    	; 0x96a <TimerISR+0x45a>
     7d2:	8a 81       	ldd	r24, Y+2	; 0x02
     7d4:	9b 81       	ldd	r25, Y+3	; 0x03
     7d6:	80 39       	cpi	r24, 0x90	; 144
     7d8:	91 40       	sbci	r25, 0x01	; 1
     7da:	28 f1       	brcs	.+74     	; 0x826 <TimerISR+0x316>
     7dc:	8a 81       	ldd	r24, Y+2	; 0x02
     7de:	9b 81       	ldd	r25, Y+3	; 0x03
     7e0:	84 3f       	cpi	r24, 0xF4	; 244
     7e2:	91 40       	sbci	r25, 0x01	; 1
     7e4:	00 f5       	brcc	.+64     	; 0x826 <TimerISR+0x316>
     7e6:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <tasks+0x1a>
     7ea:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <tasks+0x1b>
     7ee:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <tasks+0x1c>
     7f2:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <tasks+0x1d>
     7f6:	84 3f       	cpi	r24, 0xF4	; 244
     7f8:	91 40       	sbci	r25, 0x01	; 1
     7fa:	a1 05       	cpc	r26, r1
     7fc:	b1 05       	cpc	r27, r1
     7fe:	99 f0       	breq	.+38     	; 0x826 <TimerISR+0x316>
     800:	84 ef       	ldi	r24, 0xF4	; 244
     802:	91 e0       	ldi	r25, 0x01	; 1
     804:	a0 e0       	ldi	r26, 0x00	; 0
     806:	b0 e0       	ldi	r27, 0x00	; 0
     808:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <tasks+0x1a>
     80c:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <tasks+0x1b>
     810:	a0 93 d4 01 	sts	0x01D4, r26	; 0x8001d4 <tasks+0x1c>
     814:	b0 93 d5 01 	sts	0x01D5, r27	; 0x8001d5 <tasks+0x1d>
     818:	81 e0       	ldi	r24, 0x01	; 1
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <changed.2272+0x1>
     820:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <changed.2272>
     824:	a2 c0       	rjmp	.+324    	; 0x96a <TimerISR+0x45a>
     826:	8a 81       	ldd	r24, Y+2	; 0x02
     828:	9b 81       	ldd	r25, Y+3	; 0x03
     82a:	84 3f       	cpi	r24, 0xF4	; 244
     82c:	91 40       	sbci	r25, 0x01	; 1
     82e:	28 f1       	brcs	.+74     	; 0x87a <TimerISR+0x36a>
     830:	8a 81       	ldd	r24, Y+2	; 0x02
     832:	9b 81       	ldd	r25, Y+3	; 0x03
     834:	88 35       	cpi	r24, 0x58	; 88
     836:	92 40       	sbci	r25, 0x02	; 2
     838:	00 f5       	brcc	.+64     	; 0x87a <TimerISR+0x36a>
     83a:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <tasks+0x1a>
     83e:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <tasks+0x1b>
     842:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <tasks+0x1c>
     846:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <tasks+0x1d>
     84a:	88 35       	cpi	r24, 0x58	; 88
     84c:	92 40       	sbci	r25, 0x02	; 2
     84e:	a1 05       	cpc	r26, r1
     850:	b1 05       	cpc	r27, r1
     852:	99 f0       	breq	.+38     	; 0x87a <TimerISR+0x36a>
     854:	88 e5       	ldi	r24, 0x58	; 88
     856:	92 e0       	ldi	r25, 0x02	; 2
     858:	a0 e0       	ldi	r26, 0x00	; 0
     85a:	b0 e0       	ldi	r27, 0x00	; 0
     85c:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <tasks+0x1a>
     860:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <tasks+0x1b>
     864:	a0 93 d4 01 	sts	0x01D4, r26	; 0x8001d4 <tasks+0x1c>
     868:	b0 93 d5 01 	sts	0x01D5, r27	; 0x8001d5 <tasks+0x1d>
     86c:	81 e0       	ldi	r24, 0x01	; 1
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <changed.2272+0x1>
     874:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <changed.2272>
     878:	78 c0       	rjmp	.+240    	; 0x96a <TimerISR+0x45a>
     87a:	8a 81       	ldd	r24, Y+2	; 0x02
     87c:	9b 81       	ldd	r25, Y+3	; 0x03
     87e:	88 35       	cpi	r24, 0x58	; 88
     880:	92 40       	sbci	r25, 0x02	; 2
     882:	28 f1       	brcs	.+74     	; 0x8ce <TimerISR+0x3be>
     884:	8a 81       	ldd	r24, Y+2	; 0x02
     886:	9b 81       	ldd	r25, Y+3	; 0x03
     888:	8c 3b       	cpi	r24, 0xBC	; 188
     88a:	92 40       	sbci	r25, 0x02	; 2
     88c:	00 f5       	brcc	.+64     	; 0x8ce <TimerISR+0x3be>
     88e:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <tasks+0x1a>
     892:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <tasks+0x1b>
     896:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <tasks+0x1c>
     89a:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <tasks+0x1d>
     89e:	8c 3b       	cpi	r24, 0xBC	; 188
     8a0:	92 40       	sbci	r25, 0x02	; 2
     8a2:	a1 05       	cpc	r26, r1
     8a4:	b1 05       	cpc	r27, r1
     8a6:	99 f0       	breq	.+38     	; 0x8ce <TimerISR+0x3be>
     8a8:	8c eb       	ldi	r24, 0xBC	; 188
     8aa:	92 e0       	ldi	r25, 0x02	; 2
     8ac:	a0 e0       	ldi	r26, 0x00	; 0
     8ae:	b0 e0       	ldi	r27, 0x00	; 0
     8b0:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <tasks+0x1a>
     8b4:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <tasks+0x1b>
     8b8:	a0 93 d4 01 	sts	0x01D4, r26	; 0x8001d4 <tasks+0x1c>
     8bc:	b0 93 d5 01 	sts	0x01D5, r27	; 0x8001d5 <tasks+0x1d>
     8c0:	81 e0       	ldi	r24, 0x01	; 1
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <changed.2272+0x1>
     8c8:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <changed.2272>
     8cc:	4e c0       	rjmp	.+156    	; 0x96a <TimerISR+0x45a>
     8ce:	8a 81       	ldd	r24, Y+2	; 0x02
     8d0:	9b 81       	ldd	r25, Y+3	; 0x03
     8d2:	8c 3b       	cpi	r24, 0xBC	; 188
     8d4:	92 40       	sbci	r25, 0x02	; 2
     8d6:	28 f1       	brcs	.+74     	; 0x922 <TimerISR+0x412>
     8d8:	8a 81       	ldd	r24, Y+2	; 0x02
     8da:	9b 81       	ldd	r25, Y+3	; 0x03
     8dc:	80 32       	cpi	r24, 0x20	; 32
     8de:	93 40       	sbci	r25, 0x03	; 3
     8e0:	00 f5       	brcc	.+64     	; 0x922 <TimerISR+0x412>
     8e2:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <tasks+0x1a>
     8e6:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <tasks+0x1b>
     8ea:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <tasks+0x1c>
     8ee:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <tasks+0x1d>
     8f2:	80 32       	cpi	r24, 0x20	; 32
     8f4:	93 40       	sbci	r25, 0x03	; 3
     8f6:	a1 05       	cpc	r26, r1
     8f8:	b1 05       	cpc	r27, r1
     8fa:	99 f0       	breq	.+38     	; 0x922 <TimerISR+0x412>
     8fc:	80 e2       	ldi	r24, 0x20	; 32
     8fe:	93 e0       	ldi	r25, 0x03	; 3
     900:	a0 e0       	ldi	r26, 0x00	; 0
     902:	b0 e0       	ldi	r27, 0x00	; 0
     904:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <tasks+0x1a>
     908:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <tasks+0x1b>
     90c:	a0 93 d4 01 	sts	0x01D4, r26	; 0x8001d4 <tasks+0x1c>
     910:	b0 93 d5 01 	sts	0x01D5, r27	; 0x8001d5 <tasks+0x1d>
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <changed.2272+0x1>
     91c:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <changed.2272>
     920:	24 c0       	rjmp	.+72     	; 0x96a <TimerISR+0x45a>
     922:	8a 81       	ldd	r24, Y+2	; 0x02
     924:	9b 81       	ldd	r25, Y+3	; 0x03
     926:	80 32       	cpi	r24, 0x20	; 32
     928:	93 40       	sbci	r25, 0x03	; 3
     92a:	f8 f0       	brcs	.+62     	; 0x96a <TimerISR+0x45a>
     92c:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <tasks+0x1a>
     930:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <tasks+0x1b>
     934:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <tasks+0x1c>
     938:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <tasks+0x1d>
     93c:	84 38       	cpi	r24, 0x84	; 132
     93e:	93 40       	sbci	r25, 0x03	; 3
     940:	a1 05       	cpc	r26, r1
     942:	b1 05       	cpc	r27, r1
     944:	91 f0       	breq	.+36     	; 0x96a <TimerISR+0x45a>
     946:	84 e8       	ldi	r24, 0x84	; 132
     948:	93 e0       	ldi	r25, 0x03	; 3
     94a:	a0 e0       	ldi	r26, 0x00	; 0
     94c:	b0 e0       	ldi	r27, 0x00	; 0
     94e:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <tasks+0x1a>
     952:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <tasks+0x1b>
     956:	a0 93 d4 01 	sts	0x01D4, r26	; 0x8001d4 <tasks+0x1c>
     95a:	b0 93 d5 01 	sts	0x01D5, r27	; 0x8001d5 <tasks+0x1d>
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <changed.2272+0x1>
     966:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <changed.2272>
     96a:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <tasks+0x1a>
     96e:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <tasks+0x1b>
     972:	a0 91 d4 01 	lds	r26, 0x01D4	; 0x8001d4 <tasks+0x1c>
     976:	b0 91 d5 01 	lds	r27, 0x01D5	; 0x8001d5 <tasks+0x1d>
     97a:	24 e6       	ldi	r18, 0x64	; 100
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	40 e0       	ldi	r20, 0x00	; 0
     980:	50 e0       	ldi	r21, 0x00	; 0
     982:	bc 01       	movw	r22, r24
     984:	cd 01       	movw	r24, r26
     986:	0e 94 64 0d 	call	0x1ac8	; 0x1ac8 <__udivmodsi4>
     98a:	da 01       	movw	r26, r20
     98c:	c9 01       	movw	r24, r18
     98e:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <speed>
     992:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <changed.2272>
     996:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <changed.2272+0x1>
     99a:	89 2b       	or	r24, r25
     99c:	71 f0       	breq	.+28     	; 0x9ba <TimerISR+0x4aa>
     99e:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <msgShown>
     9a2:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <tasks+0x1e>
     9a6:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <tasks+0x1f>
     9aa:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <tasks+0x20>
     9ae:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <tasks+0x21>
     9b2:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <changed.2272+0x1>
     9b6:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <changed.2272>
     9ba:	00 00       	nop
     9bc:	0f 90       	pop	r0
     9be:	0f 90       	pop	r0
     9c0:	0f 90       	pop	r0
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	1f 91       	pop	r17
     9c8:	0f 91       	pop	r16
     9ca:	08 95       	ret

000009cc <__vector_13>:
     9cc:	1f 92       	push	r1
     9ce:	0f 92       	push	r0
     9d0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     9d4:	0f 92       	push	r0
     9d6:	11 24       	eor	r1, r1
     9d8:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     9dc:	0f 92       	push	r0
     9de:	2f 93       	push	r18
     9e0:	3f 93       	push	r19
     9e2:	4f 93       	push	r20
     9e4:	5f 93       	push	r21
     9e6:	6f 93       	push	r22
     9e8:	7f 93       	push	r23
     9ea:	8f 93       	push	r24
     9ec:	9f 93       	push	r25
     9ee:	af 93       	push	r26
     9f0:	bf 93       	push	r27
     9f2:	ef 93       	push	r30
     9f4:	ff 93       	push	r31
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	cd b7       	in	r28, 0x3d	; 61
     9fc:	de b7       	in	r29, 0x3e	; 62
     9fe:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <__data_end>
     a02:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <__data_end+0x1>
     a06:	a0 91 94 01 	lds	r26, 0x0194	; 0x800194 <__data_end+0x2>
     a0a:	b0 91 95 01 	lds	r27, 0x0195	; 0x800195 <__data_end+0x3>
     a0e:	01 97       	sbiw	r24, 0x01	; 1
     a10:	a1 09       	sbc	r26, r1
     a12:	b1 09       	sbc	r27, r1
     a14:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <__data_end>
     a18:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <__data_end+0x1>
     a1c:	a0 93 94 01 	sts	0x0194, r26	; 0x800194 <__data_end+0x2>
     a20:	b0 93 95 01 	sts	0x0195, r27	; 0x800195 <__data_end+0x3>
     a24:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <__data_end>
     a28:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <__data_end+0x1>
     a2c:	a0 91 94 01 	lds	r26, 0x0194	; 0x800194 <__data_end+0x2>
     a30:	b0 91 95 01 	lds	r27, 0x0195	; 0x800195 <__data_end+0x3>
     a34:	89 2b       	or	r24, r25
     a36:	8a 2b       	or	r24, r26
     a38:	8b 2b       	or	r24, r27
     a3a:	89 f4       	brne	.+34     	; 0xa5e <__vector_13+0x92>
     a3c:	69 dd       	rcall	.-1326   	; 0x510 <TimerISR>
     a3e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_avr_timer_M>
     a42:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_avr_timer_M+0x1>
     a46:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <_avr_timer_M+0x2>
     a4a:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <_avr_timer_M+0x3>
     a4e:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <__data_end>
     a52:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <__data_end+0x1>
     a56:	a0 93 94 01 	sts	0x0194, r26	; 0x800194 <__data_end+0x2>
     a5a:	b0 93 95 01 	sts	0x0195, r27	; 0x800195 <__data_end+0x3>
     a5e:	00 00       	nop
     a60:	df 91       	pop	r29
     a62:	cf 91       	pop	r28
     a64:	ff 91       	pop	r31
     a66:	ef 91       	pop	r30
     a68:	bf 91       	pop	r27
     a6a:	af 91       	pop	r26
     a6c:	9f 91       	pop	r25
     a6e:	8f 91       	pop	r24
     a70:	7f 91       	pop	r23
     a72:	6f 91       	pop	r22
     a74:	5f 91       	pop	r21
     a76:	4f 91       	pop	r20
     a78:	3f 91       	pop	r19
     a7a:	2f 91       	pop	r18
     a7c:	0f 90       	pop	r0
     a7e:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     a82:	0f 90       	pop	r0
     a84:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     a88:	0f 90       	pop	r0
     a8a:	1f 90       	pop	r1
     a8c:	18 95       	reti

00000a8e <TickFct_startGame>:
     a8e:	cf 93       	push	r28
     a90:	df 93       	push	r29
     a92:	00 d0       	rcall	.+0      	; 0xa94 <TickFct_startGame+0x6>
     a94:	cd b7       	in	r28, 0x3d	; 61
     a96:	de b7       	in	r29, 0x3e	; 62
     a98:	9a 83       	std	Y+2, r25	; 0x02
     a9a:	89 83       	std	Y+1, r24	; 0x01
     a9c:	89 81       	ldd	r24, Y+1	; 0x01
     a9e:	9a 81       	ldd	r25, Y+2	; 0x02
     aa0:	81 30       	cpi	r24, 0x01	; 1
     aa2:	91 05       	cpc	r25, r1
     aa4:	09 f4       	brne	.+2      	; 0xaa8 <TickFct_startGame+0x1a>
     aa6:	71 c0       	rjmp	.+226    	; 0xb8a <TickFct_startGame+0xfc>
     aa8:	82 30       	cpi	r24, 0x02	; 2
     aaa:	91 05       	cpc	r25, r1
     aac:	09 f4       	brne	.+2      	; 0xab0 <TickFct_startGame+0x22>
     aae:	7e c0       	rjmp	.+252    	; 0xbac <TickFct_startGame+0x11e>
     ab0:	89 2b       	or	r24, r25
     ab2:	09 f0       	breq	.+2      	; 0xab6 <TickFct_startGame+0x28>
     ab4:	9f c0       	rjmp	.+318    	; 0xbf4 <TickFct_startGame+0x166>
     ab6:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <gameStart>
     aba:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <reset>
     abe:	80 e2       	ldi	r24, 0x20	; 32
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	fc 01       	movw	r30, r24
     ac4:	80 81       	ld	r24, Z
     ac6:	88 2f       	mov	r24, r24
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	88 70       	andi	r24, 0x08	; 8
     acc:	99 27       	eor	r25, r25
     ace:	89 2b       	or	r24, r25
     ad0:	d1 f4       	brne	.+52     	; 0xb06 <TickFct_startGame+0x78>
     ad2:	81 e0       	ldi	r24, 0x01	; 1
     ad4:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <gameStart>
     ad8:	6f e0       	ldi	r22, 0x0F	; 15
     ada:	71 e0       	ldi	r23, 0x01	; 1
     adc:	81 e0       	ldi	r24, 0x01	; 1
     ade:	87 db       	rcall	.-2290   	; 0x1ee <LCD_DisplayString>
     ae0:	68 e1       	ldi	r22, 0x18	; 24
     ae2:	71 e0       	ldi	r23, 0x01	; 1
     ae4:	81 e1       	ldi	r24, 0x11	; 17
     ae6:	ad db       	rcall	.-2214   	; 0x242 <LCD_DisplayStringNoClear>
     ae8:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <msgDisplayed.2285>
     aec:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <score>
     af0:	82 e0       	ldi	r24, 0x02	; 2
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <next.2286+0x1>
     af8:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <next.2286>
     afc:	81 e0       	ldi	r24, 0x01	; 1
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	9a 83       	std	Y+2, r25	; 0x02
     b02:	89 83       	std	Y+1, r24	; 0x01
     b04:	33 c0       	rjmp	.+102    	; 0xb6c <TickFct_startGame+0xde>
     b06:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <msgDisplayed.2285>
     b0a:	88 23       	and	r24, r24
     b0c:	79 f5       	brne	.+94     	; 0xb6c <TickFct_startGame+0xde>
     b0e:	f1 da       	rcall	.-2590   	; 0xf2 <LCD_ClearScreen>
     b10:	64 e2       	ldi	r22, 0x24	; 36
     b12:	71 e0       	ldi	r23, 0x01	; 1
     b14:	81 e1       	ldi	r24, 0x11	; 17
     b16:	95 db       	rcall	.-2262   	; 0x242 <LCD_DisplayStringNoClear>
     b18:	64 e3       	ldi	r22, 0x34	; 52
     b1a:	71 e0       	ldi	r23, 0x01	; 1
     b1c:	81 e0       	ldi	r24, 0x01	; 1
     b1e:	91 db       	rcall	.-2270   	; 0x242 <LCD_DisplayStringNoClear>
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	0e 94 d7 11 	call	0x23ae	; 0x23ae <eeprom_read_byte>
     b28:	88 2f       	mov	r24, r24
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	29 2f       	mov	r18, r25
     b2e:	2f 93       	push	r18
     b30:	8f 93       	push	r24
     b32:	81 e4       	ldi	r24, 0x41	; 65
     b34:	91 e0       	ldi	r25, 0x01	; 1
     b36:	89 2f       	mov	r24, r25
     b38:	8f 93       	push	r24
     b3a:	81 e4       	ldi	r24, 0x41	; 65
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	8f 93       	push	r24
     b40:	80 eb       	ldi	r24, 0xB0	; 176
     b42:	91 e0       	ldi	r25, 0x01	; 1
     b44:	89 2f       	mov	r24, r25
     b46:	8f 93       	push	r24
     b48:	80 eb       	ldi	r24, 0xB0	; 176
     b4a:	91 e0       	ldi	r25, 0x01	; 1
     b4c:	8f 93       	push	r24
     b4e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <sprintf>
     b52:	0f 90       	pop	r0
     b54:	0f 90       	pop	r0
     b56:	0f 90       	pop	r0
     b58:	0f 90       	pop	r0
     b5a:	0f 90       	pop	r0
     b5c:	0f 90       	pop	r0
     b5e:	60 eb       	ldi	r22, 0xB0	; 176
     b60:	71 e0       	ldi	r23, 0x01	; 1
     b62:	8d e0       	ldi	r24, 0x0D	; 13
     b64:	6e db       	rcall	.-2340   	; 0x242 <LCD_DisplayStringNoClear>
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <msgDisplayed.2285>
     b6c:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <msgShown>
     b70:	88 23       	and	r24, r24
     b72:	09 f0       	breq	.+2      	; 0xb76 <TickFct_startGame+0xe8>
     b74:	3a c0       	rjmp	.+116    	; 0xbea <TickFct_startGame+0x15c>
     b76:	80 e2       	ldi	r24, 0x20	; 32
     b78:	8d db       	rcall	.-2278   	; 0x294 <LCD_Cursor>
     b7a:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <speed>
     b7e:	80 5d       	subi	r24, 0xD0	; 208
     b80:	07 db       	rcall	.-2546   	; 0x190 <LCD_WriteData>
     b82:	81 e0       	ldi	r24, 0x01	; 1
     b84:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <msgShown>
     b88:	30 c0       	rjmp	.+96     	; 0xbea <TickFct_startGame+0x15c>
     b8a:	80 e2       	ldi	r24, 0x20	; 32
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	fc 01       	movw	r30, r24
     b90:	80 81       	ld	r24, Z
     b92:	88 2f       	mov	r24, r24
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	88 70       	andi	r24, 0x08	; 8
     b98:	99 27       	eor	r25, r25
     b9a:	89 2b       	or	r24, r25
     b9c:	41 f1       	breq	.+80     	; 0xbee <TickFct_startGame+0x160>
     b9e:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <next.2286>
     ba2:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <next.2286+0x1>
     ba6:	9a 83       	std	Y+2, r25	; 0x02
     ba8:	89 83       	std	Y+1, r24	; 0x01
     baa:	24 c0       	rjmp	.+72     	; 0xbf4 <TickFct_startGame+0x166>
     bac:	80 e2       	ldi	r24, 0x20	; 32
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	fc 01       	movw	r30, r24
     bb2:	80 81       	ld	r24, Z
     bb4:	88 2f       	mov	r24, r24
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	88 70       	andi	r24, 0x08	; 8
     bba:	99 27       	eor	r25, r25
     bbc:	89 2b       	or	r24, r25
     bbe:	c9 f4       	brne	.+50     	; 0xbf2 <TickFct_startGame+0x164>
     bc0:	98 da       	rcall	.-2768   	; 0xf2 <LCD_ClearScreen>
     bc2:	64 e4       	ldi	r22, 0x44	; 68
     bc4:	71 e0       	ldi	r23, 0x01	; 1
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	12 db       	rcall	.-2524   	; 0x1ee <LCD_DisplayString>
     bca:	81 e0       	ldi	r24, 0x01	; 1
     bcc:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <reset>
     bd0:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <gameStart>
     bd4:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <msgShown>
     bd8:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <next.2286+0x1>
     bdc:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <next.2286>
     be0:	81 e0       	ldi	r24, 0x01	; 1
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	9a 83       	std	Y+2, r25	; 0x02
     be6:	89 83       	std	Y+1, r24	; 0x01
     be8:	04 c0       	rjmp	.+8      	; 0xbf2 <TickFct_startGame+0x164>
     bea:	00 00       	nop
     bec:	03 c0       	rjmp	.+6      	; 0xbf4 <TickFct_startGame+0x166>
     bee:	00 00       	nop
     bf0:	01 c0       	rjmp	.+2      	; 0xbf4 <TickFct_startGame+0x166>
     bf2:	00 00       	nop
     bf4:	89 81       	ldd	r24, Y+1	; 0x01
     bf6:	9a 81       	ldd	r25, Y+2	; 0x02
     bf8:	0f 90       	pop	r0
     bfa:	0f 90       	pop	r0
     bfc:	df 91       	pop	r29
     bfe:	cf 91       	pop	r28
     c00:	08 95       	ret

00000c02 <TickFct_direction>:
     c02:	cf 93       	push	r28
     c04:	df 93       	push	r29
     c06:	00 d0       	rcall	.+0      	; 0xc08 <TickFct_direction+0x6>
     c08:	cd b7       	in	r28, 0x3d	; 61
     c0a:	de b7       	in	r29, 0x3e	; 62
     c0c:	9a 83       	std	Y+2, r25	; 0x02
     c0e:	89 83       	std	Y+1, r24	; 0x01
     c10:	89 81       	ldd	r24, Y+1	; 0x01
     c12:	9a 81       	ldd	r25, Y+2	; 0x02
     c14:	00 97       	sbiw	r24, 0x00	; 0
     c16:	19 f0       	breq	.+6      	; 0xc1e <TickFct_direction+0x1c>
     c18:	01 97       	sbiw	r24, 0x01	; 1
     c1a:	b9 f0       	breq	.+46     	; 0xc4a <TickFct_direction+0x48>
     c1c:	cb c0       	rjmp	.+406    	; 0xdb4 <TickFct_direction+0x1b2>
     c1e:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <gameStart>
     c22:	88 23       	and	r24, r24
     c24:	09 f4       	brne	.+2      	; 0xc28 <TickFct_direction+0x26>
     c26:	c3 c0       	rjmp	.+390    	; 0xdae <TickFct_direction+0x1ac>
     c28:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <direction>
     c2c:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <curDirection>
     c30:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <lr.2299+0x1>
     c34:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <lr.2299>
     c38:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <ud.2300+0x1>
     c3c:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <ud.2300>
     c40:	81 e0       	ldi	r24, 0x01	; 1
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	9a 83       	std	Y+2, r25	; 0x02
     c46:	89 83       	std	Y+1, r24	; 0x01
     c48:	b5 c0       	rjmp	.+362    	; 0xdb4 <TickFct_direction+0x1b2>
     c4a:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <reset>
     c4e:	88 23       	and	r24, r24
     c50:	19 f0       	breq	.+6      	; 0xc58 <TickFct_direction+0x56>
     c52:	1a 82       	std	Y+2, r1	; 0x02
     c54:	19 82       	std	Y+1, r1	; 0x01
     c56:	ae c0       	rjmp	.+348    	; 0xdb4 <TickFct_direction+0x1b2>
     c58:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <gameOver>
     c5c:	88 23       	and	r24, r24
     c5e:	09 f0       	breq	.+2      	; 0xc62 <TickFct_direction+0x60>
     c60:	a8 c0       	rjmp	.+336    	; 0xdb2 <TickFct_direction+0x1b0>
     c62:	84 e0       	ldi	r24, 0x04	; 4
     c64:	cb db       	rcall	.-2154   	; 0x3fc <set_adc_pin>
     c66:	88 e7       	ldi	r24, 0x78	; 120
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	fc 01       	movw	r30, r24
     c6c:	80 81       	ld	r24, Z
     c6e:	91 81       	ldd	r25, Z+1	; 0x01
     c70:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <lr.2299+0x1>
     c74:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <lr.2299>
     c78:	85 e0       	ldi	r24, 0x05	; 5
     c7a:	c0 db       	rcall	.-2176   	; 0x3fc <set_adc_pin>
     c7c:	88 e7       	ldi	r24, 0x78	; 120
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	fc 01       	movw	r30, r24
     c82:	80 81       	ld	r24, Z
     c84:	91 81       	ldd	r25, Z+1	; 0x01
     c86:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <ud.2300+0x1>
     c8a:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <ud.2300>
     c8e:	8c e1       	ldi	r24, 0x1C	; 28
     c90:	01 db       	rcall	.-2558   	; 0x294 <LCD_Cursor>
     c92:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <lr.2299>
     c96:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <lr.2299+0x1>
     c9a:	84 3d       	cpi	r24, 0xD4	; 212
     c9c:	91 05       	cpc	r25, r1
     c9e:	d0 f4       	brcc	.+52     	; 0xcd4 <TickFct_direction+0xd2>
     ca0:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <ud.2300>
     ca4:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <ud.2300+0x1>
     ca8:	92 50       	subi	r25, 0x02	; 2
     caa:	81 30       	cpi	r24, 0x01	; 1
     cac:	9f 4f       	sbci	r25, 0xFF	; 255
     cae:	94 f0       	brlt	.+36     	; 0xcd4 <TickFct_direction+0xd2>
     cb0:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <ud.2300>
     cb4:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <ud.2300+0x1>
     cb8:	92 50       	subi	r25, 0x02	; 2
     cba:	8f 3f       	cpi	r24, 0xFF	; 255
     cbc:	91 05       	cpc	r25, r1
     cbe:	09 f0       	breq	.+2      	; 0xcc2 <TickFct_direction+0xc0>
     cc0:	4c f4       	brge	.+18     	; 0xcd4 <TickFct_direction+0xd2>
     cc2:	8c e6       	ldi	r24, 0x6C	; 108
     cc4:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <direction>
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <imageNum.2301>
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	5f da       	rcall	.-2882   	; 0x190 <LCD_WriteData>
     cd2:	62 c0       	rjmp	.+196    	; 0xd98 <TickFct_direction+0x196>
     cd4:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <lr.2299>
     cd8:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <lr.2299+0x1>
     cdc:	8d 32       	cpi	r24, 0x2D	; 45
     cde:	93 40       	sbci	r25, 0x03	; 3
     ce0:	d0 f0       	brcs	.+52     	; 0xd16 <TickFct_direction+0x114>
     ce2:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <ud.2300>
     ce6:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <ud.2300+0x1>
     cea:	92 50       	subi	r25, 0x02	; 2
     cec:	81 30       	cpi	r24, 0x01	; 1
     cee:	9f 4f       	sbci	r25, 0xFF	; 255
     cf0:	94 f0       	brlt	.+36     	; 0xd16 <TickFct_direction+0x114>
     cf2:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <ud.2300>
     cf6:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <ud.2300+0x1>
     cfa:	92 50       	subi	r25, 0x02	; 2
     cfc:	8f 3f       	cpi	r24, 0xFF	; 255
     cfe:	91 05       	cpc	r25, r1
     d00:	09 f0       	breq	.+2      	; 0xd04 <TickFct_direction+0x102>
     d02:	4c f4       	brge	.+18     	; 0xd16 <TickFct_direction+0x114>
     d04:	82 e7       	ldi	r24, 0x72	; 114
     d06:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <direction>
     d0a:	82 e0       	ldi	r24, 0x02	; 2
     d0c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <imageNum.2301>
     d10:	82 e0       	ldi	r24, 0x02	; 2
     d12:	3e da       	rcall	.-2948   	; 0x190 <LCD_WriteData>
     d14:	41 c0       	rjmp	.+130    	; 0xd98 <TickFct_direction+0x196>
     d16:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <ud.2300>
     d1a:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <ud.2300+0x1>
     d1e:	84 3d       	cpi	r24, 0xD4	; 212
     d20:	91 05       	cpc	r25, r1
     d22:	d0 f4       	brcc	.+52     	; 0xd58 <TickFct_direction+0x156>
     d24:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <lr.2299>
     d28:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <lr.2299+0x1>
     d2c:	92 50       	subi	r25, 0x02	; 2
     d2e:	81 30       	cpi	r24, 0x01	; 1
     d30:	9f 4f       	sbci	r25, 0xFF	; 255
     d32:	94 f0       	brlt	.+36     	; 0xd58 <TickFct_direction+0x156>
     d34:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <lr.2299>
     d38:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <lr.2299+0x1>
     d3c:	92 50       	subi	r25, 0x02	; 2
     d3e:	8f 3f       	cpi	r24, 0xFF	; 255
     d40:	91 05       	cpc	r25, r1
     d42:	09 f0       	breq	.+2      	; 0xd46 <TickFct_direction+0x144>
     d44:	4c f4       	brge	.+18     	; 0xd58 <TickFct_direction+0x156>
     d46:	85 e7       	ldi	r24, 0x75	; 117
     d48:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <direction>
     d4c:	83 e0       	ldi	r24, 0x03	; 3
     d4e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <imageNum.2301>
     d52:	83 e0       	ldi	r24, 0x03	; 3
     d54:	1d da       	rcall	.-3014   	; 0x190 <LCD_WriteData>
     d56:	20 c0       	rjmp	.+64     	; 0xd98 <TickFct_direction+0x196>
     d58:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <ud.2300>
     d5c:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <ud.2300+0x1>
     d60:	8d 32       	cpi	r24, 0x2D	; 45
     d62:	93 40       	sbci	r25, 0x03	; 3
     d64:	c8 f0       	brcs	.+50     	; 0xd98 <TickFct_direction+0x196>
     d66:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <lr.2299>
     d6a:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <lr.2299+0x1>
     d6e:	92 50       	subi	r25, 0x02	; 2
     d70:	81 30       	cpi	r24, 0x01	; 1
     d72:	9f 4f       	sbci	r25, 0xFF	; 255
     d74:	8c f0       	brlt	.+34     	; 0xd98 <TickFct_direction+0x196>
     d76:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <lr.2299>
     d7a:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <lr.2299+0x1>
     d7e:	92 50       	subi	r25, 0x02	; 2
     d80:	8f 3f       	cpi	r24, 0xFF	; 255
     d82:	91 05       	cpc	r25, r1
     d84:	09 f0       	breq	.+2      	; 0xd88 <TickFct_direction+0x186>
     d86:	44 f4       	brge	.+16     	; 0xd98 <TickFct_direction+0x196>
     d88:	84 e6       	ldi	r24, 0x64	; 100
     d8a:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <direction>
     d8e:	84 e0       	ldi	r24, 0x04	; 4
     d90:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <imageNum.2301>
     d94:	84 e0       	ldi	r24, 0x04	; 4
     d96:	fc d9       	rcall	.-3080   	; 0x190 <LCD_WriteData>
     d98:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <curDirection>
     d9c:	88 23       	and	r24, r24
     d9e:	21 f4       	brne	.+8      	; 0xda8 <TickFct_direction+0x1a6>
     da0:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <direction>
     da4:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <curDirection>
     da8:	8d e1       	ldi	r24, 0x1D	; 29
     daa:	74 da       	rcall	.-2840   	; 0x294 <LCD_Cursor>
     dac:	03 c0       	rjmp	.+6      	; 0xdb4 <TickFct_direction+0x1b2>
     dae:	00 00       	nop
     db0:	01 c0       	rjmp	.+2      	; 0xdb4 <TickFct_direction+0x1b2>
     db2:	00 00       	nop
     db4:	89 81       	ldd	r24, Y+1	; 0x01
     db6:	9a 81       	ldd	r25, Y+2	; 0x02
     db8:	0f 90       	pop	r0
     dba:	0f 90       	pop	r0
     dbc:	df 91       	pop	r29
     dbe:	cf 91       	pop	r28
     dc0:	08 95       	ret

00000dc2 <setSnakeDirection>:
     dc2:	cf 93       	push	r28
     dc4:	df 93       	push	r29
     dc6:	00 d0       	rcall	.+0      	; 0xdc8 <setSnakeDirection+0x6>
     dc8:	00 d0       	rcall	.+0      	; 0xdca <setSnakeDirection+0x8>
     dca:	cd b7       	in	r28, 0x3d	; 61
     dcc:	de b7       	in	r29, 0x3e	; 62
     dce:	9c 83       	std	Y+4, r25	; 0x04
     dd0:	8b 83       	std	Y+3, r24	; 0x03
     dd2:	8b 81       	ldd	r24, Y+3	; 0x03
     dd4:	9c 81       	ldd	r25, Y+4	; 0x04
     dd6:	9a 83       	std	Y+2, r25	; 0x02
     dd8:	89 83       	std	Y+1, r24	; 0x01
     dda:	24 c0       	rjmp	.+72     	; 0xe24 <setSnakeDirection+0x62>
     ddc:	89 81       	ldd	r24, Y+1	; 0x01
     dde:	9a 81       	ldd	r25, Y+2	; 0x02
     de0:	fc 01       	movw	r30, r24
     de2:	82 81       	ldd	r24, Z+2	; 0x02
     de4:	93 81       	ldd	r25, Z+3	; 0x03
     de6:	89 2b       	or	r24, r25
     de8:	b1 f0       	breq	.+44     	; 0xe16 <setSnakeDirection+0x54>
     dea:	89 81       	ldd	r24, Y+1	; 0x01
     dec:	9a 81       	ldd	r25, Y+2	; 0x02
     dee:	fc 01       	movw	r30, r24
     df0:	82 81       	ldd	r24, Z+2	; 0x02
     df2:	93 81       	ldd	r25, Z+3	; 0x03
     df4:	fc 01       	movw	r30, r24
     df6:	20 81       	ld	r18, Z
     df8:	89 81       	ldd	r24, Y+1	; 0x01
     dfa:	9a 81       	ldd	r25, Y+2	; 0x02
     dfc:	fc 01       	movw	r30, r24
     dfe:	20 83       	st	Z, r18
     e00:	89 81       	ldd	r24, Y+1	; 0x01
     e02:	9a 81       	ldd	r25, Y+2	; 0x02
     e04:	fc 01       	movw	r30, r24
     e06:	82 81       	ldd	r24, Z+2	; 0x02
     e08:	93 81       	ldd	r25, Z+3	; 0x03
     e0a:	fc 01       	movw	r30, r24
     e0c:	21 81       	ldd	r18, Z+1	; 0x01
     e0e:	89 81       	ldd	r24, Y+1	; 0x01
     e10:	9a 81       	ldd	r25, Y+2	; 0x02
     e12:	fc 01       	movw	r30, r24
     e14:	21 83       	std	Z+1, r18	; 0x01
     e16:	89 81       	ldd	r24, Y+1	; 0x01
     e18:	9a 81       	ldd	r25, Y+2	; 0x02
     e1a:	fc 01       	movw	r30, r24
     e1c:	82 81       	ldd	r24, Z+2	; 0x02
     e1e:	93 81       	ldd	r25, Z+3	; 0x03
     e20:	9a 83       	std	Y+2, r25	; 0x02
     e22:	89 83       	std	Y+1, r24	; 0x01
     e24:	89 81       	ldd	r24, Y+1	; 0x01
     e26:	9a 81       	ldd	r25, Y+2	; 0x02
     e28:	fc 01       	movw	r30, r24
     e2a:	82 81       	ldd	r24, Z+2	; 0x02
     e2c:	93 81       	ldd	r25, Z+3	; 0x03
     e2e:	89 2b       	or	r24, r25
     e30:	a9 f6       	brne	.-86     	; 0xddc <setSnakeDirection+0x1a>
     e32:	89 81       	ldd	r24, Y+1	; 0x01
     e34:	9a 81       	ldd	r25, Y+2	; 0x02
     e36:	0f 90       	pop	r0
     e38:	0f 90       	pop	r0
     e3a:	0f 90       	pop	r0
     e3c:	0f 90       	pop	r0
     e3e:	df 91       	pop	r29
     e40:	cf 91       	pop	r28
     e42:	08 95       	ret

00000e44 <findHead>:
     e44:	cf 93       	push	r28
     e46:	df 93       	push	r29
     e48:	00 d0       	rcall	.+0      	; 0xe4a <findHead+0x6>
     e4a:	00 d0       	rcall	.+0      	; 0xe4c <findHead+0x8>
     e4c:	cd b7       	in	r28, 0x3d	; 61
     e4e:	de b7       	in	r29, 0x3e	; 62
     e50:	9c 83       	std	Y+4, r25	; 0x04
     e52:	8b 83       	std	Y+3, r24	; 0x03
     e54:	8b 81       	ldd	r24, Y+3	; 0x03
     e56:	9c 81       	ldd	r25, Y+4	; 0x04
     e58:	9a 83       	std	Y+2, r25	; 0x02
     e5a:	89 83       	std	Y+1, r24	; 0x01
     e5c:	07 c0       	rjmp	.+14     	; 0xe6c <findHead+0x28>
     e5e:	89 81       	ldd	r24, Y+1	; 0x01
     e60:	9a 81       	ldd	r25, Y+2	; 0x02
     e62:	fc 01       	movw	r30, r24
     e64:	82 81       	ldd	r24, Z+2	; 0x02
     e66:	93 81       	ldd	r25, Z+3	; 0x03
     e68:	9a 83       	std	Y+2, r25	; 0x02
     e6a:	89 83       	std	Y+1, r24	; 0x01
     e6c:	89 81       	ldd	r24, Y+1	; 0x01
     e6e:	9a 81       	ldd	r25, Y+2	; 0x02
     e70:	fc 01       	movw	r30, r24
     e72:	82 81       	ldd	r24, Z+2	; 0x02
     e74:	93 81       	ldd	r25, Z+3	; 0x03
     e76:	89 2b       	or	r24, r25
     e78:	91 f7       	brne	.-28     	; 0xe5e <findHead+0x1a>
     e7a:	89 81       	ldd	r24, Y+1	; 0x01
     e7c:	9a 81       	ldd	r25, Y+2	; 0x02
     e7e:	0f 90       	pop	r0
     e80:	0f 90       	pop	r0
     e82:	0f 90       	pop	r0
     e84:	0f 90       	pop	r0
     e86:	df 91       	pop	r29
     e88:	cf 91       	pop	r28
     e8a:	08 95       	ret

00000e8c <moveSnake>:
     e8c:	cf 93       	push	r28
     e8e:	df 93       	push	r29
     e90:	cd b7       	in	r28, 0x3d	; 61
     e92:	de b7       	in	r29, 0x3e	; 62
     e94:	2f 97       	sbiw	r28, 0x0f	; 15
     e96:	0f b6       	in	r0, 0x3f	; 63
     e98:	f8 94       	cli
     e9a:	de bf       	out	0x3e, r29	; 62
     e9c:	0f be       	out	0x3f, r0	; 63
     e9e:	cd bf       	out	0x3d, r28	; 61
     ea0:	9d 87       	std	Y+13, r25	; 0x0d
     ea2:	8c 87       	std	Y+12, r24	; 0x0c
     ea4:	7f 87       	std	Y+15, r23	; 0x0f
     ea6:	6e 87       	std	Y+14, r22	; 0x0e
     ea8:	19 82       	std	Y+1, r1	; 0x01
     eaa:	1a 82       	std	Y+2, r1	; 0x02
     eac:	1b 82       	std	Y+3, r1	; 0x03
     eae:	19 82       	std	Y+1, r1	; 0x01
     eb0:	1d c0       	rjmp	.+58     	; 0xeec <moveSnake+0x60>
     eb2:	1a 82       	std	Y+2, r1	; 0x02
     eb4:	15 c0       	rjmp	.+42     	; 0xee0 <moveSnake+0x54>
     eb6:	89 81       	ldd	r24, Y+1	; 0x01
     eb8:	28 2f       	mov	r18, r24
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	8a 81       	ldd	r24, Y+2	; 0x02
     ebe:	88 2f       	mov	r24, r24
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	22 0f       	add	r18, r18
     ec4:	33 1f       	adc	r19, r19
     ec6:	22 0f       	add	r18, r18
     ec8:	33 1f       	adc	r19, r19
     eca:	22 0f       	add	r18, r18
     ecc:	33 1f       	adc	r19, r19
     ece:	82 0f       	add	r24, r18
     ed0:	93 1f       	adc	r25, r19
     ed2:	88 51       	subi	r24, 0x18	; 24
     ed4:	9e 4f       	sbci	r25, 0xFE	; 254
     ed6:	fc 01       	movw	r30, r24
     ed8:	10 82       	st	Z, r1
     eda:	8a 81       	ldd	r24, Y+2	; 0x02
     edc:	8f 5f       	subi	r24, 0xFF	; 255
     ede:	8a 83       	std	Y+2, r24	; 0x02
     ee0:	8a 81       	ldd	r24, Y+2	; 0x02
     ee2:	88 30       	cpi	r24, 0x08	; 8
     ee4:	40 f3       	brcs	.-48     	; 0xeb6 <moveSnake+0x2a>
     ee6:	89 81       	ldd	r24, Y+1	; 0x01
     ee8:	8f 5f       	subi	r24, 0xFF	; 255
     eea:	89 83       	std	Y+1, r24	; 0x01
     eec:	89 81       	ldd	r24, Y+1	; 0x01
     eee:	88 30       	cpi	r24, 0x08	; 8
     ef0:	00 f3       	brcs	.-64     	; 0xeb2 <moveSnake+0x26>
     ef2:	8c 85       	ldd	r24, Y+12	; 0x0c
     ef4:	9d 85       	ldd	r25, Y+13	; 0x0d
     ef6:	9d 83       	std	Y+5, r25	; 0x05
     ef8:	8c 83       	std	Y+4, r24	; 0x04
     efa:	1e 82       	std	Y+6, r1	; 0x06
     efc:	8f ef       	ldi	r24, 0xFF	; 255
     efe:	8f 83       	std	Y+7, r24	; 0x07
     f00:	3b c0       	rjmp	.+118    	; 0xf78 <moveSnake+0xec>
     f02:	8c 81       	ldd	r24, Y+4	; 0x04
     f04:	9d 81       	ldd	r25, Y+5	; 0x05
     f06:	fc 01       	movw	r30, r24
     f08:	81 81       	ldd	r24, Z+1	; 0x01
     f0a:	28 2f       	mov	r18, r24
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	8c 81       	ldd	r24, Y+4	; 0x04
     f10:	9d 81       	ldd	r25, Y+5	; 0x05
     f12:	fc 01       	movw	r30, r24
     f14:	80 81       	ld	r24, Z
     f16:	88 2f       	mov	r24, r24
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	4c 81       	ldd	r20, Y+4	; 0x04
     f1c:	5d 81       	ldd	r21, Y+5	; 0x05
     f1e:	fa 01       	movw	r30, r20
     f20:	41 81       	ldd	r20, Z+1	; 0x01
     f22:	64 2f       	mov	r22, r20
     f24:	70 e0       	ldi	r23, 0x00	; 0
     f26:	4c 81       	ldd	r20, Y+4	; 0x04
     f28:	5d 81       	ldd	r21, Y+5	; 0x05
     f2a:	fa 01       	movw	r30, r20
     f2c:	40 81       	ld	r20, Z
     f2e:	44 2f       	mov	r20, r20
     f30:	50 e0       	ldi	r21, 0x00	; 0
     f32:	66 0f       	add	r22, r22
     f34:	77 1f       	adc	r23, r23
     f36:	66 0f       	add	r22, r22
     f38:	77 1f       	adc	r23, r23
     f3a:	66 0f       	add	r22, r22
     f3c:	77 1f       	adc	r23, r23
     f3e:	46 0f       	add	r20, r22
     f40:	57 1f       	adc	r21, r23
     f42:	48 51       	subi	r20, 0x18	; 24
     f44:	5e 4f       	sbci	r21, 0xFE	; 254
     f46:	fa 01       	movw	r30, r20
     f48:	40 81       	ld	r20, Z
     f4a:	4f 5f       	subi	r20, 0xFF	; 255
     f4c:	22 0f       	add	r18, r18
     f4e:	33 1f       	adc	r19, r19
     f50:	22 0f       	add	r18, r18
     f52:	33 1f       	adc	r19, r19
     f54:	22 0f       	add	r18, r18
     f56:	33 1f       	adc	r19, r19
     f58:	82 0f       	add	r24, r18
     f5a:	93 1f       	adc	r25, r19
     f5c:	88 51       	subi	r24, 0x18	; 24
     f5e:	9e 4f       	sbci	r25, 0xFE	; 254
     f60:	fc 01       	movw	r30, r24
     f62:	40 83       	st	Z, r20
     f64:	8c 81       	ldd	r24, Y+4	; 0x04
     f66:	9d 81       	ldd	r25, Y+5	; 0x05
     f68:	fc 01       	movw	r30, r24
     f6a:	82 81       	ldd	r24, Z+2	; 0x02
     f6c:	93 81       	ldd	r25, Z+3	; 0x03
     f6e:	9d 83       	std	Y+5, r25	; 0x05
     f70:	8c 83       	std	Y+4, r24	; 0x04
     f72:	8b 81       	ldd	r24, Y+3	; 0x03
     f74:	8f 5f       	subi	r24, 0xFF	; 255
     f76:	8b 83       	std	Y+3, r24	; 0x03
     f78:	8c 81       	ldd	r24, Y+4	; 0x04
     f7a:	9d 81       	ldd	r25, Y+5	; 0x05
     f7c:	89 2b       	or	r24, r25
     f7e:	09 f6       	brne	.-126    	; 0xf02 <moveSnake+0x76>
     f80:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
     f84:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
     f88:	fc 01       	movw	r30, r24
     f8a:	80 81       	ld	r24, Z
     f8c:	28 2f       	mov	r18, r24
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <tempHeadX>
     f94:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <tempHeadX+0x1>
     f98:	28 17       	cp	r18, r24
     f9a:	39 07       	cpc	r19, r25
     f9c:	09 f0       	breq	.+2      	; 0xfa0 <moveSnake+0x114>
     f9e:	85 c0       	rjmp	.+266    	; 0x10aa <moveSnake+0x21e>
     fa0:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
     fa4:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
     fa8:	fc 01       	movw	r30, r24
     faa:	81 81       	ldd	r24, Z+1	; 0x01
     fac:	28 2f       	mov	r18, r24
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <tempHeadY>
     fb4:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <tempHeadY+0x1>
     fb8:	28 17       	cp	r18, r24
     fba:	39 07       	cpc	r19, r25
     fbc:	09 f0       	breq	.+2      	; 0xfc0 <moveSnake+0x134>
     fbe:	75 c0       	rjmp	.+234    	; 0x10aa <moveSnake+0x21e>
     fc0:	84 e0       	ldi	r24, 0x04	; 4
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	a3 d5       	rcall	.+2886   	; 0x1b0c <malloc>
     fc6:	99 87       	std	Y+9, r25	; 0x09
     fc8:	88 87       	std	Y+8, r24	; 0x08
     fca:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
     fce:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
     fd2:	fc 01       	movw	r30, r24
     fd4:	20 81       	ld	r18, Z
     fd6:	88 85       	ldd	r24, Y+8	; 0x08
     fd8:	99 85       	ldd	r25, Y+9	; 0x09
     fda:	fc 01       	movw	r30, r24
     fdc:	20 83       	st	Z, r18
     fde:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
     fe2:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
     fe6:	fc 01       	movw	r30, r24
     fe8:	21 81       	ldd	r18, Z+1	; 0x01
     fea:	88 85       	ldd	r24, Y+8	; 0x08
     fec:	99 85       	ldd	r25, Y+9	; 0x09
     fee:	fc 01       	movw	r30, r24
     ff0:	21 83       	std	Z+1, r18	; 0x01
     ff2:	88 85       	ldd	r24, Y+8	; 0x08
     ff4:	99 85       	ldd	r25, Y+9	; 0x09
     ff6:	fc 01       	movw	r30, r24
     ff8:	13 82       	std	Z+3, r1	; 0x03
     ffa:	12 82       	std	Z+2, r1	; 0x02
     ffc:	8e 85       	ldd	r24, Y+14	; 0x0e
     ffe:	9f 85       	ldd	r25, Y+15	; 0x0f
    1000:	28 85       	ldd	r18, Y+8	; 0x08
    1002:	39 85       	ldd	r19, Y+9	; 0x09
    1004:	fc 01       	movw	r30, r24
    1006:	33 83       	std	Z+3, r19	; 0x03
    1008:	22 83       	std	Z+2, r18	; 0x02
    100a:	8e 85       	ldd	r24, Y+14	; 0x0e
    100c:	9f 85       	ldd	r25, Y+15	; 0x0f
    100e:	fc 01       	movw	r30, r24
    1010:	82 81       	ldd	r24, Z+2	; 0x02
    1012:	93 81       	ldd	r25, Z+3	; 0x03
    1014:	9f 87       	std	Y+15, r25	; 0x0f
    1016:	8e 87       	std	Y+14, r24	; 0x0e
    1018:	81 e0       	ldi	r24, 0x01	; 1
    101a:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <eaten>
    101e:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <score>
    1022:	8f 5f       	subi	r24, 0xFF	; 255
    1024:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <score>
    1028:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <score>
    102c:	88 2f       	mov	r24, r24
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	29 2f       	mov	r18, r25
    1032:	2f 93       	push	r18
    1034:	8f 93       	push	r24
    1036:	81 e4       	ldi	r24, 0x41	; 65
    1038:	91 e0       	ldi	r25, 0x01	; 1
    103a:	89 2f       	mov	r24, r25
    103c:	8f 93       	push	r24
    103e:	81 e4       	ldi	r24, 0x41	; 65
    1040:	91 e0       	ldi	r25, 0x01	; 1
    1042:	8f 93       	push	r24
    1044:	ce 01       	movw	r24, r28
    1046:	0a 96       	adiw	r24, 0x0a	; 10
    1048:	29 2f       	mov	r18, r25
    104a:	2f 93       	push	r18
    104c:	8f 93       	push	r24
    104e:	d4 d6       	rcall	.+3496   	; 0x1df8 <sprintf>
    1050:	0f 90       	pop	r0
    1052:	0f 90       	pop	r0
    1054:	0f 90       	pop	r0
    1056:	0f 90       	pop	r0
    1058:	0f 90       	pop	r0
    105a:	0f 90       	pop	r0
    105c:	ce 01       	movw	r24, r28
    105e:	0a 96       	adiw	r24, 0x0a	; 10
    1060:	bc 01       	movw	r22, r24
    1062:	88 e0       	ldi	r24, 0x08	; 8
    1064:	ee d8       	rcall	.-3620   	; 0x242 <LCD_DisplayStringNoClear>
    1066:	80 e0       	ldi	r24, 0x00	; 0
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	0e 94 d7 11 	call	0x23ae	; 0x23ae <eeprom_read_byte>
    106e:	98 2f       	mov	r25, r24
    1070:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <score>
    1074:	98 17       	cp	r25, r24
    1076:	38 f4       	brcc	.+14     	; 0x1086 <moveSnake+0x1fa>
    1078:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <score>
    107c:	68 2f       	mov	r22, r24
    107e:	80 e0       	ldi	r24, 0x00	; 0
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	0e 94 df 11 	call	0x23be	; 0x23be <eeprom_write_byte>
    1086:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <score>
    108a:	8f 33       	cpi	r24, 0x3F	; 63
    108c:	61 f5       	brne	.+88     	; 0x10e6 <moveSnake+0x25a>
    108e:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <score>
    1092:	6e e4       	ldi	r22, 0x4E	; 78
    1094:	71 e0       	ldi	r23, 0x01	; 1
    1096:	81 e0       	ldi	r24, 0x01	; 1
    1098:	aa d8       	rcall	.-3756   	; 0x1ee <LCD_DisplayString>
    109a:	66 e5       	ldi	r22, 0x56	; 86
    109c:	71 e0       	ldi	r23, 0x01	; 1
    109e:	81 e1       	ldi	r24, 0x11	; 17
    10a0:	d0 d8       	rcall	.-3680   	; 0x242 <LCD_DisplayStringNoClear>
    10a2:	81 e0       	ldi	r24, 0x01	; 1
    10a4:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <gameOver>
    10a8:	1e c0       	rjmp	.+60     	; 0x10e6 <moveSnake+0x25a>
    10aa:	8e 85       	ldd	r24, Y+14	; 0x0e
    10ac:	9f 85       	ldd	r25, Y+15	; 0x0f
    10ae:	fc 01       	movw	r30, r24
    10b0:	81 81       	ldd	r24, Z+1	; 0x01
    10b2:	28 2f       	mov	r18, r24
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	8e 85       	ldd	r24, Y+14	; 0x0e
    10b8:	9f 85       	ldd	r25, Y+15	; 0x0f
    10ba:	fc 01       	movw	r30, r24
    10bc:	80 81       	ld	r24, Z
    10be:	88 2f       	mov	r24, r24
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	22 0f       	add	r18, r18
    10c4:	33 1f       	adc	r19, r19
    10c6:	22 0f       	add	r18, r18
    10c8:	33 1f       	adc	r19, r19
    10ca:	22 0f       	add	r18, r18
    10cc:	33 1f       	adc	r19, r19
    10ce:	82 0f       	add	r24, r18
    10d0:	93 1f       	adc	r25, r19
    10d2:	88 51       	subi	r24, 0x18	; 24
    10d4:	9e 4f       	sbci	r25, 0xFE	; 254
    10d6:	fc 01       	movw	r30, r24
    10d8:	80 81       	ld	r24, Z
    10da:	82 30       	cpi	r24, 0x02	; 2
    10dc:	28 f0       	brcs	.+10     	; 0x10e8 <moveSnake+0x25c>
    10de:	81 e0       	ldi	r24, 0x01	; 1
    10e0:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <crashed>
    10e4:	0b c0       	rjmp	.+22     	; 0x10fc <moveSnake+0x270>
    10e6:	00 00       	nop
    10e8:	8f 81       	ldd	r24, Y+7	; 0x07
    10ea:	28 2f       	mov	r18, r24
    10ec:	30 e0       	ldi	r19, 0x00	; 0
    10ee:	8e 81       	ldd	r24, Y+6	; 0x06
    10f0:	88 2f       	mov	r24, r24
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	48 ee       	ldi	r20, 0xE8	; 232
    10f6:	51 e0       	ldi	r21, 0x01	; 1
    10f8:	b9 01       	movw	r22, r18
    10fa:	09 d0       	rcall	.+18     	; 0x110e <generateFood>
    10fc:	2f 96       	adiw	r28, 0x0f	; 15
    10fe:	0f b6       	in	r0, 0x3f	; 63
    1100:	f8 94       	cli
    1102:	de bf       	out	0x3e, r29	; 62
    1104:	0f be       	out	0x3f, r0	; 63
    1106:	cd bf       	out	0x3d, r28	; 61
    1108:	df 91       	pop	r29
    110a:	cf 91       	pop	r28
    110c:	08 95       	ret

0000110e <generateFood>:
void generateFood(unsigned char tempColVal, unsigned char tempColSel, unsigned char coordinates[8][8])// generates random food coordinate and displays the snake
{
    110e:	cf 93       	push	r28
    1110:	df 93       	push	r29
    1112:	cd b7       	in	r28, 0x3d	; 61
    1114:	de b7       	in	r29, 0x3e	; 62
    1116:	27 97       	sbiw	r28, 0x07	; 7
    1118:	0f b6       	in	r0, 0x3f	; 63
    111a:	f8 94       	cli
    111c:	de bf       	out	0x3e, r29	; 62
    111e:	0f be       	out	0x3f, r0	; 63
    1120:	cd bf       	out	0x3d, r28	; 61
    1122:	8c 83       	std	Y+4, r24	; 0x04
    1124:	6d 83       	std	Y+5, r22	; 0x05
    1126:	5f 83       	std	Y+7, r21	; 0x07
    1128:	4e 83       	std	Y+6, r20	; 0x06
	unsigned char i = 0;
    112a:	19 82       	std	Y+1, r1	; 0x01
	static unsigned char j = 0;
	if(!eaten) 
    112c:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <eaten>
    1130:	88 23       	and	r24, r24
    1132:	09 f0       	breq	.+2      	; 0x1136 <generateFood+0x28>
    1134:	61 c0       	rjmp	.+194    	; 0x11f8 <generateFood+0xea>
	{
		coordinates[snakeFood->y][snakeFood->x] = 1;
    1136:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
    113a:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
    113e:	fc 01       	movw	r30, r24
    1140:	81 81       	ldd	r24, Z+1	; 0x01
    1142:	88 2f       	mov	r24, r24
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	88 0f       	add	r24, r24
    1148:	99 1f       	adc	r25, r25
    114a:	88 0f       	add	r24, r24
    114c:	99 1f       	adc	r25, r25
    114e:	88 0f       	add	r24, r24
    1150:	99 1f       	adc	r25, r25
    1152:	2e 81       	ldd	r18, Y+6	; 0x06
    1154:	3f 81       	ldd	r19, Y+7	; 0x07
    1156:	28 0f       	add	r18, r24
    1158:	39 1f       	adc	r19, r25
    115a:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
    115e:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
    1162:	fc 01       	movw	r30, r24
    1164:	80 81       	ld	r24, Z
    1166:	88 2f       	mov	r24, r24
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	82 0f       	add	r24, r18
    116c:	93 1f       	adc	r25, r19
    116e:	21 e0       	ldi	r18, 0x01	; 1
    1170:	fc 01       	movw	r30, r24
    1172:	20 83       	st	Z, r18
		
		for(i = 0; i < 8; ++i)
    1174:	19 82       	std	Y+1, r1	; 0x01
    1176:	26 c0       	rjmp	.+76     	; 0x11c4 <generateFood+0xb6>
		{
			if(coordinates[j][i] == 1)
    1178:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <j.2363>
    117c:	88 2f       	mov	r24, r24
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	88 0f       	add	r24, r24
    1182:	99 1f       	adc	r25, r25
    1184:	88 0f       	add	r24, r24
    1186:	99 1f       	adc	r25, r25
    1188:	88 0f       	add	r24, r24
    118a:	99 1f       	adc	r25, r25
    118c:	2e 81       	ldd	r18, Y+6	; 0x06
    118e:	3f 81       	ldd	r19, Y+7	; 0x07
    1190:	28 0f       	add	r18, r24
    1192:	39 1f       	adc	r19, r25
    1194:	89 81       	ldd	r24, Y+1	; 0x01
    1196:	88 2f       	mov	r24, r24
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	82 0f       	add	r24, r18
    119c:	93 1f       	adc	r25, r19
    119e:	fc 01       	movw	r30, r24
    11a0:	80 81       	ld	r24, Z
    11a2:	81 30       	cpi	r24, 0x01	; 1
    11a4:	61 f4       	brne	.+24     	; 0x11be <generateFood+0xb0>
			{
				tempColVal = SetBit(tempColVal, j, 1);
    11a6:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <j.2363>
    11aa:	41 e0       	ldi	r20, 0x01	; 1
    11ac:	68 2f       	mov	r22, r24
    11ae:	8c 81       	ldd	r24, Y+4	; 0x04
    11b0:	e6 d8       	rcall	.-3636   	; 0x37e <SetBit>
    11b2:	8c 83       	std	Y+4, r24	; 0x04
				tempColSel = SetBit(tempColSel, i, 0);
    11b4:	40 e0       	ldi	r20, 0x00	; 0
    11b6:	69 81       	ldd	r22, Y+1	; 0x01
    11b8:	8d 81       	ldd	r24, Y+5	; 0x05
    11ba:	e1 d8       	rcall	.-3646   	; 0x37e <SetBit>
    11bc:	8d 83       	std	Y+5, r24	; 0x05
	static unsigned char j = 0;
	if(!eaten) 
	{
		coordinates[snakeFood->y][snakeFood->x] = 1;
		
		for(i = 0; i < 8; ++i)
    11be:	89 81       	ldd	r24, Y+1	; 0x01
    11c0:	8f 5f       	subi	r24, 0xFF	; 255
    11c2:	89 83       	std	Y+1, r24	; 0x01
    11c4:	89 81       	ldd	r24, Y+1	; 0x01
    11c6:	88 30       	cpi	r24, 0x08	; 8
    11c8:	b8 f2       	brcs	.-82     	; 0x1178 <generateFood+0x6a>
				tempColVal = SetBit(tempColVal, j, 1);
				tempColSel = SetBit(tempColSel, i, 0);
				
			}
		}
		PORTC = tempColVal;
    11ca:	88 e2       	ldi	r24, 0x28	; 40
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	2c 81       	ldd	r18, Y+4	; 0x04
    11d0:	fc 01       	movw	r30, r24
    11d2:	20 83       	st	Z, r18
		PORTB = tempColSel;
    11d4:	85 e2       	ldi	r24, 0x25	; 37
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	2d 81       	ldd	r18, Y+5	; 0x05
    11da:	fc 01       	movw	r30, r24
    11dc:	20 83       	st	Z, r18
		j+= 1;
    11de:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <j.2363>
    11e2:	8f 5f       	subi	r24, 0xFF	; 255
    11e4:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <j.2363>
		if(j >= 8)// led matrix multiplexing logic one row at a time every ms
    11e8:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <j.2363>
    11ec:	88 30       	cpi	r24, 0x08	; 8
    11ee:	08 f4       	brcc	.+2      	; 0x11f2 <generateFood+0xe4>
    11f0:	67 c0       	rjmp	.+206    	; 0x12c0 <generateFood+0x1b2>
		{
			j = 0;
    11f2:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <j.2363>
		}
		return;
    11f6:	64 c0       	rjmp	.+200    	; 0x12c0 <generateFood+0x1b2>
	}
	eaten = 0;
    11f8:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <eaten>
	unsigned char tempX = rand() % 8;
    11fc:	ef d5       	rcall	.+3038   	; 0x1ddc <rand>
    11fe:	87 70       	andi	r24, 0x07	; 7
    1200:	90 78       	andi	r25, 0x80	; 128
    1202:	99 23       	and	r25, r25
    1204:	24 f4       	brge	.+8      	; 0x120e <generateFood+0x100>
    1206:	01 97       	sbiw	r24, 0x01	; 1
    1208:	88 6f       	ori	r24, 0xF8	; 248
    120a:	9f 6f       	ori	r25, 0xFF	; 255
    120c:	01 96       	adiw	r24, 0x01	; 1
	unsigned char tempY = rand() % 8;
    120e:	8a 83       	std	Y+2, r24	; 0x02
    1210:	e5 d5       	rcall	.+3018   	; 0x1ddc <rand>
    1212:	87 70       	andi	r24, 0x07	; 7
    1214:	90 78       	andi	r25, 0x80	; 128
    1216:	99 23       	and	r25, r25
    1218:	24 f4       	brge	.+8      	; 0x1222 <generateFood+0x114>
    121a:	01 97       	sbiw	r24, 0x01	; 1
    121c:	88 6f       	ori	r24, 0xF8	; 248
    121e:	9f 6f       	ori	r25, 0xFF	; 255
    1220:	01 96       	adiw	r24, 0x01	; 1
	while(coordinates[tempY][tempX] >= 1) // makes sure that food doesnt spawn on top of snake
    1222:	8b 83       	std	Y+3, r24	; 0x03
	{
		tempX = rand() % 8;
    1224:	14 c0       	rjmp	.+40     	; 0x124e <generateFood+0x140>
    1226:	da d5       	rcall	.+2996   	; 0x1ddc <rand>
    1228:	87 70       	andi	r24, 0x07	; 7
    122a:	90 78       	andi	r25, 0x80	; 128
    122c:	99 23       	and	r25, r25
    122e:	24 f4       	brge	.+8      	; 0x1238 <generateFood+0x12a>
    1230:	01 97       	sbiw	r24, 0x01	; 1
    1232:	88 6f       	ori	r24, 0xF8	; 248
    1234:	9f 6f       	ori	r25, 0xFF	; 255
    1236:	01 96       	adiw	r24, 0x01	; 1
		tempY = rand() % 8;
    1238:	8a 83       	std	Y+2, r24	; 0x02
    123a:	d0 d5       	rcall	.+2976   	; 0x1ddc <rand>
    123c:	87 70       	andi	r24, 0x07	; 7
    123e:	90 78       	andi	r25, 0x80	; 128
    1240:	99 23       	and	r25, r25
    1242:	24 f4       	brge	.+8      	; 0x124c <generateFood+0x13e>
    1244:	01 97       	sbiw	r24, 0x01	; 1
    1246:	88 6f       	ori	r24, 0xF8	; 248
    1248:	9f 6f       	ori	r25, 0xFF	; 255
    124a:	01 96       	adiw	r24, 0x01	; 1
    124c:	8b 83       	std	Y+3, r24	; 0x03
		return;
	}
	eaten = 0;
	unsigned char tempX = rand() % 8;
	unsigned char tempY = rand() % 8;
	while(coordinates[tempY][tempX] >= 1) // makes sure that food doesnt spawn on top of snake
    124e:	8b 81       	ldd	r24, Y+3	; 0x03
    1250:	88 2f       	mov	r24, r24
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	88 0f       	add	r24, r24
    1256:	99 1f       	adc	r25, r25
    1258:	88 0f       	add	r24, r24
    125a:	99 1f       	adc	r25, r25
    125c:	88 0f       	add	r24, r24
    125e:	99 1f       	adc	r25, r25
    1260:	2e 81       	ldd	r18, Y+6	; 0x06
    1262:	3f 81       	ldd	r19, Y+7	; 0x07
    1264:	28 0f       	add	r18, r24
    1266:	39 1f       	adc	r19, r25
    1268:	8a 81       	ldd	r24, Y+2	; 0x02
    126a:	88 2f       	mov	r24, r24
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	82 0f       	add	r24, r18
    1270:	93 1f       	adc	r25, r19
    1272:	fc 01       	movw	r30, r24
    1274:	80 81       	ld	r24, Z
    1276:	88 23       	and	r24, r24
    1278:	b1 f6       	brne	.-84     	; 0x1226 <generateFood+0x118>
	{
		tempX = rand() % 8;
		tempY = rand() % 8;
	}
	snakeFood->x = tempX;
    127a:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
    127e:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
    1282:	2a 81       	ldd	r18, Y+2	; 0x02
    1284:	fc 01       	movw	r30, r24
    1286:	20 83       	st	Z, r18
	snakeFood->y = tempY;
    1288:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
    128c:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
    1290:	2b 81       	ldd	r18, Y+3	; 0x03
    1292:	fc 01       	movw	r30, r24
	tempColVal = SetBit(tempColVal,tempY, 1);
    1294:	21 83       	std	Z+1, r18	; 0x01
    1296:	41 e0       	ldi	r20, 0x01	; 1
    1298:	6b 81       	ldd	r22, Y+3	; 0x03
    129a:	8c 81       	ldd	r24, Y+4	; 0x04
    129c:	70 d8       	rcall	.-3872   	; 0x37e <SetBit>
	tempColSel = SetBit(tempColSel, tempX, 0);
    129e:	8c 83       	std	Y+4, r24	; 0x04
    12a0:	40 e0       	ldi	r20, 0x00	; 0
    12a2:	6a 81       	ldd	r22, Y+2	; 0x02
    12a4:	8d 81       	ldd	r24, Y+5	; 0x05
    12a6:	6b d8       	rcall	.-3882   	; 0x37e <SetBit>
    12a8:	8d 83       	std	Y+5, r24	; 0x05
	PORTC = tempColVal;
    12aa:	88 e2       	ldi	r24, 0x28	; 40
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	2c 81       	ldd	r18, Y+4	; 0x04
    12b0:	fc 01       	movw	r30, r24
    12b2:	20 83       	st	Z, r18
	PORTB = tempColSel;
    12b4:	85 e2       	ldi	r24, 0x25	; 37
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	2d 81       	ldd	r18, Y+5	; 0x05
    12ba:	fc 01       	movw	r30, r24
    12bc:	20 83       	st	Z, r18
    12be:	01 c0       	rjmp	.+2      	; 0x12c2 <generateFood+0x1b4>
		j+= 1;
		if(j >= 8)// led matrix multiplexing logic one row at a time every ms
		{
			j = 0;
		}
		return;
    12c0:	00 00       	nop
	snakeFood->y = tempY;
	tempColVal = SetBit(tempColVal,tempY, 1);
	tempColSel = SetBit(tempColSel, tempX, 0);
	PORTC = tempColVal;
	PORTB = tempColSel;
}
    12c2:	27 96       	adiw	r28, 0x07	; 7
    12c4:	0f b6       	in	r0, 0x3f	; 63
    12c6:	f8 94       	cli
    12c8:	de bf       	out	0x3e, r29	; 62
    12ca:	0f be       	out	0x3f, r0	; 63
    12cc:	cd bf       	out	0x3d, r28	; 61
    12ce:	df 91       	pop	r29
    12d0:	cf 91       	pop	r28
    12d2:	08 95       	ret

000012d4 <TickFct_game>:



enum gameSM{game_start, game_running, game_gameOver};
int TickFct_game(int state)
{
    12d4:	0f 93       	push	r16
    12d6:	1f 93       	push	r17
    12d8:	cf 93       	push	r28
    12da:	df 93       	push	r29
    12dc:	cd b7       	in	r28, 0x3d	; 61
    12de:	de b7       	in	r29, 0x3e	; 62
    12e0:	2c 97       	sbiw	r28, 0x0c	; 12
    12e2:	0f b6       	in	r0, 0x3f	; 63
    12e4:	f8 94       	cli
    12e6:	de bf       	out	0x3e, r29	; 62
    12e8:	0f be       	out	0x3f, r0	; 63
    12ea:	cd bf       	out	0x3d, r28	; 61
    12ec:	9c 87       	std	Y+12, r25	; 0x0c
    12ee:	8b 87       	std	Y+11, r24	; 0x0b
	static unsigned char msgDisplayed2 = 0;
	unsigned char column_val = 0x00; // sets the pattern displayed on columns
    12f0:	1d 82       	std	Y+5, r1	; 0x05
	unsigned char column_sel = 0xFF; // grounds column to display pattern, 
    12f2:	8f ef       	ldi	r24, 0xFF	; 255
    12f4:	8e 83       	std	Y+6, r24	; 0x06
	//static unsigned char flash = 0x00;
	

	switch(state)
    12f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    12f8:	9c 85       	ldd	r25, Y+12	; 0x0c
    12fa:	81 30       	cpi	r24, 0x01	; 1
    12fc:	91 05       	cpc	r25, r1
    12fe:	09 f4       	brne	.+2      	; 0x1302 <TickFct_game+0x2e>
    1300:	84 c0       	rjmp	.+264    	; 0x140a <TickFct_game+0x136>
    1302:	82 30       	cpi	r24, 0x02	; 2
    1304:	91 05       	cpc	r25, r1
    1306:	09 f4       	brne	.+2      	; 0x130a <TickFct_game+0x36>
    1308:	f3 c1       	rjmp	.+998    	; 0x16f0 <TickFct_game+0x41c>
    130a:	89 2b       	or	r24, r25
    130c:	09 f0       	breq	.+2      	; 0x1310 <TickFct_game+0x3c>
    130e:	41 c2       	rjmp	.+1154   	; 0x1792 <TickFct_game+0x4be>
	{
		case game_start:
			if(!gameStart)
    1310:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <gameStart>
    1314:	88 23       	and	r24, r24
    1316:	09 f4       	brne	.+2      	; 0x131a <TickFct_game+0x46>
    1318:	35 c2       	rjmp	.+1130   	; 0x1784 <TickFct_game+0x4b0>
			{
				break;
			}
			crashed = 0;
    131a:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <crashed>
			mySnake = malloc(sizeof(struct snake));
    131e:	84 e0       	ldi	r24, 0x04	; 4
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	f4 d3       	rcall	.+2024   	; 0x1b0c <malloc>
    1324:	90 93 9c 01 	sts	0x019C, r25	; 0x80019c <mySnake+0x1>
    1328:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <mySnake>
			mySnake->x = 5;
    132c:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    1330:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    1334:	25 e0       	ldi	r18, 0x05	; 5
    1336:	fc 01       	movw	r30, r24
    1338:	20 83       	st	Z, r18
			mySnake->y = 3;
    133a:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    133e:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    1342:	23 e0       	ldi	r18, 0x03	; 3
    1344:	fc 01       	movw	r30, r24
    1346:	21 83       	std	Z+1, r18	; 0x01
			mySnake->next = NULL;
    1348:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    134c:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    1350:	fc 01       	movw	r30, r24
    1352:	13 82       	std	Z+3, r1	; 0x03
    1354:	12 82       	std	Z+2, r1	; 0x02
			head = mySnake;
    1356:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    135a:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    135e:	90 93 a6 01 	sts	0x01A6, r25	; 0x8001a6 <head+0x1>
    1362:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <head>
			snakeFood = malloc(sizeof(struct food));
    1366:	82 e0       	ldi	r24, 0x02	; 2
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	d0 d3       	rcall	.+1952   	; 0x1b0c <malloc>
    136c:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <snakeFood+0x1>
    1370:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <snakeFood>
			snakeFood->x = 2;
    1374:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
    1378:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
    137c:	22 e0       	ldi	r18, 0x02	; 2
    137e:	fc 01       	movw	r30, r24
    1380:	20 83       	st	Z, r18
			snakeFood->y = 3;
    1382:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
    1386:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
    138a:	23 e0       	ldi	r18, 0x03	; 3
    138c:	fc 01       	movw	r30, r24
    138e:	21 83       	std	Z+1, r18	; 0x01
			eaten = 0;
    1390:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <eaten>
			column_val = SetBit(column_val, mySnake->y,1); //y
    1394:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    1398:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    139c:	fc 01       	movw	r30, r24
    139e:	81 81       	ldd	r24, Z+1	; 0x01
    13a0:	41 e0       	ldi	r20, 0x01	; 1
    13a2:	68 2f       	mov	r22, r24
    13a4:	8d 81       	ldd	r24, Y+5	; 0x05
    13a6:	0e 94 bf 01 	call	0x37e	; 0x37e <SetBit>
    13aa:	8d 83       	std	Y+5, r24	; 0x05
			column_sel = SetBit(column_sel, mySnake->x, 0); //x
    13ac:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    13b0:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    13b4:	fc 01       	movw	r30, r24
    13b6:	80 81       	ld	r24, Z
    13b8:	40 e0       	ldi	r20, 0x00	; 0
    13ba:	68 2f       	mov	r22, r24
    13bc:	8e 81       	ldd	r24, Y+6	; 0x06
    13be:	0e 94 bf 01 	call	0x37e	; 0x37e <SetBit>
    13c2:	8e 83       	std	Y+6, r24	; 0x06
			PORTC = SetBit(column_val, snakeFood->y,1); //y
    13c4:	08 e2       	ldi	r16, 0x28	; 40
    13c6:	10 e0       	ldi	r17, 0x00	; 0
    13c8:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
    13cc:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
    13d0:	fc 01       	movw	r30, r24
    13d2:	81 81       	ldd	r24, Z+1	; 0x01
    13d4:	41 e0       	ldi	r20, 0x01	; 1
    13d6:	68 2f       	mov	r22, r24
    13d8:	8d 81       	ldd	r24, Y+5	; 0x05
    13da:	0e 94 bf 01 	call	0x37e	; 0x37e <SetBit>
    13de:	f8 01       	movw	r30, r16
    13e0:	80 83       	st	Z, r24
			PORTB = SetBit(column_sel, snakeFood->x, 0); //x
    13e2:	05 e2       	ldi	r16, 0x25	; 37
    13e4:	10 e0       	ldi	r17, 0x00	; 0
    13e6:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
    13ea:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
    13ee:	fc 01       	movw	r30, r24
    13f0:	80 81       	ld	r24, Z
    13f2:	40 e0       	ldi	r20, 0x00	; 0
    13f4:	68 2f       	mov	r22, r24
    13f6:	8e 81       	ldd	r24, Y+6	; 0x06
    13f8:	0e 94 bf 01 	call	0x37e	; 0x37e <SetBit>
    13fc:	f8 01       	movw	r30, r16
    13fe:	80 83       	st	Z, r24
			state = game_running;
    1400:	81 e0       	ldi	r24, 0x01	; 1
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	9c 87       	std	Y+12, r25	; 0x0c
    1406:	8b 87       	std	Y+11, r24	; 0x0b
			break;
    1408:	c4 c1       	rjmp	.+904    	; 0x1792 <TickFct_game+0x4be>
		
		case game_running:	
			if(gameOver)
    140a:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <gameOver>
    140e:	88 23       	and	r24, r24
    1410:	21 f0       	breq	.+8      	; 0x141a <TickFct_game+0x146>
			{
				state = game_gameOver;
    1412:	82 e0       	ldi	r24, 0x02	; 2
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	9c 87       	std	Y+12, r25	; 0x0c
    1418:	8b 87       	std	Y+11, r24	; 0x0b
			}			
			if(reset)
    141a:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <reset>
    141e:	88 23       	and	r24, r24
    1420:	89 f1       	breq	.+98     	; 0x1484 <TickFct_game+0x1b0>
			{
				struct snake* tempCur = mySnake;
    1422:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    1426:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    142a:	9a 83       	std	Y+2, r25	; 0x02
    142c:	89 83       	std	Y+1, r24	; 0x01
				struct snake* tempNext = tempCur->next;
    142e:	89 81       	ldd	r24, Y+1	; 0x01
    1430:	9a 81       	ldd	r25, Y+2	; 0x02
    1432:	fc 01       	movw	r30, r24
    1434:	82 81       	ldd	r24, Z+2	; 0x02
    1436:	93 81       	ldd	r25, Z+3	; 0x03
    1438:	98 87       	std	Y+8, r25	; 0x08
    143a:	8f 83       	std	Y+7, r24	; 0x07
				while(tempCur != NULL)
    143c:	0e c0       	rjmp	.+28     	; 0x145a <TickFct_game+0x186>
				{
					tempNext = tempCur->next;
    143e:	89 81       	ldd	r24, Y+1	; 0x01
    1440:	9a 81       	ldd	r25, Y+2	; 0x02
    1442:	fc 01       	movw	r30, r24
    1444:	82 81       	ldd	r24, Z+2	; 0x02
    1446:	93 81       	ldd	r25, Z+3	; 0x03
    1448:	98 87       	std	Y+8, r25	; 0x08
    144a:	8f 83       	std	Y+7, r24	; 0x07
					free(tempCur);
    144c:	89 81       	ldd	r24, Y+1	; 0x01
    144e:	9a 81       	ldd	r25, Y+2	; 0x02
    1450:	f5 d3       	rcall	.+2026   	; 0x1c3c <free>
					tempCur = tempNext;
    1452:	8f 81       	ldd	r24, Y+7	; 0x07
    1454:	98 85       	ldd	r25, Y+8	; 0x08
    1456:	9a 83       	std	Y+2, r25	; 0x02
    1458:	89 83       	std	Y+1, r24	; 0x01
			}			
			if(reset)
			{
				struct snake* tempCur = mySnake;
				struct snake* tempNext = tempCur->next;
				while(tempCur != NULL)
    145a:	89 81       	ldd	r24, Y+1	; 0x01
    145c:	9a 81       	ldd	r25, Y+2	; 0x02
    145e:	89 2b       	or	r24, r25
    1460:	71 f7       	brne	.-36     	; 0x143e <TickFct_game+0x16a>
				{
					tempNext = tempCur->next;
					free(tempCur);
					tempCur = tempNext;
				}
				mySnake = NULL;
    1462:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <mySnake+0x1>
    1466:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <mySnake>
				state = game_start;
    146a:	1c 86       	std	Y+12, r1	; 0x0c
    146c:	1b 86       	std	Y+11, r1	; 0x0b
				PORTC = 0xFF; // sets blank screen row select 0 - 7 up to down
    146e:	88 e2       	ldi	r24, 0x28	; 40
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	2f ef       	ldi	r18, 0xFF	; 255
    1474:	fc 01       	movw	r30, r24
    1476:	20 83       	st	Z, r18
				PORTB = 0xFF; // inverse column select 0 = column selected 7 - 0 left to right
    1478:	85 e2       	ldi	r24, 0x25	; 37
    147a:	90 e0       	ldi	r25, 0x00	; 0
    147c:	2f ef       	ldi	r18, 0xFF	; 255
    147e:	fc 01       	movw	r30, r24
    1480:	20 83       	st	Z, r18
				break;
    1482:	87 c1       	rjmp	.+782    	; 0x1792 <TickFct_game+0x4be>
			}
			if(!direction)
    1484:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <direction>
    1488:	88 23       	and	r24, r24
    148a:	09 f4       	brne	.+2      	; 0x148e <TickFct_game+0x1ba>
    148c:	7d c1       	rjmp	.+762    	; 0x1788 <TickFct_game+0x4b4>
			break;
			
			//head = setSnakeDirection(mySnake);
			head = findHead(mySnake);
    148e:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    1492:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    1496:	d6 dc       	rcall	.-1620   	; 0xe44 <findHead>
    1498:	90 93 a6 01 	sts	0x01A6, r25	; 0x8001a6 <head+0x1>
    149c:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <head>
			tempHeadX = head->x;
    14a0:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <head>
    14a4:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <head+0x1>
    14a8:	fc 01       	movw	r30, r24
    14aa:	80 81       	ld	r24, Z
    14ac:	88 2f       	mov	r24, r24
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <tempHeadX+0x1>
    14b4:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <tempHeadX>
			tempHeadY = head->y;
    14b8:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <head>
    14bc:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <head+0x1>
    14c0:	fc 01       	movw	r30, r24
    14c2:	81 81       	ldd	r24, Z+1	; 0x01
    14c4:	88 2f       	mov	r24, r24
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <tempHeadY+0x1>
    14cc:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <tempHeadY>
			if(curDirection == 'l') //  cases makes sure you can't do a 180 turn 
    14d0:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <curDirection>
    14d4:	8c 36       	cpi	r24, 0x6C	; 108
    14d6:	61 f5       	brne	.+88     	; 0x1530 <TickFct_game+0x25c>
			{
				if(direction == 'u')
    14d8:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <direction>
    14dc:	85 37       	cpi	r24, 0x75	; 117
    14de:	69 f4       	brne	.+26     	; 0x14fa <TickFct_game+0x226>
				{
					curDirection = 'u';
    14e0:	85 e7       	ldi	r24, 0x75	; 117
    14e2:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <curDirection>
					//head->y -= 1;
					tempHeadY -=1;
    14e6:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <tempHeadY>
    14ea:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <tempHeadY+0x1>
    14ee:	01 97       	sbiw	r24, 0x01	; 1
    14f0:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <tempHeadY+0x1>
    14f4:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <tempHeadY>
    14f8:	aa c0       	rjmp	.+340    	; 0x164e <TickFct_game+0x37a>
				}
				else if(direction == 'd')
    14fa:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <direction>
    14fe:	84 36       	cpi	r24, 0x64	; 100
    1500:	69 f4       	brne	.+26     	; 0x151c <TickFct_game+0x248>
				{
					curDirection = 'd';
    1502:	84 e6       	ldi	r24, 0x64	; 100
    1504:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <curDirection>
					//head->y += 1;
					tempHeadY += 1;
    1508:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <tempHeadY>
    150c:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <tempHeadY+0x1>
    1510:	01 96       	adiw	r24, 0x01	; 1
    1512:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <tempHeadY+0x1>
    1516:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <tempHeadY>
    151a:	99 c0       	rjmp	.+306    	; 0x164e <TickFct_game+0x37a>
				}
				else
				{
					//head->x +=1 ;
					tempHeadX += 1;
    151c:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <tempHeadX>
    1520:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <tempHeadX+0x1>
    1524:	01 96       	adiw	r24, 0x01	; 1
    1526:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <tempHeadX+0x1>
    152a:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <tempHeadX>
    152e:	8f c0       	rjmp	.+286    	; 0x164e <TickFct_game+0x37a>
				}
			}
			else if(curDirection == 'r') //  cases makes sure you can't do a 180 turn
    1530:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <curDirection>
    1534:	82 37       	cpi	r24, 0x72	; 114
    1536:	61 f5       	brne	.+88     	; 0x1590 <TickFct_game+0x2bc>
			{
				if(direction == 'u')
    1538:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <direction>
    153c:	85 37       	cpi	r24, 0x75	; 117
    153e:	69 f4       	brne	.+26     	; 0x155a <TickFct_game+0x286>
				{
					curDirection = 'u';
    1540:	85 e7       	ldi	r24, 0x75	; 117
    1542:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <curDirection>
					//head->y -= 1;
					tempHeadY -=1;
    1546:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <tempHeadY>
    154a:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <tempHeadY+0x1>
    154e:	01 97       	sbiw	r24, 0x01	; 1
    1550:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <tempHeadY+0x1>
    1554:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <tempHeadY>
    1558:	7a c0       	rjmp	.+244    	; 0x164e <TickFct_game+0x37a>
				}
				else if(direction == 'd')
    155a:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <direction>
    155e:	84 36       	cpi	r24, 0x64	; 100
    1560:	69 f4       	brne	.+26     	; 0x157c <TickFct_game+0x2a8>
				{
					curDirection = 'd';
    1562:	84 e6       	ldi	r24, 0x64	; 100
    1564:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <curDirection>
					//head->y += 1;
					tempHeadY += 1;
    1568:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <tempHeadY>
    156c:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <tempHeadY+0x1>
    1570:	01 96       	adiw	r24, 0x01	; 1
    1572:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <tempHeadY+0x1>
    1576:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <tempHeadY>
    157a:	69 c0       	rjmp	.+210    	; 0x164e <TickFct_game+0x37a>
				}
				else
				{
					//head->x -=1 ;
					tempHeadX -=1;
    157c:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <tempHeadX>
    1580:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <tempHeadX+0x1>
    1584:	01 97       	sbiw	r24, 0x01	; 1
    1586:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <tempHeadX+0x1>
    158a:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <tempHeadX>
    158e:	5f c0       	rjmp	.+190    	; 0x164e <TickFct_game+0x37a>
				}
			}
			else if(curDirection == 'u') //  cases makes sure you can't do a 180 turn
    1590:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <curDirection>
    1594:	85 37       	cpi	r24, 0x75	; 117
    1596:	61 f5       	brne	.+88     	; 0x15f0 <TickFct_game+0x31c>
			{
				if(direction == 'l')
    1598:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <direction>
    159c:	8c 36       	cpi	r24, 0x6C	; 108
    159e:	69 f4       	brne	.+26     	; 0x15ba <TickFct_game+0x2e6>
				{
					curDirection = 'l';
    15a0:	8c e6       	ldi	r24, 0x6C	; 108
    15a2:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <curDirection>
					//head->x += 1;
					tempHeadX += 1;
    15a6:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <tempHeadX>
    15aa:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <tempHeadX+0x1>
    15ae:	01 96       	adiw	r24, 0x01	; 1
    15b0:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <tempHeadX+0x1>
    15b4:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <tempHeadX>
    15b8:	4a c0       	rjmp	.+148    	; 0x164e <TickFct_game+0x37a>
				}
				else if(direction == 'r')
    15ba:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <direction>
    15be:	82 37       	cpi	r24, 0x72	; 114
    15c0:	69 f4       	brne	.+26     	; 0x15dc <TickFct_game+0x308>
				{
					curDirection = 'r';
    15c2:	82 e7       	ldi	r24, 0x72	; 114
    15c4:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <curDirection>
					//head->x -= 1;
					tempHeadX -=1;
    15c8:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <tempHeadX>
    15cc:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <tempHeadX+0x1>
    15d0:	01 97       	sbiw	r24, 0x01	; 1
    15d2:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <tempHeadX+0x1>
    15d6:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <tempHeadX>
    15da:	39 c0       	rjmp	.+114    	; 0x164e <TickFct_game+0x37a>
				}
				else
				{
					//head->y -=1 ;
					tempHeadY -=1;
    15dc:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <tempHeadY>
    15e0:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <tempHeadY+0x1>
    15e4:	01 97       	sbiw	r24, 0x01	; 1
    15e6:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <tempHeadY+0x1>
    15ea:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <tempHeadY>
    15ee:	2f c0       	rjmp	.+94     	; 0x164e <TickFct_game+0x37a>
				}
			}
			else if(curDirection == 'd') //  cases makes sure you can't do a 180 turn
    15f0:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <curDirection>
    15f4:	84 36       	cpi	r24, 0x64	; 100
    15f6:	59 f5       	brne	.+86     	; 0x164e <TickFct_game+0x37a>
			{
				if(direction == 'l')
    15f8:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <direction>
    15fc:	8c 36       	cpi	r24, 0x6C	; 108
    15fe:	69 f4       	brne	.+26     	; 0x161a <TickFct_game+0x346>
				{
					curDirection = 'l';
    1600:	8c e6       	ldi	r24, 0x6C	; 108
    1602:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <curDirection>
					//head->x += 1;
					tempHeadX +=1;
    1606:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <tempHeadX>
    160a:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <tempHeadX+0x1>
    160e:	01 96       	adiw	r24, 0x01	; 1
    1610:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <tempHeadX+0x1>
    1614:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <tempHeadX>
    1618:	1a c0       	rjmp	.+52     	; 0x164e <TickFct_game+0x37a>
				}
				else if(direction == 'r')
    161a:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <direction>
    161e:	82 37       	cpi	r24, 0x72	; 114
    1620:	69 f4       	brne	.+26     	; 0x163c <TickFct_game+0x368>
				{
					curDirection = 'r';
    1622:	82 e7       	ldi	r24, 0x72	; 114
    1624:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <curDirection>
					//head->x -= 1;
					tempHeadX -=1;
    1628:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <tempHeadX>
    162c:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <tempHeadX+0x1>
    1630:	01 97       	sbiw	r24, 0x01	; 1
    1632:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <tempHeadX+0x1>
    1636:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <tempHeadX>
    163a:	09 c0       	rjmp	.+18     	; 0x164e <TickFct_game+0x37a>
				}
				else
				{
					//head->y +=1 ;
					tempHeadY +=1;
    163c:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <tempHeadY>
    1640:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <tempHeadY+0x1>
    1644:	01 96       	adiw	r24, 0x01	; 1
    1646:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <tempHeadY+0x1>
    164a:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <tempHeadY>
				}
			}
			
			//checkCrash(mySnake, head);
			//if(head->x < 0 || head->x > 7 || head->y > 7 || head->y < 0 || crashed == 1) // head ran into side game over
			if(tempHeadX <0 || tempHeadX > 7 || tempHeadY > 7 || tempHeadY < 0 || crashed ==1)
    164e:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <tempHeadX>
    1652:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <tempHeadX+0x1>
    1656:	08 97       	sbiw	r24, 0x08	; 8
    1658:	50 f4       	brcc	.+20     	; 0x166e <TickFct_game+0x39a>
    165a:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <tempHeadY>
    165e:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <tempHeadY+0x1>
    1662:	08 97       	sbiw	r24, 0x08	; 8
    1664:	20 f4       	brcc	.+8      	; 0x166e <TickFct_game+0x39a>
    1666:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <crashed>
    166a:	81 30       	cpi	r24, 0x01	; 1
    166c:	41 f4       	brne	.+16     	; 0x167e <TickFct_game+0x3aa>
			{
				gameOver = 1;
    166e:	81 e0       	ldi	r24, 0x01	; 1
    1670:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <gameOver>
				state = game_gameOver;
    1674:	82 e0       	ldi	r24, 0x02	; 2
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	9c 87       	std	Y+12, r25	; 0x0c
    167a:	8b 87       	std	Y+11, r24	; 0x0b
				break;
    167c:	8a c0       	rjmp	.+276    	; 0x1792 <TickFct_game+0x4be>
			}
			if(tempHeadX != snakeFood->x || tempHeadY != snakeFood->y)
    167e:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
    1682:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
    1686:	fc 01       	movw	r30, r24
    1688:	80 81       	ld	r24, Z
    168a:	28 2f       	mov	r18, r24
    168c:	30 e0       	ldi	r19, 0x00	; 0
    168e:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <tempHeadX>
    1692:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <tempHeadX+0x1>
    1696:	28 17       	cp	r18, r24
    1698:	39 07       	cpc	r19, r25
    169a:	81 f4       	brne	.+32     	; 0x16bc <TickFct_game+0x3e8>
    169c:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <snakeFood>
    16a0:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <snakeFood+0x1>
    16a4:	fc 01       	movw	r30, r24
    16a6:	81 81       	ldd	r24, Z+1	; 0x01
    16a8:	28 2f       	mov	r18, r24
    16aa:	30 e0       	ldi	r19, 0x00	; 0
    16ac:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <tempHeadY>
    16b0:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <tempHeadY+0x1>
    16b4:	28 17       	cp	r18, r24
    16b6:	39 07       	cpc	r19, r25
    16b8:	09 f4       	brne	.+2      	; 0x16bc <TickFct_game+0x3e8>
    16ba:	68 c0       	rjmp	.+208    	; 0x178c <TickFct_game+0x4b8>
			{
				setSnakeDirection(mySnake);
    16bc:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    16c0:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    16c4:	7e db       	rcall	.-2308   	; 0xdc2 <setSnakeDirection>
			head->x = tempHeadX;
    16c6:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <head>
    16ca:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <head+0x1>
    16ce:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <tempHeadX>
    16d2:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <tempHeadX+0x1>
    16d6:	fc 01       	movw	r30, r24
    16d8:	20 83       	st	Z, r18
			head->y = tempHeadY;
    16da:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <head>
    16de:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <head+0x1>
    16e2:	20 91 a3 01 	lds	r18, 0x01A3	; 0x8001a3 <tempHeadY>
    16e6:	30 91 a4 01 	lds	r19, 0x01A4	; 0x8001a4 <tempHeadY+0x1>
    16ea:	fc 01       	movw	r30, r24
    16ec:	21 83       	std	Z+1, r18	; 0x01
			}

			//moveSnake(mySnake, head,coordinates);
			
			break;
    16ee:	4e c0       	rjmp	.+156    	; 0x178c <TickFct_game+0x4b8>
			
		case game_gameOver:
		{
			if(!msgDisplayed2)
    16f0:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <msgDisplayed2.2379>
    16f4:	88 23       	and	r24, r24
    16f6:	69 f4       	brne	.+26     	; 0x1712 <TickFct_game+0x43e>
			{
				
				LCD_DisplayString(1,"Game Over");
    16f8:	67 e6       	ldi	r22, 0x67	; 103
    16fa:	71 e0       	ldi	r23, 0x01	; 1
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_DisplayString>
				LCD_DisplayStringNoClear(17,"Press to restart");
    1702:	66 e5       	ldi	r22, 0x56	; 86
    1704:	71 e0       	ldi	r23, 0x01	; 1
    1706:	81 e1       	ldi	r24, 0x11	; 17
    1708:	0e 94 21 01 	call	0x242	; 0x242 <LCD_DisplayStringNoClear>
				msgDisplayed2 = 1;
    170c:	81 e0       	ldi	r24, 0x01	; 1
    170e:	80 93 b7 01 	sts	0x01B7, r24	; 0x8001b7 <msgDisplayed2.2379>
			}
			
			
			if(reset)
    1712:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <reset>
    1716:	88 23       	and	r24, r24
    1718:	d9 f1       	breq	.+118    	; 0x1790 <TickFct_game+0x4bc>
			{
				gameOver = 0;
    171a:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <gameOver>
				msgDisplayed2 = 0;
    171e:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <msgDisplayed2.2379>
				struct snake* tempCur = mySnake;
    1722:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    1726:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    172a:	9c 83       	std	Y+4, r25	; 0x04
    172c:	8b 83       	std	Y+3, r24	; 0x03
				struct snake* tempNext = tempCur->next;
    172e:	8b 81       	ldd	r24, Y+3	; 0x03
    1730:	9c 81       	ldd	r25, Y+4	; 0x04
    1732:	fc 01       	movw	r30, r24
    1734:	82 81       	ldd	r24, Z+2	; 0x02
    1736:	93 81       	ldd	r25, Z+3	; 0x03
    1738:	9a 87       	std	Y+10, r25	; 0x0a
    173a:	89 87       	std	Y+9, r24	; 0x09
				while(tempCur != NULL)
    173c:	0e c0       	rjmp	.+28     	; 0x175a <TickFct_game+0x486>
				{
					tempNext = tempCur->next;
    173e:	8b 81       	ldd	r24, Y+3	; 0x03
    1740:	9c 81       	ldd	r25, Y+4	; 0x04
    1742:	fc 01       	movw	r30, r24
    1744:	82 81       	ldd	r24, Z+2	; 0x02
    1746:	93 81       	ldd	r25, Z+3	; 0x03
    1748:	9a 87       	std	Y+10, r25	; 0x0a
					free(tempCur);
    174a:	89 87       	std	Y+9, r24	; 0x09
    174c:	8b 81       	ldd	r24, Y+3	; 0x03
    174e:	9c 81       	ldd	r25, Y+4	; 0x04
    1750:	75 d2       	rcall	.+1258   	; 0x1c3c <free>
					tempCur = tempNext;
    1752:	89 85       	ldd	r24, Y+9	; 0x09
    1754:	9a 85       	ldd	r25, Y+10	; 0x0a
    1756:	9c 83       	std	Y+4, r25	; 0x04
    1758:	8b 83       	std	Y+3, r24	; 0x03
			{
				gameOver = 0;
				msgDisplayed2 = 0;
				struct snake* tempCur = mySnake;
				struct snake* tempNext = tempCur->next;
				while(tempCur != NULL)
    175a:	8b 81       	ldd	r24, Y+3	; 0x03
    175c:	9c 81       	ldd	r25, Y+4	; 0x04
    175e:	89 2b       	or	r24, r25
    1760:	71 f7       	brne	.-36     	; 0x173e <TickFct_game+0x46a>
				{
					tempNext = tempCur->next;
					free(tempCur);
					tempCur = tempNext;
				}
				mySnake = NULL;
    1762:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <mySnake+0x1>
    1766:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <mySnake>
				state = game_start;
    176a:	1c 86       	std	Y+12, r1	; 0x0c
    176c:	1b 86       	std	Y+11, r1	; 0x0b
				PORTC = 0xFF; // sets blank screen row select 0 - 7 up to down
    176e:	88 e2       	ldi	r24, 0x28	; 40
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	2f ef       	ldi	r18, 0xFF	; 255
    1774:	fc 01       	movw	r30, r24
    1776:	20 83       	st	Z, r18
				PORTB = 0xFF; // inverse column select 0 = column selected 7 - 0 left to right
    1778:	85 e2       	ldi	r24, 0x25	; 37
    177a:	90 e0       	ldi	r25, 0x00	; 0
    177c:	2f ef       	ldi	r18, 0xFF	; 255
    177e:	fc 01       	movw	r30, r24
    1780:	20 83       	st	Z, r18
				break;
    1782:	07 c0       	rjmp	.+14     	; 0x1792 <TickFct_game+0x4be>
	switch(state)
	{
		case game_start:
			if(!gameStart)
			{
				break;
    1784:	00 00       	nop
    1786:	05 c0       	rjmp	.+10     	; 0x1792 <TickFct_game+0x4be>
				PORTC = 0xFF; // sets blank screen row select 0 - 7 up to down
				PORTB = 0xFF; // inverse column select 0 = column selected 7 - 0 left to right
				break;
			}
			if(!direction)
			break;
    1788:	00 00       	nop
    178a:	03 c0       	rjmp	.+6      	; 0x1792 <TickFct_game+0x4be>
			head->y = tempHeadY;
			}

			//moveSnake(mySnake, head,coordinates);
			
			break;
    178c:	00 00       	nop
    178e:	01 c0       	rjmp	.+2      	; 0x1792 <TickFct_game+0x4be>
				state = game_start;
				PORTC = 0xFF; // sets blank screen row select 0 - 7 up to down
				PORTB = 0xFF; // inverse column select 0 = column selected 7 - 0 left to right
				break;
			}
			break;
    1790:	00 00       	nop
		}
		
	}
	return state;
    1792:	8b 85       	ldd	r24, Y+11	; 0x0b
    1794:	9c 85       	ldd	r25, Y+12	; 0x0c
}
    1796:	2c 96       	adiw	r28, 0x0c	; 12
    1798:	0f b6       	in	r0, 0x3f	; 63
    179a:	f8 94       	cli
    179c:	de bf       	out	0x3e, r29	; 62
    179e:	0f be       	out	0x3f, r0	; 63
    17a0:	cd bf       	out	0x3d, r28	; 61
    17a2:	df 91       	pop	r29
    17a4:	cf 91       	pop	r28
    17a6:	1f 91       	pop	r17
    17a8:	0f 91       	pop	r16
    17aa:	08 95       	ret

000017ac <TickFct_showSnake>:

enum showSnakeSM{showSnake_start, showSnake_run};
int TickFct_showSnake(int state)
{
    17ac:	cf 93       	push	r28
    17ae:	df 93       	push	r29
    17b0:	00 d0       	rcall	.+0      	; 0x17b2 <TickFct_showSnake+0x6>
    17b2:	cd b7       	in	r28, 0x3d	; 61
    17b4:	de b7       	in	r29, 0x3e	; 62
    17b6:	9a 83       	std	Y+2, r25	; 0x02
    17b8:	89 83       	std	Y+1, r24	; 0x01
	switch(state)
    17ba:	89 81       	ldd	r24, Y+1	; 0x01
    17bc:	9a 81       	ldd	r25, Y+2	; 0x02
    17be:	00 97       	sbiw	r24, 0x00	; 0
    17c0:	19 f0       	breq	.+6      	; 0x17c8 <TickFct_showSnake+0x1c>
    17c2:	01 97       	sbiw	r24, 0x01	; 1
    17c4:	51 f0       	breq	.+20     	; 0x17da <TickFct_showSnake+0x2e>
    17c6:	2a c0       	rjmp	.+84     	; 0x181c <TickFct_showSnake+0x70>
	{
		case showSnake_start:
			if(!gameStart)
    17c8:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <gameStart>
    17cc:	88 23       	and	r24, r24
    17ce:	29 f1       	breq	.+74     	; 0x181a <TickFct_showSnake+0x6e>
			break;
			
			state = showSnake_run;
    17d0:	81 e0       	ldi	r24, 0x01	; 1
    17d2:	90 e0       	ldi	r25, 0x00	; 0
    17d4:	9a 83       	std	Y+2, r25	; 0x02
    17d6:	89 83       	std	Y+1, r24	; 0x01
			break;
    17d8:	21 c0       	rjmp	.+66     	; 0x181c <TickFct_showSnake+0x70>
		
		case showSnake_run:
			if(reset)
    17da:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <reset>
    17de:	88 23       	and	r24, r24
    17e0:	19 f0       	breq	.+6      	; 0x17e8 <TickFct_showSnake+0x3c>
			{
				state = showSnake_start;
    17e2:	1a 82       	std	Y+2, r1	; 0x02
    17e4:	19 82       	std	Y+1, r1	; 0x01
				break;
    17e6:	1a c0       	rjmp	.+52     	; 0x181c <TickFct_showSnake+0x70>
			}
			if(gameOver)
    17e8:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <gameOver>
    17ec:	88 23       	and	r24, r24
    17ee:	51 f0       	breq	.+20     	; 0x1804 <TickFct_showSnake+0x58>
			{
				PORTC = 0xFF;
    17f0:	88 e2       	ldi	r24, 0x28	; 40
    17f2:	90 e0       	ldi	r25, 0x00	; 0
    17f4:	2f ef       	ldi	r18, 0xFF	; 255
    17f6:	fc 01       	movw	r30, r24
    17f8:	20 83       	st	Z, r18
				PORTB = 0x00;
    17fa:	85 e2       	ldi	r24, 0x25	; 37
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	fc 01       	movw	r30, r24
    1800:	10 82       	st	Z, r1
				break;
    1802:	0c c0       	rjmp	.+24     	; 0x181c <TickFct_showSnake+0x70>
			}
			
			moveSnake(mySnake, head);
    1804:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <head>
    1808:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <head+0x1>
    180c:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <mySnake>
    1810:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <mySnake+0x1>
    1814:	b9 01       	movw	r22, r18
    1816:	3a db       	rcall	.-2444   	; 0xe8c <moveSnake>
			break;
    1818:	01 c0       	rjmp	.+2      	; 0x181c <TickFct_showSnake+0x70>
{
	switch(state)
	{
		case showSnake_start:
			if(!gameStart)
			break;
    181a:	00 00       	nop
			}
			
			moveSnake(mySnake, head);
			break;
	}
	return state;
    181c:	89 81       	ldd	r24, Y+1	; 0x01
    181e:	9a 81       	ldd	r25, Y+2	; 0x02
}
    1820:	0f 90       	pop	r0
    1822:	0f 90       	pop	r0
    1824:	df 91       	pop	r29
    1826:	cf 91       	pop	r28
    1828:	08 95       	ret

0000182a <main>:


int main(void)
{
    182a:	cf 93       	push	r28
    182c:	df 93       	push	r29
    182e:	00 d0       	rcall	.+0      	; 0x1830 <main+0x6>
    1830:	1f 92       	push	r1
    1832:	cd b7       	in	r28, 0x3d	; 61
    1834:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	unsigned short potentiometer = 0x00;
    1836:	1a 82       	std	Y+2, r1	; 0x02
    1838:	19 82       	std	Y+1, r1	; 0x01
	DDRB = 0xFF; PORTB = 0x00; // x axis of led column_sel
    183a:	84 e2       	ldi	r24, 0x24	; 36
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	2f ef       	ldi	r18, 0xFF	; 255
    1840:	fc 01       	movw	r30, r24
    1842:	20 83       	st	Z, r18
    1844:	85 e2       	ldi	r24, 0x25	; 37
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	fc 01       	movw	r30, r24
    184a:	10 82       	st	Z, r1
	DDRC = 0xFF; PORTC = 0x00; // y axis of led column_val
    184c:	87 e2       	ldi	r24, 0x27	; 39
    184e:	90 e0       	ldi	r25, 0x00	; 0
    1850:	2f ef       	ldi	r18, 0xFF	; 255
    1852:	fc 01       	movw	r30, r24
    1854:	20 83       	st	Z, r18
    1856:	88 e2       	ldi	r24, 0x28	; 40
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	fc 01       	movw	r30, r24
    185c:	10 82       	st	Z, r1
	DDRD = 0xFF; PORTD = 0x00; // lcd display
    185e:	8a e2       	ldi	r24, 0x2A	; 42
    1860:	90 e0       	ldi	r25, 0x00	; 0
    1862:	2f ef       	ldi	r18, 0xFF	; 255
    1864:	fc 01       	movw	r30, r24
    1866:	20 83       	st	Z, r18
    1868:	8b e2       	ldi	r24, 0x2B	; 43
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	fc 01       	movw	r30, r24
    186e:	10 82       	st	Z, r1
	DDRA = 0x07; PORTA = 0x08; //PA4 is lr, PA5 is ud
    1870:	81 e2       	ldi	r24, 0x21	; 33
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	27 e0       	ldi	r18, 0x07	; 7
    1876:	fc 01       	movw	r30, r24
    1878:	20 83       	st	Z, r18
    187a:	82 e2       	ldi	r24, 0x22	; 34
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	28 e0       	ldi	r18, 0x08	; 8
    1880:	fc 01       	movw	r30, r24
    1882:	20 83       	st	Z, r18
	unsigned char i = 0;
    1884:	1b 82       	std	Y+3, r1	; 0x03
	tasks[i].state = startGame_start;
    1886:	8b 81       	ldd	r24, Y+3	; 0x03
    1888:	28 2f       	mov	r18, r24
    188a:	30 e0       	ldi	r19, 0x00	; 0
    188c:	c9 01       	movw	r24, r18
    188e:	88 0f       	add	r24, r24
    1890:	99 1f       	adc	r25, r25
    1892:	82 0f       	add	r24, r18
    1894:	93 1f       	adc	r25, r19
    1896:	88 0f       	add	r24, r24
    1898:	99 1f       	adc	r25, r25
    189a:	88 0f       	add	r24, r24
    189c:	99 1f       	adc	r25, r25
    189e:	88 54       	subi	r24, 0x48	; 72
    18a0:	9e 4f       	sbci	r25, 0xFE	; 254
    18a2:	fc 01       	movw	r30, r24
    18a4:	11 82       	std	Z+1, r1	; 0x01
    18a6:	10 82       	st	Z, r1
	tasks[i].period = 300;
    18a8:	8b 81       	ldd	r24, Y+3	; 0x03
    18aa:	28 2f       	mov	r18, r24
    18ac:	30 e0       	ldi	r19, 0x00	; 0
    18ae:	c9 01       	movw	r24, r18
    18b0:	88 0f       	add	r24, r24
    18b2:	99 1f       	adc	r25, r25
    18b4:	82 0f       	add	r24, r18
    18b6:	93 1f       	adc	r25, r19
    18b8:	88 0f       	add	r24, r24
    18ba:	99 1f       	adc	r25, r25
    18bc:	88 0f       	add	r24, r24
    18be:	99 1f       	adc	r25, r25
    18c0:	9c 01       	movw	r18, r24
    18c2:	26 54       	subi	r18, 0x46	; 70
    18c4:	3e 4f       	sbci	r19, 0xFE	; 254
    18c6:	8c e2       	ldi	r24, 0x2C	; 44
    18c8:	91 e0       	ldi	r25, 0x01	; 1
    18ca:	a0 e0       	ldi	r26, 0x00	; 0
    18cc:	b0 e0       	ldi	r27, 0x00	; 0
    18ce:	f9 01       	movw	r30, r18
    18d0:	80 83       	st	Z, r24
    18d2:	91 83       	std	Z+1, r25	; 0x01
    18d4:	a2 83       	std	Z+2, r26	; 0x02
    18d6:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_startGame;
    18d8:	8b 81       	ldd	r24, Y+3	; 0x03
    18da:	28 2f       	mov	r18, r24
    18dc:	30 e0       	ldi	r19, 0x00	; 0
    18de:	c9 01       	movw	r24, r18
    18e0:	88 0f       	add	r24, r24
    18e2:	99 1f       	adc	r25, r25
    18e4:	82 0f       	add	r24, r18
    18e6:	93 1f       	adc	r25, r19
    18e8:	88 0f       	add	r24, r24
    18ea:	99 1f       	adc	r25, r25
    18ec:	88 0f       	add	r24, r24
    18ee:	99 1f       	adc	r25, r25
    18f0:	8e 53       	subi	r24, 0x3E	; 62
    18f2:	9e 4f       	sbci	r25, 0xFE	; 254
    18f4:	27 e4       	ldi	r18, 0x47	; 71
    18f6:	35 e0       	ldi	r19, 0x05	; 5
    18f8:	fc 01       	movw	r30, r24
    18fa:	31 83       	std	Z+1, r19	; 0x01
    18fc:	20 83       	st	Z, r18
	++i;
    18fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1900:	8f 5f       	subi	r24, 0xFF	; 255
    1902:	8b 83       	std	Y+3, r24	; 0x03
	tasks[i].state = direction_start;
    1904:	8b 81       	ldd	r24, Y+3	; 0x03
    1906:	28 2f       	mov	r18, r24
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	c9 01       	movw	r24, r18
    190c:	88 0f       	add	r24, r24
    190e:	99 1f       	adc	r25, r25
    1910:	82 0f       	add	r24, r18
    1912:	93 1f       	adc	r25, r19
    1914:	88 0f       	add	r24, r24
    1916:	99 1f       	adc	r25, r25
    1918:	88 0f       	add	r24, r24
    191a:	99 1f       	adc	r25, r25
    191c:	88 54       	subi	r24, 0x48	; 72
    191e:	9e 4f       	sbci	r25, 0xFE	; 254
    1920:	fc 01       	movw	r30, r24
    1922:	11 82       	std	Z+1, r1	; 0x01
    1924:	10 82       	st	Z, r1
	tasks[i].period = 100;
    1926:	8b 81       	ldd	r24, Y+3	; 0x03
    1928:	28 2f       	mov	r18, r24
    192a:	30 e0       	ldi	r19, 0x00	; 0
    192c:	c9 01       	movw	r24, r18
    192e:	88 0f       	add	r24, r24
    1930:	99 1f       	adc	r25, r25
    1932:	82 0f       	add	r24, r18
    1934:	93 1f       	adc	r25, r19
    1936:	88 0f       	add	r24, r24
    1938:	99 1f       	adc	r25, r25
    193a:	88 0f       	add	r24, r24
    193c:	99 1f       	adc	r25, r25
    193e:	9c 01       	movw	r18, r24
    1940:	26 54       	subi	r18, 0x46	; 70
    1942:	3e 4f       	sbci	r19, 0xFE	; 254
    1944:	84 e6       	ldi	r24, 0x64	; 100
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	a0 e0       	ldi	r26, 0x00	; 0
    194a:	b0 e0       	ldi	r27, 0x00	; 0
    194c:	f9 01       	movw	r30, r18
    194e:	80 83       	st	Z, r24
    1950:	91 83       	std	Z+1, r25	; 0x01
    1952:	a2 83       	std	Z+2, r26	; 0x02
    1954:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_direction;
    1956:	8b 81       	ldd	r24, Y+3	; 0x03
    1958:	28 2f       	mov	r18, r24
    195a:	30 e0       	ldi	r19, 0x00	; 0
    195c:	c9 01       	movw	r24, r18
    195e:	88 0f       	add	r24, r24
    1960:	99 1f       	adc	r25, r25
    1962:	82 0f       	add	r24, r18
    1964:	93 1f       	adc	r25, r19
    1966:	88 0f       	add	r24, r24
    1968:	99 1f       	adc	r25, r25
    196a:	88 0f       	add	r24, r24
    196c:	99 1f       	adc	r25, r25
    196e:	8e 53       	subi	r24, 0x3E	; 62
    1970:	9e 4f       	sbci	r25, 0xFE	; 254
    1972:	21 e0       	ldi	r18, 0x01	; 1
    1974:	36 e0       	ldi	r19, 0x06	; 6
    1976:	fc 01       	movw	r30, r24
    1978:	31 83       	std	Z+1, r19	; 0x01
    197a:	20 83       	st	Z, r18
	++i;
    197c:	8b 81       	ldd	r24, Y+3	; 0x03
    197e:	8f 5f       	subi	r24, 0xFF	; 255
    1980:	8b 83       	std	Y+3, r24	; 0x03
	tasks[i].state = game_start;
    1982:	8b 81       	ldd	r24, Y+3	; 0x03
    1984:	28 2f       	mov	r18, r24
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	c9 01       	movw	r24, r18
    198a:	88 0f       	add	r24, r24
    198c:	99 1f       	adc	r25, r25
    198e:	82 0f       	add	r24, r18
    1990:	93 1f       	adc	r25, r19
    1992:	88 0f       	add	r24, r24
    1994:	99 1f       	adc	r25, r25
    1996:	88 0f       	add	r24, r24
    1998:	99 1f       	adc	r25, r25
    199a:	88 54       	subi	r24, 0x48	; 72
    199c:	9e 4f       	sbci	r25, 0xFE	; 254
    199e:	fc 01       	movw	r30, r24
    19a0:	11 82       	std	Z+1, r1	; 0x01
    19a2:	10 82       	st	Z, r1
	tasks[i].period = 100;
    19a4:	8b 81       	ldd	r24, Y+3	; 0x03
    19a6:	28 2f       	mov	r18, r24
    19a8:	30 e0       	ldi	r19, 0x00	; 0
    19aa:	c9 01       	movw	r24, r18
    19ac:	88 0f       	add	r24, r24
    19ae:	99 1f       	adc	r25, r25
    19b0:	82 0f       	add	r24, r18
    19b2:	93 1f       	adc	r25, r19
    19b4:	88 0f       	add	r24, r24
    19b6:	99 1f       	adc	r25, r25
    19b8:	88 0f       	add	r24, r24
    19ba:	99 1f       	adc	r25, r25
    19bc:	9c 01       	movw	r18, r24
    19be:	26 54       	subi	r18, 0x46	; 70
    19c0:	3e 4f       	sbci	r19, 0xFE	; 254
    19c2:	84 e6       	ldi	r24, 0x64	; 100
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	a0 e0       	ldi	r26, 0x00	; 0
    19c8:	b0 e0       	ldi	r27, 0x00	; 0
    19ca:	f9 01       	movw	r30, r18
    19cc:	80 83       	st	Z, r24
    19ce:	91 83       	std	Z+1, r25	; 0x01
    19d0:	a2 83       	std	Z+2, r26	; 0x02
    19d2:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_game;
    19d4:	8b 81       	ldd	r24, Y+3	; 0x03
    19d6:	28 2f       	mov	r18, r24
    19d8:	30 e0       	ldi	r19, 0x00	; 0
    19da:	c9 01       	movw	r24, r18
    19dc:	88 0f       	add	r24, r24
    19de:	99 1f       	adc	r25, r25
    19e0:	82 0f       	add	r24, r18
    19e2:	93 1f       	adc	r25, r19
    19e4:	88 0f       	add	r24, r24
    19e6:	99 1f       	adc	r25, r25
    19e8:	88 0f       	add	r24, r24
    19ea:	99 1f       	adc	r25, r25
    19ec:	8e 53       	subi	r24, 0x3E	; 62
    19ee:	9e 4f       	sbci	r25, 0xFE	; 254
    19f0:	2a e6       	ldi	r18, 0x6A	; 106
    19f2:	39 e0       	ldi	r19, 0x09	; 9
    19f4:	fc 01       	movw	r30, r24
    19f6:	31 83       	std	Z+1, r19	; 0x01
    19f8:	20 83       	st	Z, r18
	++i;
    19fa:	8b 81       	ldd	r24, Y+3	; 0x03
    19fc:	8f 5f       	subi	r24, 0xFF	; 255
    19fe:	8b 83       	std	Y+3, r24	; 0x03
	tasks[i].state = showSnake_start;
    1a00:	8b 81       	ldd	r24, Y+3	; 0x03
    1a02:	28 2f       	mov	r18, r24
    1a04:	30 e0       	ldi	r19, 0x00	; 0
    1a06:	c9 01       	movw	r24, r18
    1a08:	88 0f       	add	r24, r24
    1a0a:	99 1f       	adc	r25, r25
    1a0c:	82 0f       	add	r24, r18
    1a0e:	93 1f       	adc	r25, r19
    1a10:	88 0f       	add	r24, r24
    1a12:	99 1f       	adc	r25, r25
    1a14:	88 0f       	add	r24, r24
    1a16:	99 1f       	adc	r25, r25
    1a18:	88 54       	subi	r24, 0x48	; 72
    1a1a:	9e 4f       	sbci	r25, 0xFE	; 254
    1a1c:	fc 01       	movw	r30, r24
    1a1e:	11 82       	std	Z+1, r1	; 0x01
    1a20:	10 82       	st	Z, r1
	tasks[i].period = 1;
    1a22:	8b 81       	ldd	r24, Y+3	; 0x03
    1a24:	28 2f       	mov	r18, r24
    1a26:	30 e0       	ldi	r19, 0x00	; 0
    1a28:	c9 01       	movw	r24, r18
    1a2a:	88 0f       	add	r24, r24
    1a2c:	99 1f       	adc	r25, r25
    1a2e:	82 0f       	add	r24, r18
    1a30:	93 1f       	adc	r25, r19
    1a32:	88 0f       	add	r24, r24
    1a34:	99 1f       	adc	r25, r25
    1a36:	88 0f       	add	r24, r24
    1a38:	99 1f       	adc	r25, r25
    1a3a:	9c 01       	movw	r18, r24
    1a3c:	26 54       	subi	r18, 0x46	; 70
    1a3e:	3e 4f       	sbci	r19, 0xFE	; 254
    1a40:	81 e0       	ldi	r24, 0x01	; 1
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	a0 e0       	ldi	r26, 0x00	; 0
    1a46:	b0 e0       	ldi	r27, 0x00	; 0
    1a48:	f9 01       	movw	r30, r18
    1a4a:	80 83       	st	Z, r24
    1a4c:	91 83       	std	Z+1, r25	; 0x01
    1a4e:	a2 83       	std	Z+2, r26	; 0x02
    1a50:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_showSnake;
    1a52:	8b 81       	ldd	r24, Y+3	; 0x03
    1a54:	28 2f       	mov	r18, r24
    1a56:	30 e0       	ldi	r19, 0x00	; 0
    1a58:	c9 01       	movw	r24, r18
    1a5a:	88 0f       	add	r24, r24
    1a5c:	99 1f       	adc	r25, r25
    1a5e:	82 0f       	add	r24, r18
    1a60:	93 1f       	adc	r25, r19
    1a62:	88 0f       	add	r24, r24
    1a64:	99 1f       	adc	r25, r25
    1a66:	88 0f       	add	r24, r24
    1a68:	99 1f       	adc	r25, r25
    1a6a:	8e 53       	subi	r24, 0x3E	; 62
    1a6c:	9e 4f       	sbci	r25, 0xFE	; 254
    1a6e:	26 ed       	ldi	r18, 0xD6	; 214
    1a70:	3b e0       	ldi	r19, 0x0B	; 11
    1a72:	fc 01       	movw	r30, r24
    1a74:	31 83       	std	Z+1, r19	; 0x01
    1a76:	20 83       	st	Z, r18

	LCD_init();
    1a78:	0e 94 83 00 	call	0x106	; 0x106 <LCD_init>
	adc_init();
    1a7c:	0e 94 ed 01 	call	0x3da	; 0x3da <adc_init>
	LCD_CreateCustomChar(1, leftCustom);
    1a80:	61 e8       	ldi	r22, 0x81	; 129
    1a82:	71 e0       	ldi	r23, 0x01	; 1
    1a84:	81 e0       	ldi	r24, 0x01	; 1
    1a86:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_CreateCustomChar>
	LCD_CreateCustomChar(2, rightCustom);
    1a8a:	69 e8       	ldi	r22, 0x89	; 137
    1a8c:	71 e0       	ldi	r23, 0x01	; 1
    1a8e:	82 e0       	ldi	r24, 0x02	; 2
    1a90:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_CreateCustomChar>
	LCD_CreateCustomChar(3, upCustom);
    1a94:	61 e7       	ldi	r22, 0x71	; 113
    1a96:	71 e0       	ldi	r23, 0x01	; 1
    1a98:	83 e0       	ldi	r24, 0x03	; 3
    1a9a:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_CreateCustomChar>
	LCD_CreateCustomChar(4, downCustom);
    1a9e:	69 e7       	ldi	r22, 0x79	; 121
    1aa0:	71 e0       	ldi	r23, 0x01	; 1
    1aa2:	84 e0       	ldi	r24, 0x04	; 4
    1aa4:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_CreateCustomChar>
	srand(time(NULL));
    1aa8:	80 e0       	ldi	r24, 0x00	; 0
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	0e 94 66 00 	call	0xcc	; 0xcc <time>
    1ab0:	dc 01       	movw	r26, r24
    1ab2:	cb 01       	movw	r24, r22
    1ab4:	96 d1       	rcall	.+812    	; 0x1de2 <srand>
	TimerSet(1);
    1ab6:	61 e0       	ldi	r22, 0x01	; 1
    1ab8:	70 e0       	ldi	r23, 0x00	; 0
    1aba:	80 e0       	ldi	r24, 0x00	; 0
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <TimerSet>
	TimerOn();
    1ac2:	0e 94 23 02 	call	0x446	; 0x446 <TimerOn>
    while (1) 
    {	
		//tasks[2].period = potentiometer ;
    }
    1ac6:	ff cf       	rjmp	.-2      	; 0x1ac6 <main+0x29c>

00001ac8 <__udivmodsi4>:
    1ac8:	a1 e2       	ldi	r26, 0x21	; 33
    1aca:	1a 2e       	mov	r1, r26
    1acc:	aa 1b       	sub	r26, r26
    1ace:	bb 1b       	sub	r27, r27
    1ad0:	fd 01       	movw	r30, r26
    1ad2:	0d c0       	rjmp	.+26     	; 0x1aee <__udivmodsi4_ep>

00001ad4 <__udivmodsi4_loop>:
    1ad4:	aa 1f       	adc	r26, r26
    1ad6:	bb 1f       	adc	r27, r27
    1ad8:	ee 1f       	adc	r30, r30
    1ada:	ff 1f       	adc	r31, r31
    1adc:	a2 17       	cp	r26, r18
    1ade:	b3 07       	cpc	r27, r19
    1ae0:	e4 07       	cpc	r30, r20
    1ae2:	f5 07       	cpc	r31, r21
    1ae4:	20 f0       	brcs	.+8      	; 0x1aee <__udivmodsi4_ep>
    1ae6:	a2 1b       	sub	r26, r18
    1ae8:	b3 0b       	sbc	r27, r19
    1aea:	e4 0b       	sbc	r30, r20
    1aec:	f5 0b       	sbc	r31, r21

00001aee <__udivmodsi4_ep>:
    1aee:	66 1f       	adc	r22, r22
    1af0:	77 1f       	adc	r23, r23
    1af2:	88 1f       	adc	r24, r24
    1af4:	99 1f       	adc	r25, r25
    1af6:	1a 94       	dec	r1
    1af8:	69 f7       	brne	.-38     	; 0x1ad4 <__udivmodsi4_loop>
    1afa:	60 95       	com	r22
    1afc:	70 95       	com	r23
    1afe:	80 95       	com	r24
    1b00:	90 95       	com	r25
    1b02:	9b 01       	movw	r18, r22
    1b04:	ac 01       	movw	r20, r24
    1b06:	bd 01       	movw	r22, r26
    1b08:	cf 01       	movw	r24, r30
    1b0a:	08 95       	ret

00001b0c <malloc>:
    1b0c:	0f 93       	push	r16
    1b0e:	1f 93       	push	r17
    1b10:	cf 93       	push	r28
    1b12:	df 93       	push	r29
    1b14:	82 30       	cpi	r24, 0x02	; 2
    1b16:	91 05       	cpc	r25, r1
    1b18:	10 f4       	brcc	.+4      	; 0x1b1e <malloc+0x12>
    1b1a:	82 e0       	ldi	r24, 0x02	; 2
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	e0 91 2a 02 	lds	r30, 0x022A	; 0x80022a <__flp>
    1b22:	f0 91 2b 02 	lds	r31, 0x022B	; 0x80022b <__flp+0x1>
    1b26:	20 e0       	ldi	r18, 0x00	; 0
    1b28:	30 e0       	ldi	r19, 0x00	; 0
    1b2a:	a0 e0       	ldi	r26, 0x00	; 0
    1b2c:	b0 e0       	ldi	r27, 0x00	; 0
    1b2e:	30 97       	sbiw	r30, 0x00	; 0
    1b30:	19 f1       	breq	.+70     	; 0x1b78 <malloc+0x6c>
    1b32:	40 81       	ld	r20, Z
    1b34:	51 81       	ldd	r21, Z+1	; 0x01
    1b36:	02 81       	ldd	r16, Z+2	; 0x02
    1b38:	13 81       	ldd	r17, Z+3	; 0x03
    1b3a:	48 17       	cp	r20, r24
    1b3c:	59 07       	cpc	r21, r25
    1b3e:	c8 f0       	brcs	.+50     	; 0x1b72 <malloc+0x66>
    1b40:	84 17       	cp	r24, r20
    1b42:	95 07       	cpc	r25, r21
    1b44:	69 f4       	brne	.+26     	; 0x1b60 <malloc+0x54>
    1b46:	10 97       	sbiw	r26, 0x00	; 0
    1b48:	31 f0       	breq	.+12     	; 0x1b56 <malloc+0x4a>
    1b4a:	12 96       	adiw	r26, 0x02	; 2
    1b4c:	0c 93       	st	X, r16
    1b4e:	12 97       	sbiw	r26, 0x02	; 2
    1b50:	13 96       	adiw	r26, 0x03	; 3
    1b52:	1c 93       	st	X, r17
    1b54:	27 c0       	rjmp	.+78     	; 0x1ba4 <malloc+0x98>
    1b56:	00 93 2a 02 	sts	0x022A, r16	; 0x80022a <__flp>
    1b5a:	10 93 2b 02 	sts	0x022B, r17	; 0x80022b <__flp+0x1>
    1b5e:	22 c0       	rjmp	.+68     	; 0x1ba4 <malloc+0x98>
    1b60:	21 15       	cp	r18, r1
    1b62:	31 05       	cpc	r19, r1
    1b64:	19 f0       	breq	.+6      	; 0x1b6c <malloc+0x60>
    1b66:	42 17       	cp	r20, r18
    1b68:	53 07       	cpc	r21, r19
    1b6a:	18 f4       	brcc	.+6      	; 0x1b72 <malloc+0x66>
    1b6c:	9a 01       	movw	r18, r20
    1b6e:	bd 01       	movw	r22, r26
    1b70:	ef 01       	movw	r28, r30
    1b72:	df 01       	movw	r26, r30
    1b74:	f8 01       	movw	r30, r16
    1b76:	db cf       	rjmp	.-74     	; 0x1b2e <malloc+0x22>
    1b78:	21 15       	cp	r18, r1
    1b7a:	31 05       	cpc	r19, r1
    1b7c:	f9 f0       	breq	.+62     	; 0x1bbc <malloc+0xb0>
    1b7e:	28 1b       	sub	r18, r24
    1b80:	39 0b       	sbc	r19, r25
    1b82:	24 30       	cpi	r18, 0x04	; 4
    1b84:	31 05       	cpc	r19, r1
    1b86:	80 f4       	brcc	.+32     	; 0x1ba8 <malloc+0x9c>
    1b88:	8a 81       	ldd	r24, Y+2	; 0x02
    1b8a:	9b 81       	ldd	r25, Y+3	; 0x03
    1b8c:	61 15       	cp	r22, r1
    1b8e:	71 05       	cpc	r23, r1
    1b90:	21 f0       	breq	.+8      	; 0x1b9a <malloc+0x8e>
    1b92:	fb 01       	movw	r30, r22
    1b94:	93 83       	std	Z+3, r25	; 0x03
    1b96:	82 83       	std	Z+2, r24	; 0x02
    1b98:	04 c0       	rjmp	.+8      	; 0x1ba2 <malloc+0x96>
    1b9a:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <__flp+0x1>
    1b9e:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <__flp>
    1ba2:	fe 01       	movw	r30, r28
    1ba4:	32 96       	adiw	r30, 0x02	; 2
    1ba6:	44 c0       	rjmp	.+136    	; 0x1c30 <malloc+0x124>
    1ba8:	fe 01       	movw	r30, r28
    1baa:	e2 0f       	add	r30, r18
    1bac:	f3 1f       	adc	r31, r19
    1bae:	81 93       	st	Z+, r24
    1bb0:	91 93       	st	Z+, r25
    1bb2:	22 50       	subi	r18, 0x02	; 2
    1bb4:	31 09       	sbc	r19, r1
    1bb6:	39 83       	std	Y+1, r19	; 0x01
    1bb8:	28 83       	st	Y, r18
    1bba:	3a c0       	rjmp	.+116    	; 0x1c30 <malloc+0x124>
    1bbc:	20 91 28 02 	lds	r18, 0x0228	; 0x800228 <__brkval>
    1bc0:	30 91 29 02 	lds	r19, 0x0229	; 0x800229 <__brkval+0x1>
    1bc4:	23 2b       	or	r18, r19
    1bc6:	41 f4       	brne	.+16     	; 0x1bd8 <malloc+0xcc>
    1bc8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1bcc:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1bd0:	30 93 29 02 	sts	0x0229, r19	; 0x800229 <__brkval+0x1>
    1bd4:	20 93 28 02 	sts	0x0228, r18	; 0x800228 <__brkval>
    1bd8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1bdc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1be0:	21 15       	cp	r18, r1
    1be2:	31 05       	cpc	r19, r1
    1be4:	41 f4       	brne	.+16     	; 0x1bf6 <malloc+0xea>
    1be6:	2d b7       	in	r18, 0x3d	; 61
    1be8:	3e b7       	in	r19, 0x3e	; 62
    1bea:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1bee:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1bf2:	24 1b       	sub	r18, r20
    1bf4:	35 0b       	sbc	r19, r21
    1bf6:	e0 91 28 02 	lds	r30, 0x0228	; 0x800228 <__brkval>
    1bfa:	f0 91 29 02 	lds	r31, 0x0229	; 0x800229 <__brkval+0x1>
    1bfe:	e2 17       	cp	r30, r18
    1c00:	f3 07       	cpc	r31, r19
    1c02:	a0 f4       	brcc	.+40     	; 0x1c2c <malloc+0x120>
    1c04:	2e 1b       	sub	r18, r30
    1c06:	3f 0b       	sbc	r19, r31
    1c08:	28 17       	cp	r18, r24
    1c0a:	39 07       	cpc	r19, r25
    1c0c:	78 f0       	brcs	.+30     	; 0x1c2c <malloc+0x120>
    1c0e:	ac 01       	movw	r20, r24
    1c10:	4e 5f       	subi	r20, 0xFE	; 254
    1c12:	5f 4f       	sbci	r21, 0xFF	; 255
    1c14:	24 17       	cp	r18, r20
    1c16:	35 07       	cpc	r19, r21
    1c18:	48 f0       	brcs	.+18     	; 0x1c2c <malloc+0x120>
    1c1a:	4e 0f       	add	r20, r30
    1c1c:	5f 1f       	adc	r21, r31
    1c1e:	50 93 29 02 	sts	0x0229, r21	; 0x800229 <__brkval+0x1>
    1c22:	40 93 28 02 	sts	0x0228, r20	; 0x800228 <__brkval>
    1c26:	81 93       	st	Z+, r24
    1c28:	91 93       	st	Z+, r25
    1c2a:	02 c0       	rjmp	.+4      	; 0x1c30 <malloc+0x124>
    1c2c:	e0 e0       	ldi	r30, 0x00	; 0
    1c2e:	f0 e0       	ldi	r31, 0x00	; 0
    1c30:	cf 01       	movw	r24, r30
    1c32:	df 91       	pop	r29
    1c34:	cf 91       	pop	r28
    1c36:	1f 91       	pop	r17
    1c38:	0f 91       	pop	r16
    1c3a:	08 95       	ret

00001c3c <free>:
    1c3c:	cf 93       	push	r28
    1c3e:	df 93       	push	r29
    1c40:	00 97       	sbiw	r24, 0x00	; 0
    1c42:	09 f4       	brne	.+2      	; 0x1c46 <free+0xa>
    1c44:	81 c0       	rjmp	.+258    	; 0x1d48 <free+0x10c>
    1c46:	fc 01       	movw	r30, r24
    1c48:	32 97       	sbiw	r30, 0x02	; 2
    1c4a:	13 82       	std	Z+3, r1	; 0x03
    1c4c:	12 82       	std	Z+2, r1	; 0x02
    1c4e:	a0 91 2a 02 	lds	r26, 0x022A	; 0x80022a <__flp>
    1c52:	b0 91 2b 02 	lds	r27, 0x022B	; 0x80022b <__flp+0x1>
    1c56:	10 97       	sbiw	r26, 0x00	; 0
    1c58:	81 f4       	brne	.+32     	; 0x1c7a <free+0x3e>
    1c5a:	20 81       	ld	r18, Z
    1c5c:	31 81       	ldd	r19, Z+1	; 0x01
    1c5e:	82 0f       	add	r24, r18
    1c60:	93 1f       	adc	r25, r19
    1c62:	20 91 28 02 	lds	r18, 0x0228	; 0x800228 <__brkval>
    1c66:	30 91 29 02 	lds	r19, 0x0229	; 0x800229 <__brkval+0x1>
    1c6a:	28 17       	cp	r18, r24
    1c6c:	39 07       	cpc	r19, r25
    1c6e:	51 f5       	brne	.+84     	; 0x1cc4 <free+0x88>
    1c70:	f0 93 29 02 	sts	0x0229, r31	; 0x800229 <__brkval+0x1>
    1c74:	e0 93 28 02 	sts	0x0228, r30	; 0x800228 <__brkval>
    1c78:	67 c0       	rjmp	.+206    	; 0x1d48 <free+0x10c>
    1c7a:	ed 01       	movw	r28, r26
    1c7c:	20 e0       	ldi	r18, 0x00	; 0
    1c7e:	30 e0       	ldi	r19, 0x00	; 0
    1c80:	ce 17       	cp	r28, r30
    1c82:	df 07       	cpc	r29, r31
    1c84:	40 f4       	brcc	.+16     	; 0x1c96 <free+0x5a>
    1c86:	4a 81       	ldd	r20, Y+2	; 0x02
    1c88:	5b 81       	ldd	r21, Y+3	; 0x03
    1c8a:	9e 01       	movw	r18, r28
    1c8c:	41 15       	cp	r20, r1
    1c8e:	51 05       	cpc	r21, r1
    1c90:	f1 f0       	breq	.+60     	; 0x1cce <free+0x92>
    1c92:	ea 01       	movw	r28, r20
    1c94:	f5 cf       	rjmp	.-22     	; 0x1c80 <free+0x44>
    1c96:	d3 83       	std	Z+3, r29	; 0x03
    1c98:	c2 83       	std	Z+2, r28	; 0x02
    1c9a:	40 81       	ld	r20, Z
    1c9c:	51 81       	ldd	r21, Z+1	; 0x01
    1c9e:	84 0f       	add	r24, r20
    1ca0:	95 1f       	adc	r25, r21
    1ca2:	c8 17       	cp	r28, r24
    1ca4:	d9 07       	cpc	r29, r25
    1ca6:	59 f4       	brne	.+22     	; 0x1cbe <free+0x82>
    1ca8:	88 81       	ld	r24, Y
    1caa:	99 81       	ldd	r25, Y+1	; 0x01
    1cac:	84 0f       	add	r24, r20
    1cae:	95 1f       	adc	r25, r21
    1cb0:	02 96       	adiw	r24, 0x02	; 2
    1cb2:	91 83       	std	Z+1, r25	; 0x01
    1cb4:	80 83       	st	Z, r24
    1cb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1cb8:	9b 81       	ldd	r25, Y+3	; 0x03
    1cba:	93 83       	std	Z+3, r25	; 0x03
    1cbc:	82 83       	std	Z+2, r24	; 0x02
    1cbe:	21 15       	cp	r18, r1
    1cc0:	31 05       	cpc	r19, r1
    1cc2:	29 f4       	brne	.+10     	; 0x1cce <free+0x92>
    1cc4:	f0 93 2b 02 	sts	0x022B, r31	; 0x80022b <__flp+0x1>
    1cc8:	e0 93 2a 02 	sts	0x022A, r30	; 0x80022a <__flp>
    1ccc:	3d c0       	rjmp	.+122    	; 0x1d48 <free+0x10c>
    1cce:	e9 01       	movw	r28, r18
    1cd0:	fb 83       	std	Y+3, r31	; 0x03
    1cd2:	ea 83       	std	Y+2, r30	; 0x02
    1cd4:	49 91       	ld	r20, Y+
    1cd6:	59 91       	ld	r21, Y+
    1cd8:	c4 0f       	add	r28, r20
    1cda:	d5 1f       	adc	r29, r21
    1cdc:	ec 17       	cp	r30, r28
    1cde:	fd 07       	cpc	r31, r29
    1ce0:	61 f4       	brne	.+24     	; 0x1cfa <free+0xbe>
    1ce2:	80 81       	ld	r24, Z
    1ce4:	91 81       	ldd	r25, Z+1	; 0x01
    1ce6:	84 0f       	add	r24, r20
    1ce8:	95 1f       	adc	r25, r21
    1cea:	02 96       	adiw	r24, 0x02	; 2
    1cec:	e9 01       	movw	r28, r18
    1cee:	99 83       	std	Y+1, r25	; 0x01
    1cf0:	88 83       	st	Y, r24
    1cf2:	82 81       	ldd	r24, Z+2	; 0x02
    1cf4:	93 81       	ldd	r25, Z+3	; 0x03
    1cf6:	9b 83       	std	Y+3, r25	; 0x03
    1cf8:	8a 83       	std	Y+2, r24	; 0x02
    1cfa:	e0 e0       	ldi	r30, 0x00	; 0
    1cfc:	f0 e0       	ldi	r31, 0x00	; 0
    1cfe:	12 96       	adiw	r26, 0x02	; 2
    1d00:	8d 91       	ld	r24, X+
    1d02:	9c 91       	ld	r25, X
    1d04:	13 97       	sbiw	r26, 0x03	; 3
    1d06:	00 97       	sbiw	r24, 0x00	; 0
    1d08:	19 f0       	breq	.+6      	; 0x1d10 <free+0xd4>
    1d0a:	fd 01       	movw	r30, r26
    1d0c:	dc 01       	movw	r26, r24
    1d0e:	f7 cf       	rjmp	.-18     	; 0x1cfe <free+0xc2>
    1d10:	8d 91       	ld	r24, X+
    1d12:	9c 91       	ld	r25, X
    1d14:	11 97       	sbiw	r26, 0x01	; 1
    1d16:	9d 01       	movw	r18, r26
    1d18:	2e 5f       	subi	r18, 0xFE	; 254
    1d1a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d1c:	82 0f       	add	r24, r18
    1d1e:	93 1f       	adc	r25, r19
    1d20:	20 91 28 02 	lds	r18, 0x0228	; 0x800228 <__brkval>
    1d24:	30 91 29 02 	lds	r19, 0x0229	; 0x800229 <__brkval+0x1>
    1d28:	28 17       	cp	r18, r24
    1d2a:	39 07       	cpc	r19, r25
    1d2c:	69 f4       	brne	.+26     	; 0x1d48 <free+0x10c>
    1d2e:	30 97       	sbiw	r30, 0x00	; 0
    1d30:	29 f4       	brne	.+10     	; 0x1d3c <free+0x100>
    1d32:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <__flp+0x1>
    1d36:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <__flp>
    1d3a:	02 c0       	rjmp	.+4      	; 0x1d40 <free+0x104>
    1d3c:	13 82       	std	Z+3, r1	; 0x03
    1d3e:	12 82       	std	Z+2, r1	; 0x02
    1d40:	b0 93 29 02 	sts	0x0229, r27	; 0x800229 <__brkval+0x1>
    1d44:	a0 93 28 02 	sts	0x0228, r26	; 0x800228 <__brkval>
    1d48:	df 91       	pop	r29
    1d4a:	cf 91       	pop	r28
    1d4c:	08 95       	ret

00001d4e <do_rand>:
    1d4e:	8f 92       	push	r8
    1d50:	9f 92       	push	r9
    1d52:	af 92       	push	r10
    1d54:	bf 92       	push	r11
    1d56:	cf 92       	push	r12
    1d58:	df 92       	push	r13
    1d5a:	ef 92       	push	r14
    1d5c:	ff 92       	push	r15
    1d5e:	cf 93       	push	r28
    1d60:	df 93       	push	r29
    1d62:	ec 01       	movw	r28, r24
    1d64:	68 81       	ld	r22, Y
    1d66:	79 81       	ldd	r23, Y+1	; 0x01
    1d68:	8a 81       	ldd	r24, Y+2	; 0x02
    1d6a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d6c:	61 15       	cp	r22, r1
    1d6e:	71 05       	cpc	r23, r1
    1d70:	81 05       	cpc	r24, r1
    1d72:	91 05       	cpc	r25, r1
    1d74:	21 f4       	brne	.+8      	; 0x1d7e <do_rand+0x30>
    1d76:	64 e2       	ldi	r22, 0x24	; 36
    1d78:	79 ed       	ldi	r23, 0xD9	; 217
    1d7a:	8b e5       	ldi	r24, 0x5B	; 91
    1d7c:	97 e0       	ldi	r25, 0x07	; 7
    1d7e:	2d e1       	ldi	r18, 0x1D	; 29
    1d80:	33 ef       	ldi	r19, 0xF3	; 243
    1d82:	41 e0       	ldi	r20, 0x01	; 1
    1d84:	50 e0       	ldi	r21, 0x00	; 0
    1d86:	29 d3       	rcall	.+1618   	; 0x23da <__divmodsi4>
    1d88:	49 01       	movw	r8, r18
    1d8a:	5a 01       	movw	r10, r20
    1d8c:	9b 01       	movw	r18, r22
    1d8e:	ac 01       	movw	r20, r24
    1d90:	a7 ea       	ldi	r26, 0xA7	; 167
    1d92:	b1 e4       	ldi	r27, 0x41	; 65
    1d94:	3e d3       	rcall	.+1660   	; 0x2412 <__muluhisi3>
    1d96:	6b 01       	movw	r12, r22
    1d98:	7c 01       	movw	r14, r24
    1d9a:	ac ee       	ldi	r26, 0xEC	; 236
    1d9c:	b4 ef       	ldi	r27, 0xF4	; 244
    1d9e:	a5 01       	movw	r20, r10
    1da0:	94 01       	movw	r18, r8
    1da2:	43 d3       	rcall	.+1670   	; 0x242a <__mulohisi3>
    1da4:	dc 01       	movw	r26, r24
    1da6:	cb 01       	movw	r24, r22
    1da8:	8c 0d       	add	r24, r12
    1daa:	9d 1d       	adc	r25, r13
    1dac:	ae 1d       	adc	r26, r14
    1dae:	bf 1d       	adc	r27, r15
    1db0:	b7 ff       	sbrs	r27, 7
    1db2:	03 c0       	rjmp	.+6      	; 0x1dba <do_rand+0x6c>
    1db4:	01 97       	sbiw	r24, 0x01	; 1
    1db6:	a1 09       	sbc	r26, r1
    1db8:	b0 48       	sbci	r27, 0x80	; 128
    1dba:	88 83       	st	Y, r24
    1dbc:	99 83       	std	Y+1, r25	; 0x01
    1dbe:	aa 83       	std	Y+2, r26	; 0x02
    1dc0:	bb 83       	std	Y+3, r27	; 0x03
    1dc2:	9f 77       	andi	r25, 0x7F	; 127
    1dc4:	df 91       	pop	r29
    1dc6:	cf 91       	pop	r28
    1dc8:	ff 90       	pop	r15
    1dca:	ef 90       	pop	r14
    1dcc:	df 90       	pop	r13
    1dce:	cf 90       	pop	r12
    1dd0:	bf 90       	pop	r11
    1dd2:	af 90       	pop	r10
    1dd4:	9f 90       	pop	r9
    1dd6:	8f 90       	pop	r8
    1dd8:	08 95       	ret

00001dda <rand_r>:
    1dda:	b9 cf       	rjmp	.-142    	; 0x1d4e <do_rand>

00001ddc <rand>:
    1ddc:	86 e0       	ldi	r24, 0x06	; 6
    1dde:	91 e0       	ldi	r25, 0x01	; 1
    1de0:	b6 cf       	rjmp	.-148    	; 0x1d4e <do_rand>

00001de2 <srand>:
    1de2:	a0 e0       	ldi	r26, 0x00	; 0
    1de4:	b0 e0       	ldi	r27, 0x00	; 0
    1de6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
    1dea:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
    1dee:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
    1df2:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
    1df6:	08 95       	ret

00001df8 <sprintf>:
    1df8:	0f 93       	push	r16
    1dfa:	1f 93       	push	r17
    1dfc:	cf 93       	push	r28
    1dfe:	df 93       	push	r29
    1e00:	cd b7       	in	r28, 0x3d	; 61
    1e02:	de b7       	in	r29, 0x3e	; 62
    1e04:	2e 97       	sbiw	r28, 0x0e	; 14
    1e06:	0f b6       	in	r0, 0x3f	; 63
    1e08:	f8 94       	cli
    1e0a:	de bf       	out	0x3e, r29	; 62
    1e0c:	0f be       	out	0x3f, r0	; 63
    1e0e:	cd bf       	out	0x3d, r28	; 61
    1e10:	0d 89       	ldd	r16, Y+21	; 0x15
    1e12:	1e 89       	ldd	r17, Y+22	; 0x16
    1e14:	86 e0       	ldi	r24, 0x06	; 6
    1e16:	8c 83       	std	Y+4, r24	; 0x04
    1e18:	1a 83       	std	Y+2, r17	; 0x02
    1e1a:	09 83       	std	Y+1, r16	; 0x01
    1e1c:	8f ef       	ldi	r24, 0xFF	; 255
    1e1e:	9f e7       	ldi	r25, 0x7F	; 127
    1e20:	9e 83       	std	Y+6, r25	; 0x06
    1e22:	8d 83       	std	Y+5, r24	; 0x05
    1e24:	ae 01       	movw	r20, r28
    1e26:	47 5e       	subi	r20, 0xE7	; 231
    1e28:	5f 4f       	sbci	r21, 0xFF	; 255
    1e2a:	6f 89       	ldd	r22, Y+23	; 0x17
    1e2c:	78 8d       	ldd	r23, Y+24	; 0x18
    1e2e:	ce 01       	movw	r24, r28
    1e30:	01 96       	adiw	r24, 0x01	; 1
    1e32:	10 d0       	rcall	.+32     	; 0x1e54 <vfprintf>
    1e34:	ef 81       	ldd	r30, Y+7	; 0x07
    1e36:	f8 85       	ldd	r31, Y+8	; 0x08
    1e38:	e0 0f       	add	r30, r16
    1e3a:	f1 1f       	adc	r31, r17
    1e3c:	10 82       	st	Z, r1
    1e3e:	2e 96       	adiw	r28, 0x0e	; 14
    1e40:	0f b6       	in	r0, 0x3f	; 63
    1e42:	f8 94       	cli
    1e44:	de bf       	out	0x3e, r29	; 62
    1e46:	0f be       	out	0x3f, r0	; 63
    1e48:	cd bf       	out	0x3d, r28	; 61
    1e4a:	df 91       	pop	r29
    1e4c:	cf 91       	pop	r28
    1e4e:	1f 91       	pop	r17
    1e50:	0f 91       	pop	r16
    1e52:	08 95       	ret

00001e54 <vfprintf>:
    1e54:	2f 92       	push	r2
    1e56:	3f 92       	push	r3
    1e58:	4f 92       	push	r4
    1e5a:	5f 92       	push	r5
    1e5c:	6f 92       	push	r6
    1e5e:	7f 92       	push	r7
    1e60:	8f 92       	push	r8
    1e62:	9f 92       	push	r9
    1e64:	af 92       	push	r10
    1e66:	bf 92       	push	r11
    1e68:	cf 92       	push	r12
    1e6a:	df 92       	push	r13
    1e6c:	ef 92       	push	r14
    1e6e:	ff 92       	push	r15
    1e70:	0f 93       	push	r16
    1e72:	1f 93       	push	r17
    1e74:	cf 93       	push	r28
    1e76:	df 93       	push	r29
    1e78:	cd b7       	in	r28, 0x3d	; 61
    1e7a:	de b7       	in	r29, 0x3e	; 62
    1e7c:	2b 97       	sbiw	r28, 0x0b	; 11
    1e7e:	0f b6       	in	r0, 0x3f	; 63
    1e80:	f8 94       	cli
    1e82:	de bf       	out	0x3e, r29	; 62
    1e84:	0f be       	out	0x3f, r0	; 63
    1e86:	cd bf       	out	0x3d, r28	; 61
    1e88:	6c 01       	movw	r12, r24
    1e8a:	7b 01       	movw	r14, r22
    1e8c:	8a 01       	movw	r16, r20
    1e8e:	fc 01       	movw	r30, r24
    1e90:	17 82       	std	Z+7, r1	; 0x07
    1e92:	16 82       	std	Z+6, r1	; 0x06
    1e94:	83 81       	ldd	r24, Z+3	; 0x03
    1e96:	81 ff       	sbrs	r24, 1
    1e98:	bf c1       	rjmp	.+894    	; 0x2218 <vfprintf+0x3c4>
    1e9a:	ce 01       	movw	r24, r28
    1e9c:	01 96       	adiw	r24, 0x01	; 1
    1e9e:	3c 01       	movw	r6, r24
    1ea0:	f6 01       	movw	r30, r12
    1ea2:	93 81       	ldd	r25, Z+3	; 0x03
    1ea4:	f7 01       	movw	r30, r14
    1ea6:	93 fd       	sbrc	r25, 3
    1ea8:	85 91       	lpm	r24, Z+
    1eaa:	93 ff       	sbrs	r25, 3
    1eac:	81 91       	ld	r24, Z+
    1eae:	7f 01       	movw	r14, r30
    1eb0:	88 23       	and	r24, r24
    1eb2:	09 f4       	brne	.+2      	; 0x1eb6 <vfprintf+0x62>
    1eb4:	ad c1       	rjmp	.+858    	; 0x2210 <vfprintf+0x3bc>
    1eb6:	85 32       	cpi	r24, 0x25	; 37
    1eb8:	39 f4       	brne	.+14     	; 0x1ec8 <vfprintf+0x74>
    1eba:	93 fd       	sbrc	r25, 3
    1ebc:	85 91       	lpm	r24, Z+
    1ebe:	93 ff       	sbrs	r25, 3
    1ec0:	81 91       	ld	r24, Z+
    1ec2:	7f 01       	movw	r14, r30
    1ec4:	85 32       	cpi	r24, 0x25	; 37
    1ec6:	21 f4       	brne	.+8      	; 0x1ed0 <vfprintf+0x7c>
    1ec8:	b6 01       	movw	r22, r12
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	d6 d1       	rcall	.+940    	; 0x227a <fputc>
    1ece:	e8 cf       	rjmp	.-48     	; 0x1ea0 <vfprintf+0x4c>
    1ed0:	91 2c       	mov	r9, r1
    1ed2:	21 2c       	mov	r2, r1
    1ed4:	31 2c       	mov	r3, r1
    1ed6:	ff e1       	ldi	r31, 0x1F	; 31
    1ed8:	f3 15       	cp	r31, r3
    1eda:	d8 f0       	brcs	.+54     	; 0x1f12 <vfprintf+0xbe>
    1edc:	8b 32       	cpi	r24, 0x2B	; 43
    1ede:	79 f0       	breq	.+30     	; 0x1efe <vfprintf+0xaa>
    1ee0:	38 f4       	brcc	.+14     	; 0x1ef0 <vfprintf+0x9c>
    1ee2:	80 32       	cpi	r24, 0x20	; 32
    1ee4:	79 f0       	breq	.+30     	; 0x1f04 <vfprintf+0xb0>
    1ee6:	83 32       	cpi	r24, 0x23	; 35
    1ee8:	a1 f4       	brne	.+40     	; 0x1f12 <vfprintf+0xbe>
    1eea:	23 2d       	mov	r18, r3
    1eec:	20 61       	ori	r18, 0x10	; 16
    1eee:	1d c0       	rjmp	.+58     	; 0x1f2a <vfprintf+0xd6>
    1ef0:	8d 32       	cpi	r24, 0x2D	; 45
    1ef2:	61 f0       	breq	.+24     	; 0x1f0c <vfprintf+0xb8>
    1ef4:	80 33       	cpi	r24, 0x30	; 48
    1ef6:	69 f4       	brne	.+26     	; 0x1f12 <vfprintf+0xbe>
    1ef8:	23 2d       	mov	r18, r3
    1efa:	21 60       	ori	r18, 0x01	; 1
    1efc:	16 c0       	rjmp	.+44     	; 0x1f2a <vfprintf+0xd6>
    1efe:	83 2d       	mov	r24, r3
    1f00:	82 60       	ori	r24, 0x02	; 2
    1f02:	38 2e       	mov	r3, r24
    1f04:	e3 2d       	mov	r30, r3
    1f06:	e4 60       	ori	r30, 0x04	; 4
    1f08:	3e 2e       	mov	r3, r30
    1f0a:	2a c0       	rjmp	.+84     	; 0x1f60 <vfprintf+0x10c>
    1f0c:	f3 2d       	mov	r31, r3
    1f0e:	f8 60       	ori	r31, 0x08	; 8
    1f10:	1d c0       	rjmp	.+58     	; 0x1f4c <vfprintf+0xf8>
    1f12:	37 fc       	sbrc	r3, 7
    1f14:	2d c0       	rjmp	.+90     	; 0x1f70 <vfprintf+0x11c>
    1f16:	20 ed       	ldi	r18, 0xD0	; 208
    1f18:	28 0f       	add	r18, r24
    1f1a:	2a 30       	cpi	r18, 0x0A	; 10
    1f1c:	40 f0       	brcs	.+16     	; 0x1f2e <vfprintf+0xda>
    1f1e:	8e 32       	cpi	r24, 0x2E	; 46
    1f20:	b9 f4       	brne	.+46     	; 0x1f50 <vfprintf+0xfc>
    1f22:	36 fc       	sbrc	r3, 6
    1f24:	75 c1       	rjmp	.+746    	; 0x2210 <vfprintf+0x3bc>
    1f26:	23 2d       	mov	r18, r3
    1f28:	20 64       	ori	r18, 0x40	; 64
    1f2a:	32 2e       	mov	r3, r18
    1f2c:	19 c0       	rjmp	.+50     	; 0x1f60 <vfprintf+0x10c>
    1f2e:	36 fe       	sbrs	r3, 6
    1f30:	06 c0       	rjmp	.+12     	; 0x1f3e <vfprintf+0xea>
    1f32:	8a e0       	ldi	r24, 0x0A	; 10
    1f34:	98 9e       	mul	r9, r24
    1f36:	20 0d       	add	r18, r0
    1f38:	11 24       	eor	r1, r1
    1f3a:	92 2e       	mov	r9, r18
    1f3c:	11 c0       	rjmp	.+34     	; 0x1f60 <vfprintf+0x10c>
    1f3e:	ea e0       	ldi	r30, 0x0A	; 10
    1f40:	2e 9e       	mul	r2, r30
    1f42:	20 0d       	add	r18, r0
    1f44:	11 24       	eor	r1, r1
    1f46:	22 2e       	mov	r2, r18
    1f48:	f3 2d       	mov	r31, r3
    1f4a:	f0 62       	ori	r31, 0x20	; 32
    1f4c:	3f 2e       	mov	r3, r31
    1f4e:	08 c0       	rjmp	.+16     	; 0x1f60 <vfprintf+0x10c>
    1f50:	8c 36       	cpi	r24, 0x6C	; 108
    1f52:	21 f4       	brne	.+8      	; 0x1f5c <vfprintf+0x108>
    1f54:	83 2d       	mov	r24, r3
    1f56:	80 68       	ori	r24, 0x80	; 128
    1f58:	38 2e       	mov	r3, r24
    1f5a:	02 c0       	rjmp	.+4      	; 0x1f60 <vfprintf+0x10c>
    1f5c:	88 36       	cpi	r24, 0x68	; 104
    1f5e:	41 f4       	brne	.+16     	; 0x1f70 <vfprintf+0x11c>
    1f60:	f7 01       	movw	r30, r14
    1f62:	93 fd       	sbrc	r25, 3
    1f64:	85 91       	lpm	r24, Z+
    1f66:	93 ff       	sbrs	r25, 3
    1f68:	81 91       	ld	r24, Z+
    1f6a:	7f 01       	movw	r14, r30
    1f6c:	81 11       	cpse	r24, r1
    1f6e:	b3 cf       	rjmp	.-154    	; 0x1ed6 <vfprintf+0x82>
    1f70:	98 2f       	mov	r25, r24
    1f72:	9f 7d       	andi	r25, 0xDF	; 223
    1f74:	95 54       	subi	r25, 0x45	; 69
    1f76:	93 30       	cpi	r25, 0x03	; 3
    1f78:	28 f4       	brcc	.+10     	; 0x1f84 <vfprintf+0x130>
    1f7a:	0c 5f       	subi	r16, 0xFC	; 252
    1f7c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f7e:	9f e3       	ldi	r25, 0x3F	; 63
    1f80:	99 83       	std	Y+1, r25	; 0x01
    1f82:	0d c0       	rjmp	.+26     	; 0x1f9e <vfprintf+0x14a>
    1f84:	83 36       	cpi	r24, 0x63	; 99
    1f86:	31 f0       	breq	.+12     	; 0x1f94 <vfprintf+0x140>
    1f88:	83 37       	cpi	r24, 0x73	; 115
    1f8a:	71 f0       	breq	.+28     	; 0x1fa8 <vfprintf+0x154>
    1f8c:	83 35       	cpi	r24, 0x53	; 83
    1f8e:	09 f0       	breq	.+2      	; 0x1f92 <vfprintf+0x13e>
    1f90:	55 c0       	rjmp	.+170    	; 0x203c <vfprintf+0x1e8>
    1f92:	20 c0       	rjmp	.+64     	; 0x1fd4 <vfprintf+0x180>
    1f94:	f8 01       	movw	r30, r16
    1f96:	80 81       	ld	r24, Z
    1f98:	89 83       	std	Y+1, r24	; 0x01
    1f9a:	0e 5f       	subi	r16, 0xFE	; 254
    1f9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f9e:	88 24       	eor	r8, r8
    1fa0:	83 94       	inc	r8
    1fa2:	91 2c       	mov	r9, r1
    1fa4:	53 01       	movw	r10, r6
    1fa6:	12 c0       	rjmp	.+36     	; 0x1fcc <vfprintf+0x178>
    1fa8:	28 01       	movw	r4, r16
    1faa:	f2 e0       	ldi	r31, 0x02	; 2
    1fac:	4f 0e       	add	r4, r31
    1fae:	51 1c       	adc	r5, r1
    1fb0:	f8 01       	movw	r30, r16
    1fb2:	a0 80       	ld	r10, Z
    1fb4:	b1 80       	ldd	r11, Z+1	; 0x01
    1fb6:	36 fe       	sbrs	r3, 6
    1fb8:	03 c0       	rjmp	.+6      	; 0x1fc0 <vfprintf+0x16c>
    1fba:	69 2d       	mov	r22, r9
    1fbc:	70 e0       	ldi	r23, 0x00	; 0
    1fbe:	02 c0       	rjmp	.+4      	; 0x1fc4 <vfprintf+0x170>
    1fc0:	6f ef       	ldi	r22, 0xFF	; 255
    1fc2:	7f ef       	ldi	r23, 0xFF	; 255
    1fc4:	c5 01       	movw	r24, r10
    1fc6:	4e d1       	rcall	.+668    	; 0x2264 <strnlen>
    1fc8:	4c 01       	movw	r8, r24
    1fca:	82 01       	movw	r16, r4
    1fcc:	f3 2d       	mov	r31, r3
    1fce:	ff 77       	andi	r31, 0x7F	; 127
    1fd0:	3f 2e       	mov	r3, r31
    1fd2:	15 c0       	rjmp	.+42     	; 0x1ffe <vfprintf+0x1aa>
    1fd4:	28 01       	movw	r4, r16
    1fd6:	22 e0       	ldi	r18, 0x02	; 2
    1fd8:	42 0e       	add	r4, r18
    1fda:	51 1c       	adc	r5, r1
    1fdc:	f8 01       	movw	r30, r16
    1fde:	a0 80       	ld	r10, Z
    1fe0:	b1 80       	ldd	r11, Z+1	; 0x01
    1fe2:	36 fe       	sbrs	r3, 6
    1fe4:	03 c0       	rjmp	.+6      	; 0x1fec <vfprintf+0x198>
    1fe6:	69 2d       	mov	r22, r9
    1fe8:	70 e0       	ldi	r23, 0x00	; 0
    1fea:	02 c0       	rjmp	.+4      	; 0x1ff0 <vfprintf+0x19c>
    1fec:	6f ef       	ldi	r22, 0xFF	; 255
    1fee:	7f ef       	ldi	r23, 0xFF	; 255
    1ff0:	c5 01       	movw	r24, r10
    1ff2:	2d d1       	rcall	.+602    	; 0x224e <strnlen_P>
    1ff4:	4c 01       	movw	r8, r24
    1ff6:	f3 2d       	mov	r31, r3
    1ff8:	f0 68       	ori	r31, 0x80	; 128
    1ffa:	3f 2e       	mov	r3, r31
    1ffc:	82 01       	movw	r16, r4
    1ffe:	33 fc       	sbrc	r3, 3
    2000:	19 c0       	rjmp	.+50     	; 0x2034 <vfprintf+0x1e0>
    2002:	82 2d       	mov	r24, r2
    2004:	90 e0       	ldi	r25, 0x00	; 0
    2006:	88 16       	cp	r8, r24
    2008:	99 06       	cpc	r9, r25
    200a:	a0 f4       	brcc	.+40     	; 0x2034 <vfprintf+0x1e0>
    200c:	b6 01       	movw	r22, r12
    200e:	80 e2       	ldi	r24, 0x20	; 32
    2010:	90 e0       	ldi	r25, 0x00	; 0
    2012:	33 d1       	rcall	.+614    	; 0x227a <fputc>
    2014:	2a 94       	dec	r2
    2016:	f5 cf       	rjmp	.-22     	; 0x2002 <vfprintf+0x1ae>
    2018:	f5 01       	movw	r30, r10
    201a:	37 fc       	sbrc	r3, 7
    201c:	85 91       	lpm	r24, Z+
    201e:	37 fe       	sbrs	r3, 7
    2020:	81 91       	ld	r24, Z+
    2022:	5f 01       	movw	r10, r30
    2024:	b6 01       	movw	r22, r12
    2026:	90 e0       	ldi	r25, 0x00	; 0
    2028:	28 d1       	rcall	.+592    	; 0x227a <fputc>
    202a:	21 10       	cpse	r2, r1
    202c:	2a 94       	dec	r2
    202e:	21 e0       	ldi	r18, 0x01	; 1
    2030:	82 1a       	sub	r8, r18
    2032:	91 08       	sbc	r9, r1
    2034:	81 14       	cp	r8, r1
    2036:	91 04       	cpc	r9, r1
    2038:	79 f7       	brne	.-34     	; 0x2018 <vfprintf+0x1c4>
    203a:	e1 c0       	rjmp	.+450    	; 0x21fe <vfprintf+0x3aa>
    203c:	84 36       	cpi	r24, 0x64	; 100
    203e:	11 f0       	breq	.+4      	; 0x2044 <vfprintf+0x1f0>
    2040:	89 36       	cpi	r24, 0x69	; 105
    2042:	39 f5       	brne	.+78     	; 0x2092 <vfprintf+0x23e>
    2044:	f8 01       	movw	r30, r16
    2046:	37 fe       	sbrs	r3, 7
    2048:	07 c0       	rjmp	.+14     	; 0x2058 <vfprintf+0x204>
    204a:	60 81       	ld	r22, Z
    204c:	71 81       	ldd	r23, Z+1	; 0x01
    204e:	82 81       	ldd	r24, Z+2	; 0x02
    2050:	93 81       	ldd	r25, Z+3	; 0x03
    2052:	0c 5f       	subi	r16, 0xFC	; 252
    2054:	1f 4f       	sbci	r17, 0xFF	; 255
    2056:	08 c0       	rjmp	.+16     	; 0x2068 <vfprintf+0x214>
    2058:	60 81       	ld	r22, Z
    205a:	71 81       	ldd	r23, Z+1	; 0x01
    205c:	07 2e       	mov	r0, r23
    205e:	00 0c       	add	r0, r0
    2060:	88 0b       	sbc	r24, r24
    2062:	99 0b       	sbc	r25, r25
    2064:	0e 5f       	subi	r16, 0xFE	; 254
    2066:	1f 4f       	sbci	r17, 0xFF	; 255
    2068:	f3 2d       	mov	r31, r3
    206a:	ff 76       	andi	r31, 0x6F	; 111
    206c:	3f 2e       	mov	r3, r31
    206e:	97 ff       	sbrs	r25, 7
    2070:	09 c0       	rjmp	.+18     	; 0x2084 <vfprintf+0x230>
    2072:	90 95       	com	r25
    2074:	80 95       	com	r24
    2076:	70 95       	com	r23
    2078:	61 95       	neg	r22
    207a:	7f 4f       	sbci	r23, 0xFF	; 255
    207c:	8f 4f       	sbci	r24, 0xFF	; 255
    207e:	9f 4f       	sbci	r25, 0xFF	; 255
    2080:	f0 68       	ori	r31, 0x80	; 128
    2082:	3f 2e       	mov	r3, r31
    2084:	2a e0       	ldi	r18, 0x0A	; 10
    2086:	30 e0       	ldi	r19, 0x00	; 0
    2088:	a3 01       	movw	r20, r6
    208a:	33 d1       	rcall	.+614    	; 0x22f2 <__ultoa_invert>
    208c:	88 2e       	mov	r8, r24
    208e:	86 18       	sub	r8, r6
    2090:	44 c0       	rjmp	.+136    	; 0x211a <vfprintf+0x2c6>
    2092:	85 37       	cpi	r24, 0x75	; 117
    2094:	31 f4       	brne	.+12     	; 0x20a2 <vfprintf+0x24e>
    2096:	23 2d       	mov	r18, r3
    2098:	2f 7e       	andi	r18, 0xEF	; 239
    209a:	b2 2e       	mov	r11, r18
    209c:	2a e0       	ldi	r18, 0x0A	; 10
    209e:	30 e0       	ldi	r19, 0x00	; 0
    20a0:	25 c0       	rjmp	.+74     	; 0x20ec <vfprintf+0x298>
    20a2:	93 2d       	mov	r25, r3
    20a4:	99 7f       	andi	r25, 0xF9	; 249
    20a6:	b9 2e       	mov	r11, r25
    20a8:	8f 36       	cpi	r24, 0x6F	; 111
    20aa:	c1 f0       	breq	.+48     	; 0x20dc <vfprintf+0x288>
    20ac:	18 f4       	brcc	.+6      	; 0x20b4 <vfprintf+0x260>
    20ae:	88 35       	cpi	r24, 0x58	; 88
    20b0:	79 f0       	breq	.+30     	; 0x20d0 <vfprintf+0x27c>
    20b2:	ae c0       	rjmp	.+348    	; 0x2210 <vfprintf+0x3bc>
    20b4:	80 37       	cpi	r24, 0x70	; 112
    20b6:	19 f0       	breq	.+6      	; 0x20be <vfprintf+0x26a>
    20b8:	88 37       	cpi	r24, 0x78	; 120
    20ba:	21 f0       	breq	.+8      	; 0x20c4 <vfprintf+0x270>
    20bc:	a9 c0       	rjmp	.+338    	; 0x2210 <vfprintf+0x3bc>
    20be:	e9 2f       	mov	r30, r25
    20c0:	e0 61       	ori	r30, 0x10	; 16
    20c2:	be 2e       	mov	r11, r30
    20c4:	b4 fe       	sbrs	r11, 4
    20c6:	0d c0       	rjmp	.+26     	; 0x20e2 <vfprintf+0x28e>
    20c8:	fb 2d       	mov	r31, r11
    20ca:	f4 60       	ori	r31, 0x04	; 4
    20cc:	bf 2e       	mov	r11, r31
    20ce:	09 c0       	rjmp	.+18     	; 0x20e2 <vfprintf+0x28e>
    20d0:	34 fe       	sbrs	r3, 4
    20d2:	0a c0       	rjmp	.+20     	; 0x20e8 <vfprintf+0x294>
    20d4:	29 2f       	mov	r18, r25
    20d6:	26 60       	ori	r18, 0x06	; 6
    20d8:	b2 2e       	mov	r11, r18
    20da:	06 c0       	rjmp	.+12     	; 0x20e8 <vfprintf+0x294>
    20dc:	28 e0       	ldi	r18, 0x08	; 8
    20de:	30 e0       	ldi	r19, 0x00	; 0
    20e0:	05 c0       	rjmp	.+10     	; 0x20ec <vfprintf+0x298>
    20e2:	20 e1       	ldi	r18, 0x10	; 16
    20e4:	30 e0       	ldi	r19, 0x00	; 0
    20e6:	02 c0       	rjmp	.+4      	; 0x20ec <vfprintf+0x298>
    20e8:	20 e1       	ldi	r18, 0x10	; 16
    20ea:	32 e0       	ldi	r19, 0x02	; 2
    20ec:	f8 01       	movw	r30, r16
    20ee:	b7 fe       	sbrs	r11, 7
    20f0:	07 c0       	rjmp	.+14     	; 0x2100 <vfprintf+0x2ac>
    20f2:	60 81       	ld	r22, Z
    20f4:	71 81       	ldd	r23, Z+1	; 0x01
    20f6:	82 81       	ldd	r24, Z+2	; 0x02
    20f8:	93 81       	ldd	r25, Z+3	; 0x03
    20fa:	0c 5f       	subi	r16, 0xFC	; 252
    20fc:	1f 4f       	sbci	r17, 0xFF	; 255
    20fe:	06 c0       	rjmp	.+12     	; 0x210c <vfprintf+0x2b8>
    2100:	60 81       	ld	r22, Z
    2102:	71 81       	ldd	r23, Z+1	; 0x01
    2104:	80 e0       	ldi	r24, 0x00	; 0
    2106:	90 e0       	ldi	r25, 0x00	; 0
    2108:	0e 5f       	subi	r16, 0xFE	; 254
    210a:	1f 4f       	sbci	r17, 0xFF	; 255
    210c:	a3 01       	movw	r20, r6
    210e:	f1 d0       	rcall	.+482    	; 0x22f2 <__ultoa_invert>
    2110:	88 2e       	mov	r8, r24
    2112:	86 18       	sub	r8, r6
    2114:	fb 2d       	mov	r31, r11
    2116:	ff 77       	andi	r31, 0x7F	; 127
    2118:	3f 2e       	mov	r3, r31
    211a:	36 fe       	sbrs	r3, 6
    211c:	0d c0       	rjmp	.+26     	; 0x2138 <vfprintf+0x2e4>
    211e:	23 2d       	mov	r18, r3
    2120:	2e 7f       	andi	r18, 0xFE	; 254
    2122:	a2 2e       	mov	r10, r18
    2124:	89 14       	cp	r8, r9
    2126:	58 f4       	brcc	.+22     	; 0x213e <vfprintf+0x2ea>
    2128:	34 fe       	sbrs	r3, 4
    212a:	0b c0       	rjmp	.+22     	; 0x2142 <vfprintf+0x2ee>
    212c:	32 fc       	sbrc	r3, 2
    212e:	09 c0       	rjmp	.+18     	; 0x2142 <vfprintf+0x2ee>
    2130:	83 2d       	mov	r24, r3
    2132:	8e 7e       	andi	r24, 0xEE	; 238
    2134:	a8 2e       	mov	r10, r24
    2136:	05 c0       	rjmp	.+10     	; 0x2142 <vfprintf+0x2ee>
    2138:	b8 2c       	mov	r11, r8
    213a:	a3 2c       	mov	r10, r3
    213c:	03 c0       	rjmp	.+6      	; 0x2144 <vfprintf+0x2f0>
    213e:	b8 2c       	mov	r11, r8
    2140:	01 c0       	rjmp	.+2      	; 0x2144 <vfprintf+0x2f0>
    2142:	b9 2c       	mov	r11, r9
    2144:	a4 fe       	sbrs	r10, 4
    2146:	0f c0       	rjmp	.+30     	; 0x2166 <vfprintf+0x312>
    2148:	fe 01       	movw	r30, r28
    214a:	e8 0d       	add	r30, r8
    214c:	f1 1d       	adc	r31, r1
    214e:	80 81       	ld	r24, Z
    2150:	80 33       	cpi	r24, 0x30	; 48
    2152:	21 f4       	brne	.+8      	; 0x215c <vfprintf+0x308>
    2154:	9a 2d       	mov	r25, r10
    2156:	99 7e       	andi	r25, 0xE9	; 233
    2158:	a9 2e       	mov	r10, r25
    215a:	09 c0       	rjmp	.+18     	; 0x216e <vfprintf+0x31a>
    215c:	a2 fe       	sbrs	r10, 2
    215e:	06 c0       	rjmp	.+12     	; 0x216c <vfprintf+0x318>
    2160:	b3 94       	inc	r11
    2162:	b3 94       	inc	r11
    2164:	04 c0       	rjmp	.+8      	; 0x216e <vfprintf+0x31a>
    2166:	8a 2d       	mov	r24, r10
    2168:	86 78       	andi	r24, 0x86	; 134
    216a:	09 f0       	breq	.+2      	; 0x216e <vfprintf+0x31a>
    216c:	b3 94       	inc	r11
    216e:	a3 fc       	sbrc	r10, 3
    2170:	10 c0       	rjmp	.+32     	; 0x2192 <vfprintf+0x33e>
    2172:	a0 fe       	sbrs	r10, 0
    2174:	06 c0       	rjmp	.+12     	; 0x2182 <vfprintf+0x32e>
    2176:	b2 14       	cp	r11, r2
    2178:	80 f4       	brcc	.+32     	; 0x219a <vfprintf+0x346>
    217a:	28 0c       	add	r2, r8
    217c:	92 2c       	mov	r9, r2
    217e:	9b 18       	sub	r9, r11
    2180:	0d c0       	rjmp	.+26     	; 0x219c <vfprintf+0x348>
    2182:	b2 14       	cp	r11, r2
    2184:	58 f4       	brcc	.+22     	; 0x219c <vfprintf+0x348>
    2186:	b6 01       	movw	r22, r12
    2188:	80 e2       	ldi	r24, 0x20	; 32
    218a:	90 e0       	ldi	r25, 0x00	; 0
    218c:	76 d0       	rcall	.+236    	; 0x227a <fputc>
    218e:	b3 94       	inc	r11
    2190:	f8 cf       	rjmp	.-16     	; 0x2182 <vfprintf+0x32e>
    2192:	b2 14       	cp	r11, r2
    2194:	18 f4       	brcc	.+6      	; 0x219c <vfprintf+0x348>
    2196:	2b 18       	sub	r2, r11
    2198:	02 c0       	rjmp	.+4      	; 0x219e <vfprintf+0x34a>
    219a:	98 2c       	mov	r9, r8
    219c:	21 2c       	mov	r2, r1
    219e:	a4 fe       	sbrs	r10, 4
    21a0:	0f c0       	rjmp	.+30     	; 0x21c0 <vfprintf+0x36c>
    21a2:	b6 01       	movw	r22, r12
    21a4:	80 e3       	ldi	r24, 0x30	; 48
    21a6:	90 e0       	ldi	r25, 0x00	; 0
    21a8:	68 d0       	rcall	.+208    	; 0x227a <fputc>
    21aa:	a2 fe       	sbrs	r10, 2
    21ac:	16 c0       	rjmp	.+44     	; 0x21da <vfprintf+0x386>
    21ae:	a1 fc       	sbrc	r10, 1
    21b0:	03 c0       	rjmp	.+6      	; 0x21b8 <vfprintf+0x364>
    21b2:	88 e7       	ldi	r24, 0x78	; 120
    21b4:	90 e0       	ldi	r25, 0x00	; 0
    21b6:	02 c0       	rjmp	.+4      	; 0x21bc <vfprintf+0x368>
    21b8:	88 e5       	ldi	r24, 0x58	; 88
    21ba:	90 e0       	ldi	r25, 0x00	; 0
    21bc:	b6 01       	movw	r22, r12
    21be:	0c c0       	rjmp	.+24     	; 0x21d8 <vfprintf+0x384>
    21c0:	8a 2d       	mov	r24, r10
    21c2:	86 78       	andi	r24, 0x86	; 134
    21c4:	51 f0       	breq	.+20     	; 0x21da <vfprintf+0x386>
    21c6:	a1 fe       	sbrs	r10, 1
    21c8:	02 c0       	rjmp	.+4      	; 0x21ce <vfprintf+0x37a>
    21ca:	8b e2       	ldi	r24, 0x2B	; 43
    21cc:	01 c0       	rjmp	.+2      	; 0x21d0 <vfprintf+0x37c>
    21ce:	80 e2       	ldi	r24, 0x20	; 32
    21d0:	a7 fc       	sbrc	r10, 7
    21d2:	8d e2       	ldi	r24, 0x2D	; 45
    21d4:	b6 01       	movw	r22, r12
    21d6:	90 e0       	ldi	r25, 0x00	; 0
    21d8:	50 d0       	rcall	.+160    	; 0x227a <fputc>
    21da:	89 14       	cp	r8, r9
    21dc:	30 f4       	brcc	.+12     	; 0x21ea <vfprintf+0x396>
    21de:	b6 01       	movw	r22, r12
    21e0:	80 e3       	ldi	r24, 0x30	; 48
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	4a d0       	rcall	.+148    	; 0x227a <fputc>
    21e6:	9a 94       	dec	r9
    21e8:	f8 cf       	rjmp	.-16     	; 0x21da <vfprintf+0x386>
    21ea:	8a 94       	dec	r8
    21ec:	f3 01       	movw	r30, r6
    21ee:	e8 0d       	add	r30, r8
    21f0:	f1 1d       	adc	r31, r1
    21f2:	80 81       	ld	r24, Z
    21f4:	b6 01       	movw	r22, r12
    21f6:	90 e0       	ldi	r25, 0x00	; 0
    21f8:	40 d0       	rcall	.+128    	; 0x227a <fputc>
    21fa:	81 10       	cpse	r8, r1
    21fc:	f6 cf       	rjmp	.-20     	; 0x21ea <vfprintf+0x396>
    21fe:	22 20       	and	r2, r2
    2200:	09 f4       	brne	.+2      	; 0x2204 <vfprintf+0x3b0>
    2202:	4e ce       	rjmp	.-868    	; 0x1ea0 <vfprintf+0x4c>
    2204:	b6 01       	movw	r22, r12
    2206:	80 e2       	ldi	r24, 0x20	; 32
    2208:	90 e0       	ldi	r25, 0x00	; 0
    220a:	37 d0       	rcall	.+110    	; 0x227a <fputc>
    220c:	2a 94       	dec	r2
    220e:	f7 cf       	rjmp	.-18     	; 0x21fe <vfprintf+0x3aa>
    2210:	f6 01       	movw	r30, r12
    2212:	86 81       	ldd	r24, Z+6	; 0x06
    2214:	97 81       	ldd	r25, Z+7	; 0x07
    2216:	02 c0       	rjmp	.+4      	; 0x221c <vfprintf+0x3c8>
    2218:	8f ef       	ldi	r24, 0xFF	; 255
    221a:	9f ef       	ldi	r25, 0xFF	; 255
    221c:	2b 96       	adiw	r28, 0x0b	; 11
    221e:	0f b6       	in	r0, 0x3f	; 63
    2220:	f8 94       	cli
    2222:	de bf       	out	0x3e, r29	; 62
    2224:	0f be       	out	0x3f, r0	; 63
    2226:	cd bf       	out	0x3d, r28	; 61
    2228:	df 91       	pop	r29
    222a:	cf 91       	pop	r28
    222c:	1f 91       	pop	r17
    222e:	0f 91       	pop	r16
    2230:	ff 90       	pop	r15
    2232:	ef 90       	pop	r14
    2234:	df 90       	pop	r13
    2236:	cf 90       	pop	r12
    2238:	bf 90       	pop	r11
    223a:	af 90       	pop	r10
    223c:	9f 90       	pop	r9
    223e:	8f 90       	pop	r8
    2240:	7f 90       	pop	r7
    2242:	6f 90       	pop	r6
    2244:	5f 90       	pop	r5
    2246:	4f 90       	pop	r4
    2248:	3f 90       	pop	r3
    224a:	2f 90       	pop	r2
    224c:	08 95       	ret

0000224e <strnlen_P>:
    224e:	fc 01       	movw	r30, r24
    2250:	05 90       	lpm	r0, Z+
    2252:	61 50       	subi	r22, 0x01	; 1
    2254:	70 40       	sbci	r23, 0x00	; 0
    2256:	01 10       	cpse	r0, r1
    2258:	d8 f7       	brcc	.-10     	; 0x2250 <strnlen_P+0x2>
    225a:	80 95       	com	r24
    225c:	90 95       	com	r25
    225e:	8e 0f       	add	r24, r30
    2260:	9f 1f       	adc	r25, r31
    2262:	08 95       	ret

00002264 <strnlen>:
    2264:	fc 01       	movw	r30, r24
    2266:	61 50       	subi	r22, 0x01	; 1
    2268:	70 40       	sbci	r23, 0x00	; 0
    226a:	01 90       	ld	r0, Z+
    226c:	01 10       	cpse	r0, r1
    226e:	d8 f7       	brcc	.-10     	; 0x2266 <strnlen+0x2>
    2270:	80 95       	com	r24
    2272:	90 95       	com	r25
    2274:	8e 0f       	add	r24, r30
    2276:	9f 1f       	adc	r25, r31
    2278:	08 95       	ret

0000227a <fputc>:
    227a:	0f 93       	push	r16
    227c:	1f 93       	push	r17
    227e:	cf 93       	push	r28
    2280:	df 93       	push	r29
    2282:	fb 01       	movw	r30, r22
    2284:	23 81       	ldd	r18, Z+3	; 0x03
    2286:	21 fd       	sbrc	r18, 1
    2288:	03 c0       	rjmp	.+6      	; 0x2290 <fputc+0x16>
    228a:	8f ef       	ldi	r24, 0xFF	; 255
    228c:	9f ef       	ldi	r25, 0xFF	; 255
    228e:	2c c0       	rjmp	.+88     	; 0x22e8 <fputc+0x6e>
    2290:	22 ff       	sbrs	r18, 2
    2292:	16 c0       	rjmp	.+44     	; 0x22c0 <fputc+0x46>
    2294:	46 81       	ldd	r20, Z+6	; 0x06
    2296:	57 81       	ldd	r21, Z+7	; 0x07
    2298:	24 81       	ldd	r18, Z+4	; 0x04
    229a:	35 81       	ldd	r19, Z+5	; 0x05
    229c:	42 17       	cp	r20, r18
    229e:	53 07       	cpc	r21, r19
    22a0:	44 f4       	brge	.+16     	; 0x22b2 <fputc+0x38>
    22a2:	a0 81       	ld	r26, Z
    22a4:	b1 81       	ldd	r27, Z+1	; 0x01
    22a6:	9d 01       	movw	r18, r26
    22a8:	2f 5f       	subi	r18, 0xFF	; 255
    22aa:	3f 4f       	sbci	r19, 0xFF	; 255
    22ac:	31 83       	std	Z+1, r19	; 0x01
    22ae:	20 83       	st	Z, r18
    22b0:	8c 93       	st	X, r24
    22b2:	26 81       	ldd	r18, Z+6	; 0x06
    22b4:	37 81       	ldd	r19, Z+7	; 0x07
    22b6:	2f 5f       	subi	r18, 0xFF	; 255
    22b8:	3f 4f       	sbci	r19, 0xFF	; 255
    22ba:	37 83       	std	Z+7, r19	; 0x07
    22bc:	26 83       	std	Z+6, r18	; 0x06
    22be:	14 c0       	rjmp	.+40     	; 0x22e8 <fputc+0x6e>
    22c0:	8b 01       	movw	r16, r22
    22c2:	ec 01       	movw	r28, r24
    22c4:	fb 01       	movw	r30, r22
    22c6:	00 84       	ldd	r0, Z+8	; 0x08
    22c8:	f1 85       	ldd	r31, Z+9	; 0x09
    22ca:	e0 2d       	mov	r30, r0
    22cc:	09 95       	icall
    22ce:	89 2b       	or	r24, r25
    22d0:	e1 f6       	brne	.-72     	; 0x228a <fputc+0x10>
    22d2:	d8 01       	movw	r26, r16
    22d4:	16 96       	adiw	r26, 0x06	; 6
    22d6:	8d 91       	ld	r24, X+
    22d8:	9c 91       	ld	r25, X
    22da:	17 97       	sbiw	r26, 0x07	; 7
    22dc:	01 96       	adiw	r24, 0x01	; 1
    22de:	17 96       	adiw	r26, 0x07	; 7
    22e0:	9c 93       	st	X, r25
    22e2:	8e 93       	st	-X, r24
    22e4:	16 97       	sbiw	r26, 0x06	; 6
    22e6:	ce 01       	movw	r24, r28
    22e8:	df 91       	pop	r29
    22ea:	cf 91       	pop	r28
    22ec:	1f 91       	pop	r17
    22ee:	0f 91       	pop	r16
    22f0:	08 95       	ret

000022f2 <__ultoa_invert>:
    22f2:	fa 01       	movw	r30, r20
    22f4:	aa 27       	eor	r26, r26
    22f6:	28 30       	cpi	r18, 0x08	; 8
    22f8:	51 f1       	breq	.+84     	; 0x234e <__ultoa_invert+0x5c>
    22fa:	20 31       	cpi	r18, 0x10	; 16
    22fc:	81 f1       	breq	.+96     	; 0x235e <__ultoa_invert+0x6c>
    22fe:	e8 94       	clt
    2300:	6f 93       	push	r22
    2302:	6e 7f       	andi	r22, 0xFE	; 254
    2304:	6e 5f       	subi	r22, 0xFE	; 254
    2306:	7f 4f       	sbci	r23, 0xFF	; 255
    2308:	8f 4f       	sbci	r24, 0xFF	; 255
    230a:	9f 4f       	sbci	r25, 0xFF	; 255
    230c:	af 4f       	sbci	r26, 0xFF	; 255
    230e:	b1 e0       	ldi	r27, 0x01	; 1
    2310:	3e d0       	rcall	.+124    	; 0x238e <__ultoa_invert+0x9c>
    2312:	b4 e0       	ldi	r27, 0x04	; 4
    2314:	3c d0       	rcall	.+120    	; 0x238e <__ultoa_invert+0x9c>
    2316:	67 0f       	add	r22, r23
    2318:	78 1f       	adc	r23, r24
    231a:	89 1f       	adc	r24, r25
    231c:	9a 1f       	adc	r25, r26
    231e:	a1 1d       	adc	r26, r1
    2320:	68 0f       	add	r22, r24
    2322:	79 1f       	adc	r23, r25
    2324:	8a 1f       	adc	r24, r26
    2326:	91 1d       	adc	r25, r1
    2328:	a1 1d       	adc	r26, r1
    232a:	6a 0f       	add	r22, r26
    232c:	71 1d       	adc	r23, r1
    232e:	81 1d       	adc	r24, r1
    2330:	91 1d       	adc	r25, r1
    2332:	a1 1d       	adc	r26, r1
    2334:	20 d0       	rcall	.+64     	; 0x2376 <__ultoa_invert+0x84>
    2336:	09 f4       	brne	.+2      	; 0x233a <__ultoa_invert+0x48>
    2338:	68 94       	set
    233a:	3f 91       	pop	r19
    233c:	2a e0       	ldi	r18, 0x0A	; 10
    233e:	26 9f       	mul	r18, r22
    2340:	11 24       	eor	r1, r1
    2342:	30 19       	sub	r19, r0
    2344:	30 5d       	subi	r19, 0xD0	; 208
    2346:	31 93       	st	Z+, r19
    2348:	de f6       	brtc	.-74     	; 0x2300 <__ultoa_invert+0xe>
    234a:	cf 01       	movw	r24, r30
    234c:	08 95       	ret
    234e:	46 2f       	mov	r20, r22
    2350:	47 70       	andi	r20, 0x07	; 7
    2352:	40 5d       	subi	r20, 0xD0	; 208
    2354:	41 93       	st	Z+, r20
    2356:	b3 e0       	ldi	r27, 0x03	; 3
    2358:	0f d0       	rcall	.+30     	; 0x2378 <__ultoa_invert+0x86>
    235a:	c9 f7       	brne	.-14     	; 0x234e <__ultoa_invert+0x5c>
    235c:	f6 cf       	rjmp	.-20     	; 0x234a <__ultoa_invert+0x58>
    235e:	46 2f       	mov	r20, r22
    2360:	4f 70       	andi	r20, 0x0F	; 15
    2362:	40 5d       	subi	r20, 0xD0	; 208
    2364:	4a 33       	cpi	r20, 0x3A	; 58
    2366:	18 f0       	brcs	.+6      	; 0x236e <__ultoa_invert+0x7c>
    2368:	49 5d       	subi	r20, 0xD9	; 217
    236a:	31 fd       	sbrc	r19, 1
    236c:	40 52       	subi	r20, 0x20	; 32
    236e:	41 93       	st	Z+, r20
    2370:	02 d0       	rcall	.+4      	; 0x2376 <__ultoa_invert+0x84>
    2372:	a9 f7       	brne	.-22     	; 0x235e <__ultoa_invert+0x6c>
    2374:	ea cf       	rjmp	.-44     	; 0x234a <__ultoa_invert+0x58>
    2376:	b4 e0       	ldi	r27, 0x04	; 4
    2378:	a6 95       	lsr	r26
    237a:	97 95       	ror	r25
    237c:	87 95       	ror	r24
    237e:	77 95       	ror	r23
    2380:	67 95       	ror	r22
    2382:	ba 95       	dec	r27
    2384:	c9 f7       	brne	.-14     	; 0x2378 <__ultoa_invert+0x86>
    2386:	00 97       	sbiw	r24, 0x00	; 0
    2388:	61 05       	cpc	r22, r1
    238a:	71 05       	cpc	r23, r1
    238c:	08 95       	ret
    238e:	9b 01       	movw	r18, r22
    2390:	ac 01       	movw	r20, r24
    2392:	0a 2e       	mov	r0, r26
    2394:	06 94       	lsr	r0
    2396:	57 95       	ror	r21
    2398:	47 95       	ror	r20
    239a:	37 95       	ror	r19
    239c:	27 95       	ror	r18
    239e:	ba 95       	dec	r27
    23a0:	c9 f7       	brne	.-14     	; 0x2394 <__ultoa_invert+0xa2>
    23a2:	62 0f       	add	r22, r18
    23a4:	73 1f       	adc	r23, r19
    23a6:	84 1f       	adc	r24, r20
    23a8:	95 1f       	adc	r25, r21
    23aa:	a0 1d       	adc	r26, r0
    23ac:	08 95       	ret

000023ae <eeprom_read_byte>:
    23ae:	f9 99       	sbic	0x1f, 1	; 31
    23b0:	fe cf       	rjmp	.-4      	; 0x23ae <eeprom_read_byte>
    23b2:	92 bd       	out	0x22, r25	; 34
    23b4:	81 bd       	out	0x21, r24	; 33
    23b6:	f8 9a       	sbi	0x1f, 0	; 31
    23b8:	99 27       	eor	r25, r25
    23ba:	80 b5       	in	r24, 0x20	; 32
    23bc:	08 95       	ret

000023be <eeprom_write_byte>:
    23be:	26 2f       	mov	r18, r22

000023c0 <eeprom_write_r18>:
    23c0:	f9 99       	sbic	0x1f, 1	; 31
    23c2:	fe cf       	rjmp	.-4      	; 0x23c0 <eeprom_write_r18>
    23c4:	1f ba       	out	0x1f, r1	; 31
    23c6:	92 bd       	out	0x22, r25	; 34
    23c8:	81 bd       	out	0x21, r24	; 33
    23ca:	20 bd       	out	0x20, r18	; 32
    23cc:	0f b6       	in	r0, 0x3f	; 63
    23ce:	f8 94       	cli
    23d0:	fa 9a       	sbi	0x1f, 2	; 31
    23d2:	f9 9a       	sbi	0x1f, 1	; 31
    23d4:	0f be       	out	0x3f, r0	; 63
    23d6:	01 96       	adiw	r24, 0x01	; 1
    23d8:	08 95       	ret

000023da <__divmodsi4>:
    23da:	05 2e       	mov	r0, r21
    23dc:	97 fb       	bst	r25, 7
    23de:	16 f4       	brtc	.+4      	; 0x23e4 <__divmodsi4+0xa>
    23e0:	00 94       	com	r0
    23e2:	0f d0       	rcall	.+30     	; 0x2402 <__negsi2>
    23e4:	57 fd       	sbrc	r21, 7
    23e6:	05 d0       	rcall	.+10     	; 0x23f2 <__divmodsi4_neg2>
    23e8:	6f db       	rcall	.-2338   	; 0x1ac8 <__udivmodsi4>
    23ea:	07 fc       	sbrc	r0, 7
    23ec:	02 d0       	rcall	.+4      	; 0x23f2 <__divmodsi4_neg2>
    23ee:	46 f4       	brtc	.+16     	; 0x2400 <__divmodsi4_exit>
    23f0:	08 c0       	rjmp	.+16     	; 0x2402 <__negsi2>

000023f2 <__divmodsi4_neg2>:
    23f2:	50 95       	com	r21
    23f4:	40 95       	com	r20
    23f6:	30 95       	com	r19
    23f8:	21 95       	neg	r18
    23fa:	3f 4f       	sbci	r19, 0xFF	; 255
    23fc:	4f 4f       	sbci	r20, 0xFF	; 255
    23fe:	5f 4f       	sbci	r21, 0xFF	; 255

00002400 <__divmodsi4_exit>:
    2400:	08 95       	ret

00002402 <__negsi2>:
    2402:	90 95       	com	r25
    2404:	80 95       	com	r24
    2406:	70 95       	com	r23
    2408:	61 95       	neg	r22
    240a:	7f 4f       	sbci	r23, 0xFF	; 255
    240c:	8f 4f       	sbci	r24, 0xFF	; 255
    240e:	9f 4f       	sbci	r25, 0xFF	; 255
    2410:	08 95       	ret

00002412 <__muluhisi3>:
    2412:	0f d0       	rcall	.+30     	; 0x2432 <__umulhisi3>
    2414:	a5 9f       	mul	r26, r21
    2416:	90 0d       	add	r25, r0
    2418:	b4 9f       	mul	r27, r20
    241a:	90 0d       	add	r25, r0
    241c:	a4 9f       	mul	r26, r20
    241e:	80 0d       	add	r24, r0
    2420:	91 1d       	adc	r25, r1
    2422:	11 24       	eor	r1, r1
    2424:	08 95       	ret

00002426 <__mulshisi3>:
    2426:	b7 ff       	sbrs	r27, 7
    2428:	f4 cf       	rjmp	.-24     	; 0x2412 <__muluhisi3>

0000242a <__mulohisi3>:
    242a:	f3 df       	rcall	.-26     	; 0x2412 <__muluhisi3>
    242c:	82 1b       	sub	r24, r18
    242e:	93 0b       	sbc	r25, r19
    2430:	08 95       	ret

00002432 <__umulhisi3>:
    2432:	a2 9f       	mul	r26, r18
    2434:	b0 01       	movw	r22, r0
    2436:	b3 9f       	mul	r27, r19
    2438:	c0 01       	movw	r24, r0
    243a:	a3 9f       	mul	r26, r19
    243c:	70 0d       	add	r23, r0
    243e:	81 1d       	adc	r24, r1
    2440:	11 24       	eor	r1, r1
    2442:	91 1d       	adc	r25, r1
    2444:	b2 9f       	mul	r27, r18
    2446:	70 0d       	add	r23, r0
    2448:	81 1d       	adc	r24, r1
    244a:	11 24       	eor	r1, r1
    244c:	91 1d       	adc	r25, r1
    244e:	08 95       	ret

00002450 <_exit>:
    2450:	f8 94       	cli

00002452 <__stop_program>:
    2452:	ff cf       	rjmp	.-2      	; 0x2452 <__stop_program>
